//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceInstancesEndpoint
{
        [TestMethod]
        public void DeleteServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""bcf215b9-478f-45c3-b2d1-1252a80d7c46"",
    ""url"": ""/v2/service_instances/bcf215b9-478f-45c3-b2d1-1252a80d7c46"",
    ""created_at"": ""2015-07-29T12:47:16Z"",
    ""updated_at"": ""2015-07-29T12:47:16Z""
  },
  ""entity"": {
    ""name"": ""name-185"",
    ""credentials"": {
      ""creds-key-106"": ""creds-val-106""
    },
    ""service_plan_guid"": ""e990ef65-90c5-4b0c-9f40-12a9abf122b8"",
    ""space_guid"": ""1b1f76bd-1b2d-43b9-8ac1-cb88dc1af4cf"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""delete"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2015-07-29T12:47:16Z""
    },
    ""space_url"": ""/v2/spaces/1b1f76bd-1b2d-43b9-8ac1-cb88dc1af4cf"",
    ""service_plan_url"": ""/v2/service_plans/e990ef65-90c5-4b0c-9f40-12a9abf122b8"",
    ""service_bindings_url"": ""/v2/service_instances/bcf215b9-478f-45c3-b2d1-1252a80d7c46/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/bcf215b9-478f-45c3-b2d1-1252a80d7c46/service_keys""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.DeleteServiceInstance(guid).Result;


                Assert.AreEqual("bcf215b9-478f-45c3-b2d1-1252a80d7c46", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/bcf215b9-478f-45c3-b2d1-1252a80d7c46", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-185", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("e990ef65-90c5-4b0c-9f40-12a9abf122b8", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("1b1f76bd-1b2d-43b9-8ac1-cb88dc1af4cf", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/1b1f76bd-1b2d-43b9-8ac1-cb88dc1af4cf", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/e990ef65-90c5-4b0c-9f40-12a9abf122b8", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/bcf215b9-478f-45c3-b2d1-1252a80d7c46/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/bcf215b9-478f-45c3-b2d1-1252a80d7c46/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceInstancesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""56f54a14-da03-46db-a859-9c064ae5761e"",
        ""url"": ""/v2/service_instances/56f54a14-da03-46db-a859-9c064ae5761e"",
        ""created_at"": ""2015-07-29T12:47:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-157"",
        ""credentials"": {
          ""creds-key-94"": ""creds-val-94""
        },
        ""service_plan_guid"": ""87703454-1ed7-4507-abf4-eee0900beea0"",
        ""space_guid"": ""80a43bbd-ee6e-4937-8859-2cea223834aa"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": {
          ""type"": ""create"",
          ""state"": ""succeeded"",
          ""description"": ""service broker-provided description"",
          ""updated_at"": ""2015-07-29T12:47:15Z""
        },
        ""space_url"": ""/v2/spaces/80a43bbd-ee6e-4937-8859-2cea223834aa"",
        ""service_plan_url"": ""/v2/service_plans/87703454-1ed7-4507-abf4-eee0900beea0"",
        ""service_bindings_url"": ""/v2/service_instances/56f54a14-da03-46db-a859-9c064ae5761e/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/56f54a14-da03-46db-a859-9c064ae5761e/service_keys""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceInstances.ListAllServiceInstances().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("56f54a14-da03-46db-a859-9c064ae5761e", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/56f54a14-da03-46db-a859-9c064ae5761e", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-157", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("87703454-1ed7-4507-abf4-eee0900beea0", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("80a43bbd-ee6e-4937-8859-2cea223834aa", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("/v2/spaces/80a43bbd-ee6e-4937-8859-2cea223834aa", TestUtil.ToTestableString(obj[0].SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/87703454-1ed7-4507-abf4-eee0900beea0", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/56f54a14-da03-46db-a859-9c064ae5761e/service_bindings", TestUtil.ToTestableString(obj[0].ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/56f54a14-da03-46db-a859-9c064ae5761e/service_keys", TestUtil.ToTestableString(obj[0].ServiceKeysUrl), true);

            }
        }

        [TestMethod]
        public void CreateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""f12b6bc9-5a44-43f1-8352-8aa08f8362ca"",
    ""url"": ""/v2/service_instances/f12b6bc9-5a44-43f1-8352-8aa08f8362ca"",
    ""created_at"": ""2015-07-29T12:47:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-service-instance"",
    ""credentials"": {

    },
    ""service_plan_guid"": ""37498cb7-fa45-48c9-8829-38dfd86f562c"",
    ""space_guid"": ""5d55a062-a42c-4ba4-9151-17e49b60e107"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2015-07-29T12:47:16Z""
    },
    ""space_url"": ""/v2/spaces/5d55a062-a42c-4ba4-9151-17e49b60e107"",
    ""service_plan_url"": ""/v2/service_plans/37498cb7-fa45-48c9-8829-38dfd86f562c"",
    ""service_bindings_url"": ""/v2/service_instances/f12b6bc9-5a44-43f1-8352-8aa08f8362ca/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/f12b6bc9-5a44-43f1-8352-8aa08f8362ca/service_keys""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceInstanceRequest value = new CreateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.CreateServiceInstance(value).Result;


                Assert.AreEqual("f12b6bc9-5a44-43f1-8352-8aa08f8362ca", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/f12b6bc9-5a44-43f1-8352-8aa08f8362ca", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("my-service-instance", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("37498cb7-fa45-48c9-8829-38dfd86f562c", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("5d55a062-a42c-4ba4-9151-17e49b60e107", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/5d55a062-a42c-4ba4-9151-17e49b60e107", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/37498cb7-fa45-48c9-8829-38dfd86f562c", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/f12b6bc9-5a44-43f1-8352-8aa08f8362ca/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/f12b6bc9-5a44-43f1-8352-8aa08f8362ca/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);

            }
        }

        [TestMethod]
        public void UpdateServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""378fe146-70f9-486b-ba28-5258e80ad054"",
    ""url"": ""/v2/service_instances/378fe146-70f9-486b-ba28-5258e80ad054"",
    ""created_at"": ""2015-07-29T12:47:15Z"",
    ""updated_at"": ""2015-07-29T12:47:15Z""
  },
  ""entity"": {
    ""name"": ""name-163"",
    ""credentials"": {
      ""creds-key-97"": ""creds-val-97""
    },
    ""service_plan_guid"": ""fe732974-062c-448f-9316-7f63f3ba598c"",
    ""space_guid"": ""eab20281-b65a-48bf-9c91-00a71c05df2f"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""update"",
      ""state"": ""in progress"",
      ""description"": """",
      ""updated_at"": ""2015-07-29T12:47:15Z""
    },
    ""space_url"": ""/v2/spaces/eab20281-b65a-48bf-9c91-00a71c05df2f"",
    ""service_plan_url"": ""/v2/service_plans/fe732974-062c-448f-9316-7f63f3ba598c"",
    ""service_bindings_url"": ""/v2/service_instances/378fe146-70f9-486b-ba28-5258e80ad054/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/378fe146-70f9-486b-ba28-5258e80ad054/service_keys""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)202;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServiceInstanceRequest value = new UpdateServiceInstanceRequest();


                var obj = cfClient.ServiceInstances.UpdateServiceInstance(guid, value).Result;


                Assert.AreEqual("378fe146-70f9-486b-ba28-5258e80ad054", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/378fe146-70f9-486b-ba28-5258e80ad054", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-163", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("fe732974-062c-448f-9316-7f63f3ba598c", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("eab20281-b65a-48bf-9c91-00a71c05df2f", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/eab20281-b65a-48bf-9c91-00a71c05df2f", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/fe732974-062c-448f-9316-7f63f3ba598c", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/378fe146-70f9-486b-ba28-5258e80ad054/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/378fe146-70f9-486b-ba28-5258e80ad054/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsForServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3b98869f-a00c-43cf-a85b-c7ef5479ce89"",
        ""url"": ""/v2/service_bindings/3b98869f-a00c-43cf-a85b-c7ef5479ce89"",
        ""created_at"": ""2015-07-29T12:47:15Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""9abcf929-9543-4a7a-a5fa-2fb85070c9aa"",
        ""service_instance_guid"": ""a7eb8ea8-9c32-4161-9be7-423bad3a4c00"",
        ""credentials"": {
          ""creds-key-91"": ""creds-val-91""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/9abcf929-9543-4a7a-a5fa-2fb85070c9aa"",
        ""service_instance_url"": ""/v2/service_instances/a7eb8ea8-9c32-4161-9be7-423bad3a4c00""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.ListAllServiceBindingsForServiceInstance(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3b98869f-a00c-43cf-a85b-c7ef5479ce89", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/3b98869f-a00c-43cf-a85b-c7ef5479ce89", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("9abcf929-9543-4a7a-a5fa-2fb85070c9aa", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("a7eb8ea8-9c32-4161-9be7-423bad3a4c00", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/9abcf929-9543-4a7a-a5fa-2fb85070c9aa", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/a7eb8ea8-9c32-4161-9be7-423bad3a4c00", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""changed_count"":1}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? service_plan_guid = Guid.NewGuid();

                MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest value = new MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimentalRequest();


                var obj = cfClient.ServiceInstances.MigrateServiceInstancesFromOneServicePlanToAnotherServicePlanExperimental(service_plan_guid, value).Result;


                Assert.AreEqual("1", TestUtil.ToTestableString(obj.ChangedCount), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""46de77a0-1004-41f2-bd57-7c35c4aaec9b"",
    ""url"": ""/v2/service_instances/46de77a0-1004-41f2-bd57-7c35c4aaec9b"",
    ""created_at"": ""2015-07-29T12:47:16Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-179"",
    ""credentials"": {
      ""creds-key-103"": ""creds-val-103""
    },
    ""service_plan_guid"": ""0eaebc8e-3e4a-4f05-bf7c-fbb5521eea91"",
    ""space_guid"": ""8d31e322-da98-4672-a735-49e22b85b64e"",
    ""gateway_data"": null,
    ""dashboard_url"": null,
    ""type"": ""managed_service_instance"",
    ""last_operation"": {
      ""type"": ""create"",
      ""state"": ""succeeded"",
      ""description"": ""service broker-provided description"",
      ""updated_at"": ""2015-07-29T12:47:16Z""
    },
    ""space_url"": ""/v2/spaces/8d31e322-da98-4672-a735-49e22b85b64e"",
    ""service_plan_url"": ""/v2/service_plans/0eaebc8e-3e4a-4f05-bf7c-fbb5521eea91"",
    ""service_bindings_url"": ""/v2/service_instances/46de77a0-1004-41f2-bd57-7c35c4aaec9b/service_bindings"",
    ""service_keys_url"": ""/v2/service_instances/46de77a0-1004-41f2-bd57-7c35c4aaec9b/service_keys""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrieveServiceInstance(guid).Result;


                Assert.AreEqual("46de77a0-1004-41f2-bd57-7c35c4aaec9b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_instances/46de77a0-1004-41f2-bd57-7c35c4aaec9b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-179", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("0eaebc8e-3e4a-4f05-bf7c-fbb5521eea91", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("8d31e322-da98-4672-a735-49e22b85b64e", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.DashboardUrl), true);
                Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("/v2/spaces/8d31e322-da98-4672-a735-49e22b85b64e", TestUtil.ToTestableString(obj.SpaceUrl), true);
                Assert.AreEqual("/v2/service_plans/0eaebc8e-3e4a-4f05-bf7c-fbb5521eea91", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/service_instances/46de77a0-1004-41f2-bd57-7c35c4aaec9b/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
                Assert.AreEqual("/v2/service_instances/46de77a0-1004-41f2-bd57-7c35c4aaec9b/service_keys", TestUtil.ToTestableString(obj.ServiceKeysUrl), true);

            }
        }

        [TestMethod]
        public void RetrievingPermissionsOnServiceInstanceTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""manage"":true}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceInstances.RetrievingPermissionsOnServiceInstance(guid).Result;


                Assert.AreEqual("true", TestUtil.ToTestableString(obj.Manage), true);

            }
        }

    }
}