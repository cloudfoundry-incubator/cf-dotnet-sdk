//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBindingsEndpoint
{
        [TestMethod]
        public void CreateServiceBindingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""6199d048-4181-4a39-99d1-074d24faff5d"",
    ""url"": ""/v2/service_bindings/6199d048-4181-4a39-99d1-074d24faff5d"",
    ""created_at"": ""2016-02-05T12:14:45Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_guid"": ""0995fb3b-90e1-4624-841c-29df20215f0b"",
    ""service_instance_guid"": ""0a727456-ae9b-4ceb-8c2a-6f9e9d7a4d6c"",
    ""credentials"": {
      ""creds-key-352"": ""creds-val-352""
    },
    ""binding_options"": {

    },
    ""gateway_data"": null,
    ""gateway_name"": """",
    ""syslog_drain_url"": null,
    ""app_url"": ""/v2/apps/0995fb3b-90e1-4624-841c-29df20215f0b"",
    ""service_instance_url"": ""/v2/user_provided_service_instances/0a727456-ae9b-4ceb-8c2a-6f9e9d7a4d6c""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServiceBindingRequest value = new CreateServiceBindingRequest();


                var obj = cfClient.ServiceBindings.CreateServiceBinding(value).Result;


                Assert.AreEqual("6199d048-4181-4a39-99d1-074d24faff5d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/6199d048-4181-4a39-99d1-074d24faff5d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("0995fb3b-90e1-4624-841c-29df20215f0b", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("0a727456-ae9b-4ceb-8c2a-6f9e9d7a4d6c", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/0995fb3b-90e1-4624-841c-29df20215f0b", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/user_provided_service_instances/0a727456-ae9b-4ceb-8c2a-6f9e9d7a4d6c", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServiceBindingsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3ef0e895-d081-4013-8d52-b4fd0b0b84ef"",
        ""url"": ""/v2/service_bindings/3ef0e895-d081-4013-8d52-b4fd0b0b84ef"",
        ""created_at"": ""2016-02-05T12:14:45Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""c57e6bd6-9d71-48dd-bf03-3d765463651c"",
        ""service_instance_guid"": ""977bf1bd-8caf-4309-a280-edb0ef2ac0df"",
        ""credentials"": {
          ""creds-key-342"": ""creds-val-342""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/c57e6bd6-9d71-48dd-bf03-3d765463651c"",
        ""service_instance_url"": ""/v2/service_instances/977bf1bd-8caf-4309-a280-edb0ef2ac0df""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceBindings.ListAllServiceBindings().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("3ef0e895-d081-4013-8d52-b4fd0b0b84ef", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/3ef0e895-d081-4013-8d52-b4fd0b0b84ef", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:45Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("c57e6bd6-9d71-48dd-bf03-3d765463651c", TestUtil.ToTestableString(obj[0].AppGuid), true);
                Assert.AreEqual("977bf1bd-8caf-4309-a280-edb0ef2ac0df", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/c57e6bd6-9d71-48dd-bf03-3d765463651c", TestUtil.ToTestableString(obj[0].AppUrl), true);
                Assert.AreEqual("/v2/service_instances/977bf1bd-8caf-4309-a280-edb0ef2ac0df", TestUtil.ToTestableString(obj[0].ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServiceBindingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""351ae57c-a211-4799-b4d0-3d6a97bf73d0"",
    ""url"": ""/v2/service_bindings/351ae57c-a211-4799-b4d0-3d6a97bf73d0"",
    ""created_at"": ""2016-02-05T12:14:45Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""app_guid"": ""27af7843-947a-4c19-8620-7081cee27a37"",
    ""service_instance_guid"": ""6baa5515-1b47-4695-af92-37193148a37c"",
    ""credentials"": {
      ""creds-key-346"": ""creds-val-346""
    },
    ""binding_options"": {

    },
    ""gateway_data"": null,
    ""gateway_name"": """",
    ""syslog_drain_url"": null,
    ""app_url"": ""/v2/apps/27af7843-947a-4c19-8620-7081cee27a37"",
    ""service_instance_url"": ""/v2/service_instances/6baa5515-1b47-4695-af92-37193148a37c""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceBindings.RetrieveServiceBinding(guid).Result;


                Assert.AreEqual("351ae57c-a211-4799-b4d0-3d6a97bf73d0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_bindings/351ae57c-a211-4799-b4d0-3d6a97bf73d0", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:45Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("27af7843-947a-4c19-8620-7081cee27a37", TestUtil.ToTestableString(obj.AppGuid), true);
                Assert.AreEqual("6baa5515-1b47-4695-af92-37193148a37c", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayData), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.GatewayName), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
                Assert.AreEqual("/v2/apps/27af7843-947a-4c19-8620-7081cee27a37", TestUtil.ToTestableString(obj.AppUrl), true);
                Assert.AreEqual("/v2/service_instances/6baa5515-1b47-4695-af92-37193148a37c", TestUtil.ToTestableString(obj.ServiceInstanceUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServiceBindingTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServiceBindings.DeleteServiceBinding(guid).Wait();

            }
        }

    }
}