//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedEndpoint
{
        [TestMethod]
        public void DeleteDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.DomainsDeprecated.DeleteDomainDeprecated(guid).Wait();

            }
        }

        [TestMethod]
        public void CreatesSharedDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""011a41a6-c7f3-4d62-8c30-9e30fa695d10"",
    ""url"": ""/v2/domains/011a41a6-c7f3-4d62-8c30-9e30fa695d10"",
    ""created_at"": ""2016-02-05T12:14:52Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null,
    ""shared_organizations"": [

    ]
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesSharedDomainDeprecatedRequest value = new CreatesSharedDomainDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesSharedDomainDeprecated(value).Result;


                Assert.AreEqual("011a41a6-c7f3-4d62-8c30-9e30fa695d10", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/011a41a6-c7f3-4d62-8c30-9e30fa695d10", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);

            }
        }

        [TestMethod]
        public void CreatesDomainOwnedByGivenOrganizationDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""021b31e8-6553-40f9-95f9-47f6e2846e2e"",
    ""url"": ""/v2/domains/021b31e8-6553-40f9-95f9-47f6e2846e2e"",
    ""created_at"": ""2016-02-05T12:14:52Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""6c2b57c2-e9a1-41c1-9a7d-8e34cc9fb9c3"",
    ""shared_organizations"": [

    ],
    ""owning_organization_url"": ""/v2/organizations/6c2b57c2-e9a1-41c1-9a7d-8e34cc9fb9c3"",
    ""spaces_url"": ""/v2/domains/021b31e8-6553-40f9-95f9-47f6e2846e2e/spaces""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreatesDomainOwnedByGivenOrganizationDeprecatedRequest value = new CreatesDomainOwnedByGivenOrganizationDeprecatedRequest();


                var obj = cfClient.DomainsDeprecated.CreatesDomainOwnedByGivenOrganizationDeprecated(value).Result;


                Assert.AreEqual("021b31e8-6553-40f9-95f9-47f6e2846e2e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/021b31e8-6553-40f9-95f9-47f6e2846e2e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("6c2b57c2-e9a1-41c1-9a7d-8e34cc9fb9c3", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/6c2b57c2-e9a1-41c1-9a7d-8e34cc9fb9c3", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/021b31e8-6553-40f9-95f9-47f6e2846e2e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);

            }
        }

        [TestMethod]
        public void ListAllSpacesForDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""451ee3f7-9104-48e8-9399-925bc8dc5d29"",
        ""url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29"",
        ""created_at"": ""2016-02-05T12:14:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1988"",
        ""organization_guid"": ""a3f53fb1-ded0-4bb7-8b70-9ab9d8a685e6"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/a3f53fb1-ded0-4bb7-8b70-9ab9d8a685e6"",
        ""developers_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/developers"",
        ""managers_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/managers"",
        ""auditors_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/auditors"",
        ""apps_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/apps"",
        ""routes_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/routes"",
        ""domains_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/domains"",
        ""service_instances_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/service_instances"",
        ""app_events_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/app_events"",
        ""events_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/events"",
        ""security_groups_url"": ""/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/security_groups""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.ListAllSpacesForDomainDeprecated(guid).Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("451ee3f7-9104-48e8-9399-925bc8dc5d29", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("name-1988", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("a3f53fb1-ded0-4bb7-8b70-9ab9d8a685e6", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].SpaceQuotaDefinitionGuid), true);
                Assert.AreEqual("true", TestUtil.ToTestableString(obj[0].AllowSsh), true);
                Assert.AreEqual("/v2/organizations/a3f53fb1-ded0-4bb7-8b70-9ab9d8a685e6", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/developers", TestUtil.ToTestableString(obj[0].DevelopersUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/managers", TestUtil.ToTestableString(obj[0].ManagersUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/auditors", TestUtil.ToTestableString(obj[0].AuditorsUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/apps", TestUtil.ToTestableString(obj[0].AppsUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/routes", TestUtil.ToTestableString(obj[0].RoutesUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/domains", TestUtil.ToTestableString(obj[0].DomainsUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/service_instances", TestUtil.ToTestableString(obj[0].ServiceInstancesUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/app_events", TestUtil.ToTestableString(obj[0].AppEventsUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/events", TestUtil.ToTestableString(obj[0].EventsUrl), true);
                Assert.AreEqual("/v2/spaces/451ee3f7-9104-48e8-9399-925bc8dc5d29/security_groups", TestUtil.ToTestableString(obj[0].SecurityGroupsUrl), true);

            }
        }

        [TestMethod]
        public void ListAllDomainsDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""fc5777a8-42d7-4d12-9515-c08b09042d7b"",
        ""url"": ""/v2/domains/fc5777a8-42d7-4d12-9515-c08b09042d7b"",
        ""created_at"": ""2016-02-05T12:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f7b8e132-776a-410d-b45a-2994e5bc4459"",
        ""url"": ""/v2/domains/f7b8e132-776a-410d-b45a-2994e5bc4459"",
        ""created_at"": ""2016-02-05T12:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""47a98181-cafe-4f81-b4fd-f4c5488352fd"",
        ""url"": ""/v2/domains/47a98181-cafe-4f81-b4fd-f4c5488352fd"",
        ""created_at"": ""2016-02-05T12:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""f9b637cc-ff02-4b38-81e7-51bd2c33a3d1"",
        ""owning_organization_url"": ""/v2/organizations/f9b637cc-ff02-4b38-81e7-51bd2c33a3d1"",
        ""spaces_url"": ""/v2/domains/47a98181-cafe-4f81-b4fd-f4c5488352fd/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""299f0445-90c7-4723-b288-6ea03d8792b7"",
        ""url"": ""/v2/domains/299f0445-90c7-4723-b288-6ea03d8792b7"",
        ""created_at"": ""2016-02-05T12:14:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-57.example.com""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.DomainsDeprecated.ListAllDomainsDeprecated().Result;

                Assert.AreEqual("4", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("fc5777a8-42d7-4d12-9515-c08b09042d7b", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/fc5777a8-42d7-4d12-9515-c08b09042d7b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("f7b8e132-776a-410d-b45a-2994e5bc4459", TestUtil.ToTestableString(obj[1].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/f7b8e132-776a-410d-b45a-2994e5bc4459", TestUtil.ToTestableString(obj[1].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj[1].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("47a98181-cafe-4f81-b4fd-f4c5488352fd", TestUtil.ToTestableString(obj[2].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/47a98181-cafe-4f81-b4fd-f4c5488352fd", TestUtil.ToTestableString(obj[2].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj[2].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[2].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj[2].Name), true);
                Assert.AreEqual("f9b637cc-ff02-4b38-81e7-51bd2c33a3d1", TestUtil.ToTestableString(obj[2].OwningOrganizationGuid), true);
                Assert.AreEqual("/v2/organizations/f9b637cc-ff02-4b38-81e7-51bd2c33a3d1", TestUtil.ToTestableString(obj[2].OwningOrganizationUrl), true);
                Assert.AreEqual("/v2/domains/47a98181-cafe-4f81-b4fd-f4c5488352fd/spaces", TestUtil.ToTestableString(obj[2].SpacesUrl), true);
                Assert.AreEqual("299f0445-90c7-4723-b288-6ea03d8792b7", TestUtil.ToTestableString(obj[3].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/299f0445-90c7-4723-b288-6ea03d8792b7", TestUtil.ToTestableString(obj[3].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj[3].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[3].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-57.example.com", TestUtil.ToTestableString(obj[3].Name), true);

            }
        }

        [TestMethod]
        public void RetrieveDomainDeprecatedTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""9602a316-222d-4aed-b590-df179465af88"",
    ""url"": ""/v2/domains/9602a316-222d-4aed-b590-df179465af88"",
    ""created_at"": ""2016-02-05T12:14:52Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-58.example.com""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.DomainsDeprecated.RetrieveDomainDeprecated(guid).Result;


                Assert.AreEqual("9602a316-222d-4aed-b590-df179465af88", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/domains/9602a316-222d-4aed-b590-df179465af88", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("domain-58.example.com", TestUtil.ToTestableString(obj.Name), true);

            }
        }

    }
}