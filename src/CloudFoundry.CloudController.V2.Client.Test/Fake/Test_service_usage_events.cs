//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceUsageEventsEndpoint
{
        [TestMethod]
        public void PurgeAndReseedServiceUsageEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();


                cfClient.ServiceUsageEvents.PurgeAndReseedServiceUsageEvents().Wait();

            }
        }

        [TestMethod]
        public void RetrieveServiceUsageEventTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3862ac57-d4c5-4bd0-a683-df35601b9759"",
    ""url"": ""/v2/service_usage_events/f3cb64d2-05d6-4478-94c4-cca48fcf380a"",
    ""created_at"": ""2016-05-05T14:15:37Z""
  },
  ""entity"": {
    ""state"": ""CREATED"",
    ""org_guid"": ""3862ac57-d4c5-4bd0-a683-df35601b9759"",
    ""space_guid"": ""3862ac57-d4c5-4bd0-a683-df35601b9759"",
    ""space_name"": ""name-2202"",
    ""service_instance_guid"": ""3862ac57-d4c5-4bd0-a683-df35601b9759"",
    ""service_instance_name"": ""name-2203"",
    ""service_instance_type"": ""type-7"",
    ""service_plan_guid"": ""3862ac57-d4c5-4bd0-a683-df35601b9759"",
    ""service_plan_name"": ""name-2204"",
    ""service_guid"": ""3862ac57-d4c5-4bd0-a683-df35601b9759"",
    ""service_label"": ""label-72""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServiceUsageEvents.RetrieveServiceUsageEvent(guid).Result;


                Assert.AreEqual("3862ac57-d4c5-4bd0-a683-df35601b9759", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_usage_events/f3cb64d2-05d6-4478-94c4-cca48fcf380a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-05T14:15:37Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("CREATED", TestUtil.ToTestableString(obj.State), true);
                Assert.AreEqual("3862ac57-d4c5-4bd0-a683-df35601b9759", TestUtil.ToTestableString(obj.OrgGuid), true);
                Assert.AreEqual("3862ac57-d4c5-4bd0-a683-df35601b9759", TestUtil.ToTestableString(obj.SpaceGuid), true);
                Assert.AreEqual("name-2202", TestUtil.ToTestableString(obj.SpaceName), true);
                Assert.AreEqual("3862ac57-d4c5-4bd0-a683-df35601b9759", TestUtil.ToTestableString(obj.ServiceInstanceGuid), true);
                Assert.AreEqual("name-2203", TestUtil.ToTestableString(obj.ServiceInstanceName), true);
                Assert.AreEqual("type-7", TestUtil.ToTestableString(obj.ServiceInstanceType), true);
                Assert.AreEqual("3862ac57-d4c5-4bd0-a683-df35601b9759", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("name-2204", TestUtil.ToTestableString(obj.ServicePlanName), true);
                Assert.AreEqual("3862ac57-d4c5-4bd0-a683-df35601b9759", TestUtil.ToTestableString(obj.ServiceGuid), true);
                Assert.AreEqual("label-72", TestUtil.ToTestableString(obj.ServiceLabel), true);

            }
        }

        [TestMethod]
        public void ListServiceUsageEventsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/service_usage_events?after_guid=5247fe85-4f2e-4182-b3d8-0a73cb46a3f1=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1bb55a24-9bb1-450e-aa36-9d88d4508674"",
        ""url"": ""/v2/service_usage_events/00ab0f65-7960-457a-9c93-54f1463e123b"",
        ""created_at"": ""2016-05-05T14:15:28Z""
      },
      ""entity"": {
        ""state"": ""CREATED"",
        ""org_guid"": ""1bb55a24-9bb1-450e-aa36-9d88d4508674"",
        ""space_guid"": ""1bb55a24-9bb1-450e-aa36-9d88d4508674"",
        ""space_name"": ""name-2187"",
        ""service_instance_guid"": ""1bb55a24-9bb1-450e-aa36-9d88d4508674"",
        ""service_instance_name"": ""name-2188"",
        ""service_instance_type"": ""type-2"",
        ""service_plan_guid"": ""1bb55a24-9bb1-450e-aa36-9d88d4508674"",
        ""service_plan_name"": ""name-2189"",
        ""service_guid"": ""1bb55a24-9bb1-450e-aa36-9d88d4508674"",
        ""service_label"": ""label-67""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServiceUsageEvents.ListServiceUsageEvents().Result;

                Assert.AreEqual("2", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("2", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("/v2/service_usage_events?after_guid=5247fe85-4f2e-4182-b3d8-0a73cb46a3f1=asc=2=1", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("1bb55a24-9bb1-450e-aa36-9d88d4508674", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_usage_events/00ab0f65-7960-457a-9c93-54f1463e123b", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-05-05T14:15:28Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("CREATED", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("1bb55a24-9bb1-450e-aa36-9d88d4508674", TestUtil.ToTestableString(obj[0].OrgGuid), true);
                Assert.AreEqual("1bb55a24-9bb1-450e-aa36-9d88d4508674", TestUtil.ToTestableString(obj[0].SpaceGuid), true);
                Assert.AreEqual("name-2187", TestUtil.ToTestableString(obj[0].SpaceName), true);
                Assert.AreEqual("1bb55a24-9bb1-450e-aa36-9d88d4508674", TestUtil.ToTestableString(obj[0].ServiceInstanceGuid), true);
                Assert.AreEqual("name-2188", TestUtil.ToTestableString(obj[0].ServiceInstanceName), true);
                Assert.AreEqual("type-2", TestUtil.ToTestableString(obj[0].ServiceInstanceType), true);
                Assert.AreEqual("1bb55a24-9bb1-450e-aa36-9d88d4508674", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("name-2189", TestUtil.ToTestableString(obj[0].ServicePlanName), true);
                Assert.AreEqual("1bb55a24-9bb1-450e-aa36-9d88d4508674", TestUtil.ToTestableString(obj[0].ServiceGuid), true);
                Assert.AreEqual("label-67", TestUtil.ToTestableString(obj[0].ServiceLabel), true);

            }
        }

    }
}