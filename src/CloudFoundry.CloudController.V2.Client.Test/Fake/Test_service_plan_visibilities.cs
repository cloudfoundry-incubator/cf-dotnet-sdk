//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2a497892-ec6c-4a7d-90da-19c2c1040d87"",
        ""url"": ""/v2/service_plan_visibilities/2a497892-ec6c-4a7d-90da-19c2c1040d87"",
        ""created_at"": ""2015-07-29T12:47:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""38602427-1868-4c10-9ff0-054dcb7aa18a"",
        ""organization_guid"": ""c4e4cc30-eb73-4346-b4be-6e50d21de48c"",
        ""service_plan_url"": ""/v2/service_plans/38602427-1868-4c10-9ff0-054dcb7aa18a"",
        ""organization_url"": ""/v2/organizations/c4e4cc30-eb73-4346-b4be-6e50d21de48c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("2a497892-ec6c-4a7d-90da-19c2c1040d87", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/2a497892-ec6c-4a7d-90da-19c2c1040d87", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("38602427-1868-4c10-9ff0-054dcb7aa18a", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("c4e4cc30-eb73-4346-b4be-6e50d21de48c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/38602427-1868-4c10-9ff0-054dcb7aa18a", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/c4e4cc30-eb73-4346-b4be-6e50d21de48c", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""33514d39-a5a4-41a5-84c4-bb7e1867c44e"",
    ""url"": ""/v2/service_plan_visibilities/33514d39-a5a4-41a5-84c4-bb7e1867c44e"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""c5ee0319-3c8b-4e63-aaa6-c0e1bc7ba3d6"",
    ""organization_guid"": ""705b972a-8416-40f9-8647-40daa9ccde0f"",
    ""service_plan_url"": ""/v2/service_plans/c5ee0319-3c8b-4e63-aaa6-c0e1bc7ba3d6"",
    ""organization_url"": ""/v2/organizations/705b972a-8416-40f9-8647-40daa9ccde0f""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("33514d39-a5a4-41a5-84c4-bb7e1867c44e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/33514d39-a5a4-41a5-84c4-bb7e1867c44e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("c5ee0319-3c8b-4e63-aaa6-c0e1bc7ba3d6", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("705b972a-8416-40f9-8647-40daa9ccde0f", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/c5ee0319-3c8b-4e63-aaa6-c0e1bc7ba3d6", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/705b972a-8416-40f9-8647-40daa9ccde0f", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""3ff81d35-116d-40f0-ac95-008162b4bcc7"",
    ""url"": ""/v2/service_plan_visibilities/3ff81d35-116d-40f0-ac95-008162b4bcc7"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": ""2015-07-29T12:47:20Z""
  },
  ""entity"": {
    ""service_plan_guid"": ""f9eaada9-5f8e-4c99-a67d-9b9f0c7ad914"",
    ""organization_guid"": ""0f993e91-94c4-41ef-bc83-56a00d771b5a"",
    ""service_plan_url"": ""/v2/service_plans/f9eaada9-5f8e-4c99-a67d-9b9f0c7ad914"",
    ""organization_url"": ""/v2/organizations/0f993e91-94c4-41ef-bc83-56a00d771b5a""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("3ff81d35-116d-40f0-ac95-008162b4bcc7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/3ff81d35-116d-40f0-ac95-008162b4bcc7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("f9eaada9-5f8e-4c99-a67d-9b9f0c7ad914", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("0f993e91-94c4-41ef-bc83-56a00d771b5a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/f9eaada9-5f8e-4c99-a67d-9b9f0c7ad914", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/0f993e91-94c4-41ef-bc83-56a00d771b5a", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""f6ff246e-856d-4b99-9432-21000475036a"",
    ""url"": ""/v2/service_plan_visibilities/f6ff246e-856d-4b99-9432-21000475036a"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""66404cf3-1ab7-4896-811a-aec5dc6cab9f"",
    ""organization_guid"": ""ac9620e6-4838-40d1-a182-ce3c5719616f"",
    ""service_plan_url"": ""/v2/service_plans/66404cf3-1ab7-4896-811a-aec5dc6cab9f"",
    ""organization_url"": ""/v2/organizations/ac9620e6-4838-40d1-a182-ce3c5719616f""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("f6ff246e-856d-4b99-9432-21000475036a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/f6ff246e-856d-4b99-9432-21000475036a", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("66404cf3-1ab7-4896-811a-aec5dc6cab9f", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("ac9620e6-4838-40d1-a182-ce3c5719616f", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/66404cf3-1ab7-4896-811a-aec5dc6cab9f", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/ac9620e6-4838-40d1-a182-ce3c5719616f", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}