//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V2.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlanVisibilitiesEndpoint
{
        [TestMethod]
        public void UpdateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2e4146d6-71f0-4469-8339-1ff53808c78f"",
    ""url"": ""/v2/service_plan_visibilities/2e4146d6-71f0-4469-8339-1ff53808c78f"",
    ""created_at"": ""2016-02-05T12:14:50Z"",
    ""updated_at"": ""2016-02-05T12:14:50Z""
  },
  ""entity"": {
    ""service_plan_guid"": ""ceb7c49d-fb92-4e46-9380-f4622c34bd82"",
    ""organization_guid"": ""c7c03be7-24c1-4c63-b537-4b9df0247605"",
    ""service_plan_url"": ""/v2/service_plans/ceb7c49d-fb92-4e46-9380-f4622c34bd82"",
    ""organization_url"": ""/v2/organizations/c7c03be7-24c1-4c63-b537-4b9df0247605""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateServicePlanVisibilityRequest value = new UpdateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.UpdateServicePlanVisibility(guid, value).Result;


                Assert.AreEqual("2e4146d6-71f0-4469-8339-1ff53808c78f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/2e4146d6-71f0-4469-8339-1ff53808c78f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("2016-02-05T12:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("ceb7c49d-fb92-4e46-9380-f4622c34bd82", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("c7c03be7-24c1-4c63-b537-4b9df0247605", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/ceb7c49d-fb92-4e46-9380-f4622c34bd82", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/c7c03be7-24c1-4c63-b537-4b9df0247605", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void ListAllServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b5c1ff4d-1d84-4d11-a013-2a8055213179"",
        ""url"": ""/v2/service_plan_visibilities/b5c1ff4d-1d84-4d11-a013-2a8055213179"",
        ""created_at"": ""2016-02-05T12:14:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""service_plan_guid"": ""40c36661-766a-4a9c-8e21-1676b08c6aaa"",
        ""organization_guid"": ""d61131ac-dfe8-4862-ab96-08357540761c"",
        ""service_plan_url"": ""/v2/service_plans/40c36661-766a-4a9c-8e21-1676b08c6aaa"",
        ""organization_url"": ""/v2/organizations/d61131ac-dfe8-4862-ab96-08357540761c""
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ServicePlanVisibilities.ListAllServicePlanVisibilities().Result;

                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalResults), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Properties.TotalPages), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.PreviousUrl), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Properties.NextUrl), true);
                Assert.AreEqual("b5c1ff4d-1d84-4d11-a013-2a8055213179", TestUtil.ToTestableString(obj[0].EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/b5c1ff4d-1d84-4d11-a013-2a8055213179", TestUtil.ToTestableString(obj[0].EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:50Z", TestUtil.ToTestableString(obj[0].EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("40c36661-766a-4a9c-8e21-1676b08c6aaa", TestUtil.ToTestableString(obj[0].ServicePlanGuid), true);
                Assert.AreEqual("d61131ac-dfe8-4862-ab96-08357540761c", TestUtil.ToTestableString(obj[0].OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/40c36661-766a-4a9c-8e21-1676b08c6aaa", TestUtil.ToTestableString(obj[0].ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/d61131ac-dfe8-4862-ab96-08357540761c", TestUtil.ToTestableString(obj[0].OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void CreateServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""faa615b8-cd98-45d6-ab73-574771f5cae7"",
    ""url"": ""/v2/service_plan_visibilities/faa615b8-cd98-45d6-ab73-574771f5cae7"",
    ""created_at"": ""2016-02-05T12:14:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""25b7e4d5-037c-414b-8467-9c496fdd8850"",
    ""organization_guid"": ""d59a36a5-83aa-4b37-bca3-41bd770a7c52"",
    ""service_plan_url"": ""/v2/service_plans/25b7e4d5-037c-414b-8467-9c496fdd8850"",
    ""organization_url"": ""/v2/organizations/d59a36a5-83aa-4b37-bca3-41bd770a7c52""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateServicePlanVisibilityRequest value = new CreateServicePlanVisibilityRequest();


                var obj = cfClient.ServicePlanVisibilities.CreateServicePlanVisibility(value).Result;


                Assert.AreEqual("faa615b8-cd98-45d6-ab73-574771f5cae7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/faa615b8-cd98-45d6-ab73-574771f5cae7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("25b7e4d5-037c-414b-8467-9c496fdd8850", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("d59a36a5-83aa-4b37-bca3-41bd770a7c52", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/25b7e4d5-037c-414b-8467-9c496fdd8850", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/d59a36a5-83aa-4b37-bca3-41bd770a7c52", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

        [TestMethod]
        public void DeleteServicePlanVisibilitiesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.ServicePlanVisibilities.DeleteServicePlanVisibilities(guid).Wait();

            }
        }

        [TestMethod]
        public void RetrieveServicePlanVisibilityTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""metadata"": {
    ""guid"": ""2710f6a9-c4bb-4202-ab0e-156a4a952831"",
    ""url"": ""/v2/service_plan_visibilities/2710f6a9-c4bb-4202-ab0e-156a4a952831"",
    ""created_at"": ""2016-02-05T12:14:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""service_plan_guid"": ""d87e58ae-4c23-4fb5-a341-76e037b64ab4"",
    ""organization_guid"": ""29aa1ac5-f43b-497b-9f45-ebd5c3cbe660"",
    ""service_plan_url"": ""/v2/service_plans/d87e58ae-4c23-4fb5-a341-76e037b64ab4"",
    ""organization_url"": ""/v2/organizations/29aa1ac5-f43b-497b-9f45-ebd5c3cbe660""
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ServicePlanVisibilities.RetrieveServicePlanVisibility(guid).Result;


                Assert.AreEqual("2710f6a9-c4bb-4202-ab0e-156a4a952831", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
                Assert.AreEqual("/v2/service_plan_visibilities/2710f6a9-c4bb-4202-ab0e-156a4a952831", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
                Assert.AreEqual("2016-02-05T12:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
                Assert.AreEqual("d87e58ae-4c23-4fb5-a341-76e037b64ab4", TestUtil.ToTestableString(obj.ServicePlanGuid), true);
                Assert.AreEqual("29aa1ac5-f43b-497b-9f45-ebd5c3cbe660", TestUtil.ToTestableString(obj.OrganizationGuid), true);
                Assert.AreEqual("/v2/service_plans/d87e58ae-4c23-4fb5-a341-76e037b64ab4", TestUtil.ToTestableString(obj.ServicePlanUrl), true);
                Assert.AreEqual("/v2/organizations/29aa1ac5-f43b-497b-9f45-ebd5c3cbe660", TestUtil.ToTestableString(obj.OrganizationUrl), true);

            }
        }

    }
}