//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 6,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""url"": ""/v2/shared_domains/9977ee99-36ac-47c4-84b4-55a553760d4d"",
        ""created_at"": ""2017-01-04T15:58:31Z"",
        ""updated_at"": ""2017-01-04T15:58:31Z""
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""url"": ""/v2/shared_domains/8312af50-0e52-4f3a-be0c-6738ee83fbb6"",
        ""created_at"": ""2017-01-04T15:58:31Z"",
        ""updated_at"": ""2017-01-04T15:58:31Z""
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""url"": ""/v2/shared_domains/a85c74d7-c974-4afe-a5ad-de308c954a6c"",
        ""created_at"": ""2017-01-04T15:58:35Z"",
        ""updated_at"": ""2017-01-04T15:58:35Z""
      },
      ""entity"": {
        ""name"": ""domain-13.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""url"": ""/v2/shared_domains/708cd1c0-9d4f-483b-92d3-d79b56db7393"",
        ""created_at"": ""2017-01-04T15:58:35Z"",
        ""updated_at"": ""2017-01-04T15:58:35Z""
      },
      ""entity"": {
        ""name"": ""domain-14.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""url"": ""/v2/shared_domains/577d016b-298d-492d-aeaa-e3de5b1ab327"",
        ""created_at"": ""2017-01-04T15:58:35Z"",
        ""updated_at"": ""2017-01-04T15:58:35Z""
      },
      ""entity"": {
        ""name"": ""domain-15.example.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""url"": ""/v2/shared_domains/afe7358a-ad96-4ca8-907e-ffbbdc9161a4"",
        ""created_at"": ""2017-01-04T15:58:35Z"",
        ""updated_at"": ""2017-01-04T15:58:35Z""
      },
      ""entity"": {
        ""name"": ""domain-16.example.com"",
        ""router_group_guid"": ""ce26da30-4c8a-4d06-aa89-c6656e91896f"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json, null);

            Assert.AreEqual("6", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/9977ee99-36ac-47c4-84b4-55a553760d4d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:31Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:31Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/8312af50-0e52-4f3a-be0c-6738ee83fbb6", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:31Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:31Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/a85c74d7-c974-4afe-a5ad-de308c954a6c", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-13.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].RouterGroupType), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/708cd1c0-9d4f-483b-92d3-d79b56db7393", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-14.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].RouterGroupType), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/577d016b-298d-492d-aeaa-e3de5b1ab327", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-15.example.com", TestUtil.ToTestableString(page[4].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].RouterGroupType), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[5].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/afe7358a-ad96-4ca8-907e-ffbbdc9161a4", TestUtil.ToTestableString(page[5].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[5].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[5].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-16.example.com", TestUtil.ToTestableString(page[5].Name), true);
            Assert.AreEqual("ce26da30-4c8a-4d06-aa89-c6656e91896f", TestUtil.ToTestableString(page[5].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[5].RouterGroupType), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fd3e6012-2ad1-4e87-9f0e-97b4c406f982"",
    ""url"": ""/v2/shared_domains/9977ee99-36ac-47c4-84b4-55a553760d4d"",
    ""created_at"": ""2017-01-04T15:58:31Z"",
    ""updated_at"": ""2017-01-04T15:58:31Z""
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com"",
    ""router_group_guid"": null,
    ""router_group_type"": null
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("fd3e6012-2ad1-4e87-9f0e-97b4c406f982", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/9977ee99-36ac-47c4-84b4-55a553760d4d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:31Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:31Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }

        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b366756f-6e8c-4833-b6e0-21b10a6d467c"",
        ""url"": ""/v2/shared_domains/0196f5ef-ea72-4334-9d41-ce6add90cc4d"",
        ""created_at"": ""2017-01-04T15:58:35Z"",
        ""updated_at"": ""2017-01-04T15:58:35Z""
      },
      ""entity"": {
        ""name"": ""shared-domain.com"",
        ""router_group_guid"": ""b366756f-6e8c-4833-b6e0-21b10a6d467c"",
        ""router_group_type"": ""tcp""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b366756f-6e8c-4833-b6e0-21b10a6d467c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/0196f5ef-ea72-4334-9d41-ce6add90cc4d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("b366756f-6e8c-4833-b6e0-21b10a6d467c", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(page[0].RouterGroupType), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""56d05efc-145d-4001-a285-292e5ab188eb"",
    ""url"": ""/v2/shared_domains/cdefe451-c061-4f7e-9ab9-7c27e17eecb2"",
    ""created_at"": ""2017-01-04T15:58:35Z"",
    ""updated_at"": ""2017-01-04T15:58:35Z""
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""router_group_guid"": ""56d05efc-145d-4001-a285-292e5ab188eb"",
    ""router_group_type"": ""tcp""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("56d05efc-145d-4001-a285-292e5ab188eb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/cdefe451-c061-4f7e-9ab9-7c27e17eecb2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:35Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("56d05efc-145d-4001-a285-292e5ab188eb", TestUtil.ToTestableString(obj.RouterGroupGuid), true);
            Assert.AreEqual("tcp", TestUtil.ToTestableString(obj.RouterGroupType), true);
        }
    }
}
