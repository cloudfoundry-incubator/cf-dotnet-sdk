//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SharedDomainsTest
    {


        [TestMethod]
        public void TestFilterSharedDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4828f2ab-c0ac-4b7a-bf7d-dc7f9de5e192"",
        ""url"": ""/v2/shared_domains/4828f2ab-c0ac-4b7a-bf7d-dc7f9de5e192"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""shared-domain.com""
      }
    }
  ]
}";

            PagedResponseCollection<FilterSharedDomainsByNameResponse> page = Utilities.DeserializePage<FilterSharedDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4828f2ab-c0ac-4b7a-bf7d-dc7f9de5e192", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/4828f2ab-c0ac-4b7a-bf7d-dc7f9de5e192", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("shared-domain.com", TestUtil.ToTestableString(page[0].Name), true);
        }

        [TestMethod]
        public void TestCreateSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""aca727c6-cf78-46cb-8b3e-0f1133fcf898"",
    ""url"": ""/v2/shared_domains/aca727c6-cf78-46cb-8b3e-0f1133fcf898"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com""
  }
}";

            CreateSharedDomainResponse obj = Utilities.DeserializeJson<CreateSharedDomainResponse>(json);

            Assert.AreEqual("aca727c6-cf78-46cb-8b3e-0f1133fcf898", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/aca727c6-cf78-46cb-8b3e-0f1133fcf898", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestListAllSharedDomainsResponse()
        {
            string json = @"{
  ""total_results"": 5,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",
        ""url"": ""/v2/shared_domains/dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c3e64ca8-e7c1-4602-b527-3fbb4ed985f1"",
        ""url"": ""/v2/shared_domains/c3e64ca8-e7c1-4602-b527-3fbb4ed985f1"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""a66b691a-893b-47d4-a774-8c7b72aabe4f"",
        ""url"": ""/v2/shared_domains/a66b691a-893b-47d4-a774-8c7b72aabe4f"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-32.example.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""ccd3bff6-bbe2-48bb-bf78-35b101d6066c"",
        ""url"": ""/v2/shared_domains/ccd3bff6-bbe2-48bb-bf78-35b101d6066c"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-33.example.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""cea09e22-196f-4897-bfa7-e949d696d097"",
        ""url"": ""/v2/shared_domains/cea09e22-196f-4897-bfa7-e949d696d097"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-34.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedDomainsResponse> page = Utilities.DeserializePage<ListAllSharedDomainsResponse>(json, null);

            Assert.AreEqual("5", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dbd00bcd-054e-4fb9-aa40-954b39c9fb10", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/dbd00bcd-054e-4fb9-aa40-954b39c9fb10", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("c3e64ca8-e7c1-4602-b527-3fbb4ed985f1", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/c3e64ca8-e7c1-4602-b527-3fbb4ed985f1", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("a66b691a-893b-47d4-a774-8c7b72aabe4f", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/a66b691a-893b-47d4-a774-8c7b72aabe4f", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-32.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("ccd3bff6-bbe2-48bb-bf78-35b101d6066c", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/ccd3bff6-bbe2-48bb-bf78-35b101d6066c", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-33.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("cea09e22-196f-4897-bfa7-e949d696d097", TestUtil.ToTestableString(page[4].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/cea09e22-196f-4897-bfa7-e949d696d097", TestUtil.ToTestableString(page[4].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[4].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[4].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-34.example.com", TestUtil.ToTestableString(page[4].Name), true);
        }

        [TestMethod]
        public void TestRetrieveSharedDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",
    ""url"": ""/v2/shared_domains/dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",
    ""created_at"": ""2015-07-29T12:47:17Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""customer-app-domain1.com""
  }
}";

            RetrieveSharedDomainResponse obj = Utilities.DeserializeJson<RetrieveSharedDomainResponse>(json);

            Assert.AreEqual("dbd00bcd-054e-4fb9-aa40-954b39c9fb10", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/shared_domains/dbd00bcd-054e-4fb9-aa40-954b39c9fb10", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(obj.Name), true);
        }
    }
}
