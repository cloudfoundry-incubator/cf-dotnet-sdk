//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3fa92351-fd95-4459-871b-23b66c65b4fe"",
    ""url"": ""/v2/space_quota_definitions/3fa92351-fd95-4459-871b-23b66c65b4fe"",
    ""created_at"": ""2016-02-05T12:14:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""d06316e6-212b-416c-aad2-0481b62759d3"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 5,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/d06316e6-212b-416c-aad2-0481b62759d3"",
    ""spaces_url"": ""/v2/space_quota_definitions/3fa92351-fd95-4459-871b-23b66c65b4fe/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("3fa92351-fd95-4459-871b-23b66c65b4fe", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/3fa92351-fd95-4459-871b-23b66c65b4fe", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("d06316e6-212b-416c-aad2-0481b62759d3", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/d06316e6-212b-416c-aad2-0481b62759d3", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/3fa92351-fd95-4459-871b-23b66c65b4fe/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""14883edb-a2e3-4280-a480-1192ff4bf5b6"",
    ""url"": ""/v2/space_quota_definitions/14883edb-a2e3-4280-a480-1192ff4bf5b6"",
    ""created_at"": ""2016-02-05T12:14:49Z"",
    ""updated_at"": ""2016-02-05T12:14:49Z""
  },
  ""entity"": {
    ""name"": ""name-1804"",
    ""organization_guid"": ""493b6a5a-b153-4448-9ea3-34021fe006ed"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/493b6a5a-b153-4448-9ea3-34021fe006ed"",
    ""spaces_url"": ""/v2/space_quota_definitions/14883edb-a2e3-4280-a480-1192ff4bf5b6/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("14883edb-a2e3-4280-a480-1192ff4bf5b6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/14883edb-a2e3-4280-a480-1192ff4bf5b6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1804", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("493b6a5a-b153-4448-9ea3-34021fe006ed", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/493b6a5a-b153-4448-9ea3-34021fe006ed", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/14883edb-a2e3-4280-a480-1192ff4bf5b6/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""438d1a42-6da4-497b-adcf-2fa0be65c21c"",
    ""url"": ""/v2/space_quota_definitions/438d1a42-6da4-497b-adcf-2fa0be65c21c"",
    ""created_at"": ""2016-02-05T12:14:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1783"",
    ""organization_guid"": ""4c0a717e-014b-448e-b36b-e18fed9ec82b"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/4c0a717e-014b-448e-b36b-e18fed9ec82b"",
    ""spaces_url"": ""/v2/space_quota_definitions/438d1a42-6da4-497b-adcf-2fa0be65c21c/spaces""
  }
}";

            RemoveSpaceFromSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RemoveSpaceFromSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("438d1a42-6da4-497b-adcf-2fa0be65c21c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/438d1a42-6da4-497b-adcf-2fa0be65c21c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1783", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("4c0a717e-014b-448e-b36b-e18fed9ec82b", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/4c0a717e-014b-448e-b36b-e18fed9ec82b", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/438d1a42-6da4-497b-adcf-2fa0be65c21c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""20c6f451-b6d0-4186-8c30-f7538f6c5a5a"",
        ""url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a"",
        ""created_at"": ""2016-02-05T12:14:49Z"",
        ""updated_at"": ""2016-02-05T12:14:49Z""
      },
      ""entity"": {
        ""name"": ""name-1791"",
        ""organization_guid"": ""bf7cc7be-c77d-45c9-befa-d8cd7371dedd"",
        ""space_quota_definition_guid"": ""465adf78-abb3-4f01-8ef7-0d08b4674b4b"",
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/bf7cc7be-c77d-45c9-befa-d8cd7371dedd"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/465adf78-abb3-4f01-8ef7-0d08b4674b4b"",
        ""developers_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/developers"",
        ""managers_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/managers"",
        ""auditors_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/auditors"",
        ""apps_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/apps"",
        ""routes_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/routes"",
        ""domains_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/domains"",
        ""service_instances_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/service_instances"",
        ""app_events_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/app_events"",
        ""events_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/events"",
        ""security_groups_url"": ""/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("20c6f451-b6d0-4186-8c30-f7538f6c5a5a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1791", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("bf7cc7be-c77d-45c9-befa-d8cd7371dedd", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("465adf78-abb3-4f01-8ef7-0d08b4674b4b", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/bf7cc7be-c77d-45c9-befa-d8cd7371dedd", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/465adf78-abb3-4f01-8ef7-0d08b4674b4b", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/20c6f451-b6d0-4186-8c30-f7538f6c5a5a/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3bc81dfc-b8ed-41b6-bc9c-74b7c22c936f"",
    ""url"": ""/v2/space_quota_definitions/3bc81dfc-b8ed-41b6-bc9c-74b7c22c936f"",
    ""created_at"": ""2016-02-05T12:14:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1780"",
    ""organization_guid"": ""5423818a-b361-49cd-bff3-354d30e0e6cc"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/5423818a-b361-49cd-bff3-354d30e0e6cc"",
    ""spaces_url"": ""/v2/space_quota_definitions/3bc81dfc-b8ed-41b6-bc9c-74b7c22c936f/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("3bc81dfc-b8ed-41b6-bc9c-74b7c22c936f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/3bc81dfc-b8ed-41b6-bc9c-74b7c22c936f", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1780", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("5423818a-b361-49cd-bff3-354d30e0e6cc", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/5423818a-b361-49cd-bff3-354d30e0e6cc", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/3bc81dfc-b8ed-41b6-bc9c-74b7c22c936f/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""04134008-c921-4fed-ab80-72f485980fde"",
    ""url"": ""/v2/space_quota_definitions/04134008-c921-4fed-ab80-72f485980fde"",
    ""created_at"": ""2016-02-05T12:14:49Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1793"",
    ""organization_guid"": ""bcaace96-1f44-4619-a830-49eb739f0d4a"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""organization_url"": ""/v2/organizations/bcaace96-1f44-4619-a830-49eb739f0d4a"",
    ""spaces_url"": ""/v2/space_quota_definitions/04134008-c921-4fed-ab80-72f485980fde/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("04134008-c921-4fed-ab80-72f485980fde", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/04134008-c921-4fed-ab80-72f485980fde", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1793", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("bcaace96-1f44-4619-a830-49eb739f0d4a", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/bcaace96-1f44-4619-a830-49eb739f0d4a", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/04134008-c921-4fed-ab80-72f485980fde/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c1939d0f-5d1e-46b4-b65c-1eed260164b5"",
        ""url"": ""/v2/space_quota_definitions/c1939d0f-5d1e-46b4-b65c-1eed260164b5"",
        ""created_at"": ""2016-02-05T12:14:49Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1798"",
        ""organization_guid"": ""8e517d1f-4495-433d-9d72-e995d582de53"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/8e517d1f-4495-433d-9d72-e995d582de53"",
        ""spaces_url"": ""/v2/space_quota_definitions/c1939d0f-5d1e-46b4-b65c-1eed260164b5/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c1939d0f-5d1e-46b4-b65c-1eed260164b5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/c1939d0f-5d1e-46b4-b65c-1eed260164b5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:49Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1798", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("8e517d1f-4495-433d-9d72-e995d582de53", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/8e517d1f-4495-433d-9d72-e995d582de53", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/c1939d0f-5d1e-46b4-b65c-1eed260164b5/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }
    }
}
