//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class SpaceQuotaDefinitionsTest
    {


        [TestMethod]
        public void TestRetrieveSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""33aae3a6-b1b5-4d52-adc2-7ee2a685a7c7"",
    ""url"": ""/v2/space_quota_definitions/9ee89c93-1d71-4b24-bc25-4a7e24683d85"",
    ""created_at"": ""2017-01-04T15:58:54Z"",
    ""updated_at"": ""2017-01-04T15:58:54Z""
  },
  ""entity"": {
    ""name"": ""name-1878"",
    ""organization_guid"": ""33aae3a6-b1b5-4d52-adc2-7ee2a685a7c7"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": 600,
    ""total_reserved_route_ports"": -1,
    ""organization_url"": ""/v2/organizations/aa5467ea-e55f-47f7-a311-8472a2ebbe02"",
    ""spaces_url"": ""/v2/space_quota_definitions/9ee89c93-1d71-4b24-bc25-4a7e24683d85/spaces""
  }
}";

            RetrieveSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<RetrieveSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("33aae3a6-b1b5-4d52-adc2-7ee2a685a7c7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/9ee89c93-1d71-4b24-bc25-4a7e24683d85", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1878", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("33aae3a6-b1b5-4d52-adc2-7ee2a685a7c7", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/aa5467ea-e55f-47f7-a311-8472a2ebbe02", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/9ee89c93-1d71-4b24-bc25-4a7e24683d85/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""26e32393-b378-4ee7-b269-c3dc1e9b0a9f"",
    ""url"": ""/v2/space_quota_definitions/2493a985-f3e5-47d2-be37-89bd0fa2bee7"",
    ""created_at"": ""2017-01-04T15:58:53Z"",
    ""updated_at"": ""2017-01-04T15:58:53Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""organization_guid"": ""26e32393-b378-4ee7-b269-c3dc1e9b0a9f"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": 600,
    ""total_reserved_route_ports"": -1,
    ""organization_url"": ""/v2/organizations/d436baf4-86ad-4aab-9fb1-ceba11d5412c"",
    ""spaces_url"": ""/v2/space_quota_definitions/2493a985-f3e5-47d2-be37-89bd0fa2bee7/spaces""
  }
}";

            UpdateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<UpdateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("26e32393-b378-4ee7-b269-c3dc1e9b0a9f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/2493a985-f3e5-47d2-be37-89bd0fa2bee7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("26e32393-b378-4ee7-b269-c3dc1e9b0a9f", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/d436baf4-86ad-4aab-9fb1-ceba11d5412c", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/2493a985-f3e5-47d2-be37-89bd0fa2bee7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f6b4475b-c2e3-4206-8cd9-7614f6923695"",
    ""url"": ""/v2/space_quota_definitions/f9040dc8-5bd9-472a-bdaa-58b776cc28c8"",
    ""created_at"": ""2017-01-04T15:58:54Z"",
    ""updated_at"": ""2017-01-04T15:58:54Z""
  },
  ""entity"": {
    ""name"": ""name-1867"",
    ""organization_guid"": ""f6b4475b-c2e3-4206-8cd9-7614f6923695"",
    ""non_basic_services_allowed"": true,
    ""total_services"": 60,
    ""total_routes"": 1000,
    ""memory_limit"": 20480,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": 600,
    ""total_reserved_route_ports"": -1,
    ""organization_url"": ""/v2/organizations/469779ba-2a2b-44df-aadd-a2408d09c6a4"",
    ""spaces_url"": ""/v2/space_quota_definitions/f9040dc8-5bd9-472a-bdaa-58b776cc28c8/spaces""
  }
}";

            AssociateSpaceWithSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<AssociateSpaceWithSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("f6b4475b-c2e3-4206-8cd9-7614f6923695", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/f9040dc8-5bd9-472a-bdaa-58b776cc28c8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1867", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("f6b4475b-c2e3-4206-8cd9-7614f6923695", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/469779ba-2a2b-44df-aadd-a2408d09c6a4", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/f9040dc8-5bd9-472a-bdaa-58b776cc28c8/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""52c8eddc-fa39-466c-8d69-612491658994"",
        ""url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606"",
        ""created_at"": ""2017-01-04T15:58:54Z"",
        ""updated_at"": ""2017-01-04T15:58:54Z""
      },
      ""entity"": {
        ""name"": ""name-1862"",
        ""organization_guid"": ""52c8eddc-fa39-466c-8d69-612491658994"",
        ""space_quota_definition_guid"": ""52c8eddc-fa39-466c-8d69-612491658994"",
        ""isolation_segment_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/ff8a1695-a4d8-40e6-bc0b-b17c8d356b97"",
        ""space_quota_definition_url"": ""/v2/space_quota_definitions/fdeff10e-f2cc-4a50-abca-df3dfcd9d94c"",
        ""developers_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/developers"",
        ""managers_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/managers"",
        ""auditors_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/auditors"",
        ""apps_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/apps"",
        ""routes_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/routes"",
        ""domains_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/domains"",
        ""service_instances_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/service_instances"",
        ""app_events_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/app_events"",
        ""events_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/events"",
        ""security_groups_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/security_groups"",
        ""staging_security_groups_url"": ""/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/staging_security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForSpaceQuotaDefinitionResponse> page = Utilities.DeserializePage<ListAllSpacesForSpaceQuotaDefinitionResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("52c8eddc-fa39-466c-8d69-612491658994", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1862", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("52c8eddc-fa39-466c-8d69-612491658994", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("52c8eddc-fa39-466c-8d69-612491658994", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].IsolationSegmentGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/ff8a1695-a4d8-40e6-bc0b-b17c8d356b97", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/fdeff10e-f2cc-4a50-abca-df3dfcd9d94c", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
            Assert.AreEqual("/v2/spaces/610312dd-003b-4b22-a10e-548b23994606/staging_security_groups", TestUtil.ToTestableString(page[0].StagingSecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1e3b4327-f3bd-45c1-88d4-b51de5cd279c"",
        ""url"": ""/v2/space_quota_definitions/7366dcbe-c6bc-4d81-a8f4-9e8ef4336153"",
        ""created_at"": ""2017-01-04T15:58:54Z"",
        ""updated_at"": ""2017-01-04T15:58:54Z""
      },
      ""entity"": {
        ""name"": ""name-1875"",
        ""organization_guid"": ""1e3b4327-f3bd-45c1-88d4-b51de5cd279c"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""app_task_limit"": 5,
        ""total_service_keys"": 600,
        ""total_reserved_route_ports"": -1,
        ""organization_url"": ""/v2/organizations/f107a740-0faf-4029-8fd7-8e55aa1d6479"",
        ""spaces_url"": ""/v2/space_quota_definitions/7366dcbe-c6bc-4d81-a8f4-9e8ef4336153/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1e3b4327-f3bd-45c1-88d4-b51de5cd279c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/7366dcbe-c6bc-4d81-a8f4-9e8ef4336153", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:54Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1875", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("1e3b4327-f3bd-45c1-88d4-b51de5cd279c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(page[0].AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(page[0].TotalServiceKeys), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/f107a740-0faf-4029-8fd7-8e55aa1d6479", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/7366dcbe-c6bc-4d81-a8f4-9e8ef4336153/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateSpaceQuotaDefinitionResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""12f6ff86-1398-4481-b4b6-238c88fbcdce"",
    ""url"": ""/v2/space_quota_definitions/b4bd2d1c-e0e4-4b7a-a797-4908a04c0f2b"",
    ""created_at"": ""2017-01-04T15:58:53Z"",
    ""updated_at"": ""2017-01-04T15:58:53Z""
  },
  ""entity"": {
    ""name"": ""gold_quota"",
    ""organization_guid"": ""12f6ff86-1398-4481-b4b6-238c88fbcdce"",
    ""non_basic_services_allowed"": true,
    ""total_services"": -1,
    ""total_routes"": 10,
    ""memory_limit"": 5120,
    ""instance_memory_limit"": -1,
    ""app_instance_limit"": -1,
    ""app_task_limit"": 5,
    ""total_service_keys"": -1,
    ""total_reserved_route_ports"": 5,
    ""organization_url"": ""/v2/organizations/b7cc709c-6c4b-4ec7-8e86-07ee681a049f"",
    ""spaces_url"": ""/v2/space_quota_definitions/b4bd2d1c-e0e4-4b7a-a797-4908a04c0f2b/spaces""
  }
}";

            CreateSpaceQuotaDefinitionResponse obj = Utilities.DeserializeJson<CreateSpaceQuotaDefinitionResponse>(json);

            Assert.AreEqual("12f6ff86-1398-4481-b4b6-238c88fbcdce", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/b4bd2d1c-e0e4-4b7a-a797-4908a04c0f2b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:58:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:58:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("gold_quota", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("12f6ff86-1398-4481-b4b6-238c88fbcdce", TestUtil.ToTestableString(obj.OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.NonBasicServicesAllowed), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalServices), true);
            Assert.AreEqual("10", TestUtil.ToTestableString(obj.TotalRoutes), true);
            Assert.AreEqual("5120", TestUtil.ToTestableString(obj.MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.AppTaskLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(obj.TotalServiceKeys), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(obj.TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/b7cc709c-6c4b-4ec7-8e86-07ee681a049f", TestUtil.ToTestableString(obj.OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/b4bd2d1c-e0e4-4b7a-a797-4908a04c0f2b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }
    }
}
