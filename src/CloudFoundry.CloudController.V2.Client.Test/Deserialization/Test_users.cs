//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""486e3229-20fc-452f-a912-5056bc0c9c02"",
    ""url"": ""/v2/users/uaa-id-398"",
    ""created_at"": ""2016-05-05T14:15:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""486e3229-20fc-452f-a912-5056bc0c9c02"",
    ""default_space_url"": ""/v2/spaces/b6bbb926-e6b6-47c3-b3fe-74b2bf2740ee"",
    ""spaces_url"": ""/v2/users/uaa-id-398/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-398/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-398/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-398/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-398/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-398/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-398/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("486e3229-20fc-452f-a912-5056bc0c9c02", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-398", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("486e3229-20fc-452f-a912-5056bc0c9c02", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/b6bbb926-e6b6-47c3-b3fe-74b2bf2740ee", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-398/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
    ""created_at"": ""2016-05-05T14:15:15Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""organizations"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1660"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1662""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
              ""created_at"": ""2016-05-05T14:15:15Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1661"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1660"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1662""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
              ""created_at"": ""2016-05-05T14:15:15Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1661"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""billing_managed_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1660"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1662""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
              ""created_at"": ""2016-05-05T14:15:15Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1661"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""audited_organizations"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1660"",
          ""billing_enabled"": false,
          ""status"": ""active"",
          ""spaces"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""name"": ""name-1662""
              }
            }
          ],
          ""quota_definition"": {
            ""metadata"": {
              ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
              ""created_at"": ""2016-05-05T14:15:15Z"",
              ""updated_at"": null
            },
            ""entity"": {
              ""name"": ""name-1661"",
              ""non_basic_services_allowed"": true,
              ""total_services"": 60,
              ""memory_limit"": 20480,
              ""trial_db_allowed"": false,
              ""total_routes"": 1000,
              ""instance_memory_limit"": -1,
              ""total_private_domains"": -1,
              ""app_instance_limit"": -1,
              ""app_task_limit"": -1
            }
          },
          ""managers"": [
            {
              ""metadata"": {
                ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
                ""created_at"": ""2016-05-05T14:15:15Z"",
                ""updated_at"": null
              },
              ""entity"": {
                ""admin"": false,
                ""active"": false,
                ""default_space_guid"": null
              }
            }
          ]
        }
      }
    ],
    ""spaces"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1662""
        }
      }
    ],
    ""managed_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1662""
        }
      }
    ],
    ""audited_spaces"": [
      {
        ""metadata"": {
          ""guid"": ""cf6b291f-3669-45c6-b7d3-dffb1dd73e8d"",
          ""created_at"": ""2016-05-05T14:15:15Z"",
          ""updated_at"": null
        },
        ""entity"": {
          ""name"": ""name-1662""
        }
      }
    ]
  }
}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("cf6b291f-3669-45c6-b7d3-dffb1dd73e8d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-05-05T14:15:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c9f52a10-c816-4950-9867-29293339425d"",
    ""url"": ""/v2/users/uaa-id-408"",
    ""created_at"": ""2016-05-05T14:15:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c9f52a10-c816-4950-9867-29293339425d"",
    ""default_space_url"": ""/v2/spaces/fa1ed803-ea72-41a5-9427-df68c1b5197d"",
    ""spaces_url"": ""/v2/users/uaa-id-408/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-408/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-408/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-408/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-408/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-408/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-408/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("c9f52a10-c816-4950-9867-29293339425d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-408", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c9f52a10-c816-4950-9867-29293339425d", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/fa1ed803-ea72-41a5-9427-df68c1b5197d", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-408/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f55a45eb-a45d-4e1c-b601-4daedda8a8f1"",
    ""url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d"",
    ""created_at"": ""2016-05-05T14:15:40Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/spaces"",
    ""organizations_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/organizations"",
    ""managed_organizations_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("f55a45eb-a45d-4e1c-b601-4daedda8a8f1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/ba8b964d-df99-4871-ae3b-69299167170d/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""fa60d8b1-9156-4690-85df-83c9d6ec2ba2"",
    ""url"": ""/v2/users/uaa-id-421"",
    ""created_at"": ""2016-05-05T14:15:39Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""fa60d8b1-9156-4690-85df-83c9d6ec2ba2"",
    ""default_space_url"": ""/v2/spaces/404cd9f1-3532-497d-bb6d-fc0c41515326"",
    ""spaces_url"": ""/v2/users/uaa-id-421/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-421/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-421/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-421/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-421/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-421/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-421/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("fa60d8b1-9156-4690-85df-83c9d6ec2ba2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-421", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("fa60d8b1-9156-4690-85df-83c9d6ec2ba2", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/404cd9f1-3532-497d-bb6d-fc0c41515326", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-421/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b4267a46-9cfd-4847-8288-4721fd2f502c"",
        ""url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5"",
        ""created_at"": ""2016-05-05T14:15:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2313"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""b4267a46-9cfd-4847-8288-4721fd2f502c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/69dab562-3d04-465d-8e5e-3af10b12c434"",
        ""spaces_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/spaces"",
        ""domains_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/domains"",
        ""private_domains_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/private_domains"",
        ""users_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/users"",
        ""managers_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/managers"",
        ""billing_managers_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/billing_managers"",
        ""auditors_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/auditors"",
        ""app_events_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b4267a46-9cfd-4847-8288-4721fd2f502c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2313", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("b4267a46-9cfd-4847-8288-4721fd2f502c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/69dab562-3d04-465d-8e5e-3af10b12c434", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ddc5e028-1843-427c-8017-325e96e0d5e5/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""41b93b81-24eb-4e13-bef7-89141998d6f0"",
    ""url"": ""/v2/users/uaa-id-431"",
    ""created_at"": ""2016-05-05T14:15:39Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""41b93b81-24eb-4e13-bef7-89141998d6f0"",
    ""default_space_url"": ""/v2/spaces/c4fe7298-ffd9-47d1-9763-0d55dea14b69"",
    ""spaces_url"": ""/v2/users/uaa-id-431/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-431/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-431/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-431/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-431/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-431/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-431/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("41b93b81-24eb-4e13-bef7-89141998d6f0", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-431", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("41b93b81-24eb-4e13-bef7-89141998d6f0", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c4fe7298-ffd9-47d1-9763-0d55dea14b69", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-431/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bcdad378-6185-4d3f-9cdd-3768632d693b"",
        ""url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2"",
        ""created_at"": ""2016-05-05T14:15:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2318"",
        ""organization_guid"": ""bcdad378-6185-4d3f-9cdd-3768632d693b"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/6dcc6430-93b3-4f5d-8116-735e22f4542e"",
        ""developers_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/developers"",
        ""managers_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/managers"",
        ""auditors_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/auditors"",
        ""apps_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/apps"",
        ""routes_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/routes"",
        ""domains_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/domains"",
        ""service_instances_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/service_instances"",
        ""app_events_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/app_events"",
        ""events_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/events"",
        ""security_groups_url"": ""/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bcdad378-6185-4d3f-9cdd-3768632d693b", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2318", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("bcdad378-6185-4d3f-9cdd-3768632d693b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/6dcc6430-93b3-4f5d-8116-735e22f4542e", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/7392bbbe-0df8-4303-b142-c750e1e9a7f2/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bda0f8c3-43ec-4d2b-8ed1-759dc2731cf7"",
    ""url"": ""/v2/users/uaa-id-441"",
    ""created_at"": ""2016-05-05T14:15:40Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""bda0f8c3-43ec-4d2b-8ed1-759dc2731cf7"",
    ""default_space_url"": ""/v2/spaces/aaae0ea1-fea1-4091-9c95-75d1d1e49f15"",
    ""spaces_url"": ""/v2/users/uaa-id-441/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-441/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-441/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-441/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-441/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-441/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-441/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("bda0f8c3-43ec-4d2b-8ed1-759dc2731cf7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-441", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("bda0f8c3-43ec-4d2b-8ed1-759dc2731cf7", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/aaae0ea1-fea1-4091-9c95-75d1d1e49f15", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-441/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c2b5b718-901a-415e-96e8-6a382d0ae3c5"",
        ""url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9"",
        ""created_at"": ""2016-05-05T14:15:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2251"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""c2b5b718-901a-415e-96e8-6a382d0ae3c5"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/01292737-464d-4d16-861c-da52aef277b7"",
        ""spaces_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/spaces"",
        ""domains_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/domains"",
        ""private_domains_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/private_domains"",
        ""users_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/users"",
        ""managers_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/managers"",
        ""billing_managers_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/billing_managers"",
        ""auditors_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/auditors"",
        ""app_events_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c2b5b718-901a-415e-96e8-6a382d0ae3c5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2251", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("c2b5b718-901a-415e-96e8-6a382d0ae3c5", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/01292737-464d-4d16-861c-da52aef277b7", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c93c1d28-daee-4a52-ae55-a860504102a9/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""7ea2ea79-67de-4c3d-8eba-7c40a6aad504"",
    ""url"": ""/v2/users/uaa-id-394"",
    ""created_at"": ""2016-05-05T14:15:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""7ea2ea79-67de-4c3d-8eba-7c40a6aad504"",
    ""default_space_url"": ""/v2/spaces/fad98826-2b41-4d01-8c16-e18a34c72935"",
    ""spaces_url"": ""/v2/users/uaa-id-394/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-394/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-394/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-394/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-394/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-394/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-394/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("7ea2ea79-67de-4c3d-8eba-7c40a6aad504", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-394", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("7ea2ea79-67de-4c3d-8eba-7c40a6aad504", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/fad98826-2b41-4d01-8c16-e18a34c72935", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-394/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1bf0105a-4f78-41a6-a83d-d9a3b0a54199"",
        ""url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b"",
        ""created_at"": ""2016-05-05T14:15:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2345"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""1bf0105a-4f78-41a6-a83d-d9a3b0a54199"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/5dc9e95d-8886-4533-9c98-a2bbb08cef6d"",
        ""spaces_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/spaces"",
        ""domains_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/domains"",
        ""private_domains_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/private_domains"",
        ""users_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/users"",
        ""managers_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/managers"",
        ""billing_managers_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/billing_managers"",
        ""auditors_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/auditors"",
        ""app_events_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1bf0105a-4f78-41a6-a83d-d9a3b0a54199", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2345", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("1bf0105a-4f78-41a6-a83d-d9a3b0a54199", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/5dc9e95d-8886-4533-9c98-a2bbb08cef6d", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/482b0398-b327-4bae-8eb9-58e008c53b3b/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""56e5abc4-f000-4dea-a1ab-81137c77923c"",
    ""url"": ""/v2/users/uaa-id-404"",
    ""created_at"": ""2016-05-05T14:15:38Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""56e5abc4-f000-4dea-a1ab-81137c77923c"",
    ""default_space_url"": ""/v2/spaces/e5df4d33-698d-4be6-9557-90c6bd20d070"",
    ""spaces_url"": ""/v2/users/uaa-id-404/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-404/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-404/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-404/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-404/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-404/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-404/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("56e5abc4-f000-4dea-a1ab-81137c77923c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-404", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("56e5abc4-f000-4dea-a1ab-81137c77923c", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/e5df4d33-698d-4be6-9557-90c6bd20d070", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-404/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7da457f8-ba22-4469-9f19-b03b1bcf1646"",
        ""url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e"",
        ""created_at"": ""2016-05-05T14:15:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2270"",
        ""organization_guid"": ""7da457f8-ba22-4469-9f19-b03b1bcf1646"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/f1160cde-bd1b-4134-81f4-c2773b5dbc48"",
        ""developers_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/developers"",
        ""managers_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/managers"",
        ""auditors_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/auditors"",
        ""apps_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/apps"",
        ""routes_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/routes"",
        ""domains_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/domains"",
        ""service_instances_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/service_instances"",
        ""app_events_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/app_events"",
        ""events_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/events"",
        ""security_groups_url"": ""/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7da457f8-ba22-4469-9f19-b03b1bcf1646", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2270", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("7da457f8-ba22-4469-9f19-b03b1bcf1646", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/f1160cde-bd1b-4134-81f4-c2773b5dbc48", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/9287bc6d-e6c9-4734-92a9-1b7a8b59821e/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f3787e14-da6d-4d4e-aa4b-5ed28cb9cf18"",
    ""url"": ""/v2/users/uaa-id-427"",
    ""created_at"": ""2016-05-05T14:15:39Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f3787e14-da6d-4d4e-aa4b-5ed28cb9cf18"",
    ""default_space_url"": ""/v2/spaces/04027505-462f-4e96-94e4-6ce4087ba5e4"",
    ""spaces_url"": ""/v2/users/uaa-id-427/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-427/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-427/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-427/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-427/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-427/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-427/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("f3787e14-da6d-4d4e-aa4b-5ed28cb9cf18", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-427", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f3787e14-da6d-4d4e-aa4b-5ed28cb9cf18", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/04027505-462f-4e96-94e4-6ce4087ba5e4", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-427/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cc5cc03e-ce88-440f-95fe-7bcc913a5bfc"",
        ""url"": ""/v2/users/uaa-id-443"",
        ""created_at"": ""2016-05-05T14:15:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""cc5cc03e-ce88-440f-95fe-7bcc913a5bfc"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/bc3cead2-c3a7-475f-8a84-2267ef836513"",
        ""spaces_url"": ""/v2/users/uaa-id-443/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-443/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-443/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-443/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-443/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-443/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-443/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""cc5cc03e-ce88-440f-95fe-7bcc913a5bfc"",
        ""url"": ""/v2/users/uaa-id-444"",
        ""created_at"": ""2016-05-05T14:15:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": true,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-444/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-444/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-444/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-444/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-444/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-444/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-444/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cc5cc03e-ce88-440f-95fe-7bcc913a5bfc", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-443", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("cc5cc03e-ce88-440f-95fe-7bcc913a5bfc", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/bc3cead2-c3a7-475f-8a84-2267ef836513", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-443/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("cc5cc03e-ce88-440f-95fe-7bcc913a5bfc", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-444", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:40Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-444/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-444/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-444/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-444/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-444/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-444/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-444/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b5ea0462-93c0-454a-a85a-41e05292f538"",
    ""url"": ""/v2/users/uaa-id-437"",
    ""created_at"": ""2016-05-05T14:15:40Z"",
    ""updated_at"": ""2016-05-05T14:15:40Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""b5ea0462-93c0-454a-a85a-41e05292f538"",
    ""default_space_url"": ""/v2/spaces/ce552983-a505-4513-846a-c38abfa3afa1"",
    ""spaces_url"": ""/v2/users/uaa-id-437/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-437/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-437/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-437/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-437/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-437/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-437/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("b5ea0462-93c0-454a-a85a-41e05292f538", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-437", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:40Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("b5ea0462-93c0-454a-a85a-41e05292f538", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/ce552983-a505-4513-846a-c38abfa3afa1", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-437/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""811d3cb3-5bbb-4899-a5e3-f4257e2b6ce7"",
        ""url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6"",
        ""created_at"": ""2016-05-05T14:15:39Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2374"",
        ""organization_guid"": ""811d3cb3-5bbb-4899-a5e3-f4257e2b6ce7"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/bfbcc53f-c571-491a-b68c-fb8750e8c17c"",
        ""developers_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/developers"",
        ""managers_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/managers"",
        ""auditors_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/auditors"",
        ""apps_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/apps"",
        ""routes_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/routes"",
        ""domains_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/domains"",
        ""service_instances_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/service_instances"",
        ""app_events_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/app_events"",
        ""events_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/events"",
        ""security_groups_url"": ""/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("811d3cb3-5bbb-4899-a5e3-f4257e2b6ce7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:39Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2374", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("811d3cb3-5bbb-4899-a5e3-f4257e2b6ce7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/bfbcc53f-c571-491a-b68c-fb8750e8c17c", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/6fae6483-debf-4d98-9c0d-35978db670d6/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""69a46c85-4757-48d2-87f1-b4e99cceaf41"",
        ""url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5"",
        ""created_at"": ""2016-05-05T14:15:38Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2230"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""69a46c85-4757-48d2-87f1-b4e99cceaf41"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/f8548a59-8fe7-44ae-aa7a-f7196ac321a2"",
        ""spaces_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/spaces"",
        ""domains_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/domains"",
        ""private_domains_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/private_domains"",
        ""users_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/users"",
        ""managers_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/managers"",
        ""billing_managers_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/billing_managers"",
        ""auditors_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/auditors"",
        ""app_events_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("69a46c85-4757-48d2-87f1-b4e99cceaf41", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:38Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2230", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("69a46c85-4757-48d2-87f1-b4e99cceaf41", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/f8548a59-8fe7-44ae-aa7a-f7196ac321a2", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a41bece2-66a7-4770-bdac-bdb938a1d0a5/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }
    }
}
