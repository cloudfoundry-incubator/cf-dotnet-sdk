//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UsersTest
    {


        [TestMethod]
        public void TestGetUserSummaryResponse()
        {
            string json = @"{""metadata"":{""guid"":""uaa-id-167"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""organizations"":[{""metadata"":{""guid"":""3409223e-f4c3-47d4-acb4-8931a60ea36c"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-654"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}],""quota_definition"":{""metadata"":{""guid"":""076f3ab3-2220-4ab6-9ec9-c821f2352b55"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-655"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-167"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""managed_organizations"":[{""metadata"":{""guid"":""3409223e-f4c3-47d4-acb4-8931a60ea36c"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-654"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}],""quota_definition"":{""metadata"":{""guid"":""076f3ab3-2220-4ab6-9ec9-c821f2352b55"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-655"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-167"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""billing_managed_organizations"":[{""metadata"":{""guid"":""3409223e-f4c3-47d4-acb4-8931a60ea36c"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-654"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}],""quota_definition"":{""metadata"":{""guid"":""076f3ab3-2220-4ab6-9ec9-c821f2352b55"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-655"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-167"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""audited_organizations"":[{""metadata"":{""guid"":""3409223e-f4c3-47d4-acb4-8931a60ea36c"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-654"",""billing_enabled"":false,""status"":""active"",""spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}],""quota_definition"":{""metadata"":{""guid"":""076f3ab3-2220-4ab6-9ec9-c821f2352b55"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-655"",""non_basic_services_allowed"":true,""total_services"":60,""memory_limit"":20480,""trial_db_allowed"":false}},""managers"":[{""metadata"":{""guid"":""uaa-id-167"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""admin"":false,""active"":false,""default_space_guid"":null}}]}}],""spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}],""managed_spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}],""audited_spaces"":[{""metadata"":{""guid"":""a63711b7-389a-4f0e-8448-e2b09d8def63"",""created_at"":""2015-07-29T12:47:20Z"",""updated_at"":null},""entity"":{""name"":""name-656""}}]}}";

            GetUserSummaryResponse obj = Utilities.DeserializeJson<GetUserSummaryResponse>(json);

            Assert.AreEqual("uaa-id-167", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
        }

        [TestMethod]
        public void TestAssociateAuditedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-127"",
    ""url"": ""/v2/users/uaa-id-127"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f594e749-575e-48a9-a5ce-e2eec9fd2301"",
    ""default_space_url"": ""/v2/spaces/f594e749-575e-48a9-a5ce-e2eec9fd2301"",
    ""spaces_url"": ""/v2/users/uaa-id-127/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-127/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-127/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-127/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-127/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-127/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-127/audited_spaces""
  }
}";

            AssociateAuditedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-127", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-127", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f594e749-575e-48a9-a5ce-e2eec9fd2301", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f594e749-575e-48a9-a5ce-e2eec9fd2301", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-127/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7fa3996d-12fe-4908-9b11-b6b33a4310b6"",
        ""url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6"",
        ""created_at"": ""2015-07-29T12:47:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-577"",
        ""organization_guid"": ""31d387ad-0dc3-430e-80b2-229778e38153"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/31d387ad-0dc3-430e-80b2-229778e38153"",
        ""developers_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/developers"",
        ""managers_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/managers"",
        ""auditors_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/auditors"",
        ""apps_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/apps"",
        ""routes_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/routes"",
        ""domains_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/domains"",
        ""service_instances_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/service_instances"",
        ""app_events_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/app_events"",
        ""events_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/events"",
        ""security_groups_url"": ""/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllManagedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7fa3996d-12fe-4908-9b11-b6b33a4310b6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-577", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("31d387ad-0dc3-430e-80b2-229778e38153", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/31d387ad-0dc3-430e-80b2-229778e38153", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/7fa3996d-12fe-4908-9b11-b6b33a4310b6/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c85a94c5-39fc-403a-9187-55d70880d8ed"",
        ""url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed"",
        ""created_at"": ""2015-07-29T12:47:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-602"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""ba103e78-af6f-4c14-98ab-3e8ea07a6a4c"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/ba103e78-af6f-4c14-98ab-3e8ea07a6a4c"",
        ""spaces_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/spaces"",
        ""domains_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/domains"",
        ""private_domains_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/private_domains"",
        ""users_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/users"",
        ""managers_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/managers"",
        ""billing_managers_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/billing_managers"",
        ""auditors_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/auditors"",
        ""app_events_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c85a94c5-39fc-403a-9187-55d70880d8ed", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-602", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("ba103e78-af6f-4c14-98ab-3e8ea07a6a4c", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/ba103e78-af6f-4c14-98ab-3e8ea07a6a4c", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/c85a94c5-39fc-403a-9187-55d70880d8ed/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""307c46aa-1bcc-4532-935b-6bfbdf56929c"",
        ""url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-554"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""843ca30c-c6d9-42b5-803d-e47fe5d50c4f"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/843ca30c-c6d9-42b5-803d-e47fe5d50c4f"",
        ""spaces_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/spaces"",
        ""domains_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/domains"",
        ""private_domains_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/private_domains"",
        ""users_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/users"",
        ""managers_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/managers"",
        ""billing_managers_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/billing_managers"",
        ""auditors_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/auditors"",
        ""app_events_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("307c46aa-1bcc-4532-935b-6bfbdf56929c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-554", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("843ca30c-c6d9-42b5-803d-e47fe5d50c4f", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/843ca30c-c6d9-42b5-803d-e47fe5d50c4f", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/307c46aa-1bcc-4532-935b-6bfbdf56929c/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-160"",
    ""url"": ""/v2/users/uaa-id-160"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": ""2015-07-29T12:47:20Z""
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""83f98823-d43a-4a6c-9e44-51c1d0e19ec7"",
    ""default_space_url"": ""/v2/spaces/83f98823-d43a-4a6c-9e44-51c1d0e19ec7"",
    ""spaces_url"": ""/v2/users/uaa-id-160/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-160/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-160/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-160/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-160/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-160/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-160/audited_spaces""
  }
}";

            UpdateUserResponse obj = Utilities.DeserializeJson<UpdateUserResponse>(json);

            Assert.AreEqual("uaa-id-160", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-160", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("83f98823-d43a-4a6c-9e44-51c1d0e19ec7", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/83f98823-d43a-4a6c-9e44-51c1d0e19ec7", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-160/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-113"",
    ""url"": ""/v2/users/uaa-id-113"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""2cf4484c-3be9-4454-803c-3a5dc79444bd"",
    ""default_space_url"": ""/v2/spaces/2cf4484c-3be9-4454-803c-3a5dc79444bd"",
    ""spaces_url"": ""/v2/users/uaa-id-113/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-113/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-113/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-113/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-113/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-113/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-113/audited_spaces""
  }
}";

            RemoveSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-113", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-113", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("2cf4484c-3be9-4454-803c-3a5dc79444bd", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/2cf4484c-3be9-4454-803c-3a5dc79444bd", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-113/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-115"",
    ""url"": ""/v2/users/uaa-id-115"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""f330d0e1-795e-4922-9075-8e596d51117e"",
    ""default_space_url"": ""/v2/spaces/f330d0e1-795e-4922-9075-8e596d51117e"",
    ""spaces_url"": ""/v2/users/uaa-id-115/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-115/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-115/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-115/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-115/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-115/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-115/audited_spaces""
  }
}";

            AssociateSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-115", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-115", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("f330d0e1-795e-4922-9075-8e596d51117e", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/f330d0e1-795e-4922-9075-8e596d51117e", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-115/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-158"",
    ""url"": ""/v2/users/uaa-id-158"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""1ce2c59e-a5b5-4048-ae37-0e329cd65f0e"",
    ""default_space_url"": ""/v2/spaces/1ce2c59e-a5b5-4048-ae37-0e329cd65f0e"",
    ""spaces_url"": ""/v2/users/uaa-id-158/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-158/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-158/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-158/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-158/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-158/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-158/audited_spaces""
  }
}";

            RetrieveUserResponse obj = Utilities.DeserializeJson<RetrieveUserResponse>(json);

            Assert.AreEqual("uaa-id-158", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-158", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("1ce2c59e-a5b5-4048-ae37-0e329cd65f0e", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/1ce2c59e-a5b5-4048-ae37-0e329cd65f0e", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-158/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-119"",
    ""url"": ""/v2/users/uaa-id-119"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""861b3759-027b-4b0f-b9bd-f7f3b3b5f4d5"",
    ""default_space_url"": ""/v2/spaces/861b3759-027b-4b0f-b9bd-f7f3b3b5f4d5"",
    ""spaces_url"": ""/v2/users/uaa-id-119/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-119/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-119/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-119/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-119/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-119/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-119/audited_spaces""
  }
}";

            RemoveBillingManagedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveBillingManagedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-119", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-119", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("861b3759-027b-4b0f-b9bd-f7f3b3b5f4d5", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/861b3759-027b-4b0f-b9bd-f7f3b3b5f4d5", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-119/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""77d31dcb-9b61-4ebb-bf01-8af4caa6f303"",
        ""url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-510"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""296120b6-e337-4196-aa77-c71cc4c5da4f"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/296120b6-e337-4196-aa77-c71cc4c5da4f"",
        ""spaces_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/spaces"",
        ""domains_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/domains"",
        ""private_domains_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/private_domains"",
        ""users_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/users"",
        ""managers_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/managers"",
        ""billing_managers_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/billing_managers"",
        ""auditors_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/auditors"",
        ""app_events_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllBillingManagedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("77d31dcb-9b61-4ebb-bf01-8af4caa6f303", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-510", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("296120b6-e337-4196-aa77-c71cc4c5da4f", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/296120b6-e337-4196-aa77-c71cc4c5da4f", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/77d31dcb-9b61-4ebb-bf01-8af4caa6f303/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditedSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-125"",
    ""url"": ""/v2/users/uaa-id-125"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c5f808ee-c458-4634-b080-99c63e4644ca"",
    ""default_space_url"": ""/v2/spaces/c5f808ee-c458-4634-b080-99c63e4644ca"",
    ""spaces_url"": ""/v2/users/uaa-id-125/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-125/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-125/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-125/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-125/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-125/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-125/audited_spaces""
  }
}";

            RemoveAuditedSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveAuditedSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-125", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-125", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c5f808ee-c458-4634-b080-99c63e4644ca", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c5f808ee-c458-4634-b080-99c63e4644ca", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-125/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedSpaceWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-139"",
    ""url"": ""/v2/users/uaa-id-139"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""6cbb2089-b86b-4ff9-a59b-6dff1ff9f991"",
    ""default_space_url"": ""/v2/spaces/6cbb2089-b86b-4ff9-a59b-6dff1ff9f991"",
    ""spaces_url"": ""/v2/users/uaa-id-139/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-139/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-139/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-139/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-139/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-139/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-139/audited_spaces""
  }
}";

            AssociateManagedSpaceWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedSpaceWithUserResponse>(json);

            Assert.AreEqual("uaa-id-139", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-139", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("6cbb2089-b86b-4ff9-a59b-6dff1ff9f991", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/6cbb2089-b86b-4ff9-a59b-6dff1ff9f991", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-139/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-121"",
    ""url"": ""/v2/users/uaa-id-121"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""e985d3f4-cfe9-400c-bc02-ed3aaa4e76f4"",
    ""default_space_url"": ""/v2/spaces/e985d3f4-cfe9-400c-bc02-ed3aaa4e76f4"",
    ""spaces_url"": ""/v2/users/uaa-id-121/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-121/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-121/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-121/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-121/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-121/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-121/audited_spaces""
  }
}";

            AssociateBillingManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateBillingManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-121", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-121", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("e985d3f4-cfe9-400c-bc02-ed3aaa4e76f4", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/e985d3f4-cfe9-400c-bc02-ed3aaa4e76f4", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-121/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-152"",
        ""url"": ""/v2/users/uaa-id-152"",
        ""created_at"": ""2015-07-29T12:47:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": ""f3755107-30cd-4063-887a-7d14da4812fd"",
        ""username"": ""user@example.com"",
        ""default_space_url"": ""/v2/spaces/f3755107-30cd-4063-887a-7d14da4812fd"",
        ""spaces_url"": ""/v2/users/uaa-id-152/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-152/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-152/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-152/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-152/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-152/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-152/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-153"",
        ""url"": ""/v2/users/uaa-id-153"",
        ""created_at"": ""2015-07-29T12:47:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": true,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-153/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-153/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-153/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-153/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-153/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-153/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-153/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersResponse> page = Utilities.DeserializePage<ListAllUsersResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-152", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-152", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("f3755107-30cd-4063-887a-7d14da4812fd", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/spaces/f3755107-30cd-4063-887a-7d14da4812fd", TestUtil.ToTestableString(page[0].DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-152/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-153", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-153", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-153/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-153/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-153/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-153/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-153/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-153/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-153/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7ee40bd9-3dd3-4804-a0e7-f1a10d99adba"",
        ""url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-533"",
        ""organization_guid"": ""40017771-65b0-4b93-b17c-c4eb92607471"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/40017771-65b0-4b93-b17c-c4eb92607471"",
        ""developers_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/developers"",
        ""managers_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/managers"",
        ""auditors_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/auditors"",
        ""apps_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/apps"",
        ""routes_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/routes"",
        ""domains_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/domains"",
        ""service_instances_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/service_instances"",
        ""app_events_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/app_events"",
        ""events_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/events"",
        ""security_groups_url"": ""/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedSpacesForUserResponse> page = Utilities.DeserializePage<ListAllAuditedSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7ee40bd9-3dd3-4804-a0e7-f1a10d99adba", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-533", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("40017771-65b0-4b93-b17c-c4eb92607471", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/40017771-65b0-4b93-b17c-c4eb92607471", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/7ee40bd9-3dd3-4804-a0e7-f1a10d99adba/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-107"",
    ""url"": ""/v2/users/uaa-id-107"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""a8fd401f-a5f3-493d-bc5f-65e3a7df1f14"",
    ""default_space_url"": ""/v2/spaces/a8fd401f-a5f3-493d-bc5f-65e3a7df1f14"",
    ""spaces_url"": ""/v2/users/uaa-id-107/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-107/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-107/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-107/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-107/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-107/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-107/audited_spaces""
  }
}";

            RemoveAuditedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveAuditedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-107", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-107", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("a8fd401f-a5f3-493d-bc5f-65e3a7df1f14", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/a8fd401f-a5f3-493d-bc5f-65e3a7df1f14", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-107/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagedSpaceFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-137"",
    ""url"": ""/v2/users/uaa-id-137"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""82e4ba45-aa0a-4c41-9501-c669fbbe748d"",
    ""default_space_url"": ""/v2/spaces/82e4ba45-aa0a-4c41-9501-c669fbbe748d"",
    ""spaces_url"": ""/v2/users/uaa-id-137/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-137/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-137/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-137/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-137/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-137/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-137/audited_spaces""
  }
}";

            RemoveManagedSpaceFromUserResponse obj = Utilities.DeserializeJson<RemoveManagedSpaceFromUserResponse>(json);

            Assert.AreEqual("uaa-id-137", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-137", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("82e4ba45-aa0a-4c41-9501-c669fbbe748d", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/82e4ba45-aa0a-4c41-9501-c669fbbe748d", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-137/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestCreateUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3"",
    ""url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": null,
    ""spaces_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/spaces"",
    ""organizations_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/organizations"",
    ""managed_organizations_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/audited_spaces""
  }
}";

            CreateUserResponse obj = Utilities.DeserializeJson<CreateUserResponse>(json);

            Assert.AreEqual("guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/guid-2e98a51c-3cac-41f3-b252-6dc8ced515a3/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-146"",
    ""url"": ""/v2/users/uaa-id-146"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c976295e-7ef5-4bc4-9ada-9df0a7b6a3e8"",
    ""default_space_url"": ""/v2/spaces/c976295e-7ef5-4bc4-9ada-9df0a7b6a3e8"",
    ""spaces_url"": ""/v2/users/uaa-id-146/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-146/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-146/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-146/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-146/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-146/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-146/audited_spaces""
  }
}";

            AssociateManagedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateManagedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-146", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-146", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c976295e-7ef5-4bc4-9ada-9df0a7b6a3e8", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c976295e-7ef5-4bc4-9ada-9df0a7b6a3e8", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-146/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""71ee9acc-aa9b-40dd-9514-18eab245d219"",
        ""url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-488"",
        ""organization_guid"": ""81209ff6-7ed9-4f01-aac8-fba880248666"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/81209ff6-7ed9-4f01-aac8-fba880248666"",
        ""developers_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/developers"",
        ""managers_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/managers"",
        ""auditors_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/auditors"",
        ""apps_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/apps"",
        ""routes_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/routes"",
        ""domains_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/domains"",
        ""service_instances_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/service_instances"",
        ""app_events_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/app_events"",
        ""events_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/events"",
        ""security_groups_url"": ""/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForUserResponse> page = Utilities.DeserializePage<ListAllSpacesForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("71ee9acc-aa9b-40dd-9514-18eab245d219", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-488", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("81209ff6-7ed9-4f01-aac8-fba880248666", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/81209ff6-7ed9-4f01-aac8-fba880248666", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/71ee9acc-aa9b-40dd-9514-18eab245d219/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestRemoveOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-131"",
    ""url"": ""/v2/users/uaa-id-131"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""5e06a241-bfe4-4d46-b38e-8ff9269c4c5c"",
    ""default_space_url"": ""/v2/spaces/5e06a241-bfe4-4d46-b38e-8ff9269c4c5c"",
    ""spaces_url"": ""/v2/users/uaa-id-131/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-131/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-131/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-131/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-131/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-131/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-131/audited_spaces""
  }
}";

            RemoveOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-131", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-131", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("5e06a241-bfe4-4d46-b38e-8ff9269c4c5c", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/5e06a241-bfe4-4d46-b38e-8ff9269c4c5c", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-131/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveManagedOrganizationFromUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-143"",
    ""url"": ""/v2/users/uaa-id-143"",
    ""created_at"": ""2015-07-29T12:47:20Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""7cb03f4c-2b51-4eec-805b-509290163a99"",
    ""default_space_url"": ""/v2/spaces/7cb03f4c-2b51-4eec-805b-509290163a99"",
    ""spaces_url"": ""/v2/users/uaa-id-143/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-143/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-143/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-143/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-143/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-143/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-143/audited_spaces""
  }
}";

            RemoveManagedOrganizationFromUserResponse obj = Utilities.DeserializeJson<RemoveManagedOrganizationFromUserResponse>(json);

            Assert.AreEqual("uaa-id-143", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-143", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("7cb03f4c-2b51-4eec-805b-509290163a99", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/7cb03f4c-2b51-4eec-805b-509290163a99", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-143/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditedOrganizationsForUserResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d4f3eff4-c647-4a75-97ec-620da0d61d20"",
        ""url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20"",
        ""created_at"": ""2015-07-29T12:47:19Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-471"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""e6b0ec28-2b7d-45cf-9ea1-4a00dd8c14af"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/e6b0ec28-2b7d-45cf-9ea1-4a00dd8c14af"",
        ""spaces_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/spaces"",
        ""domains_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/domains"",
        ""private_domains_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/private_domains"",
        ""users_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/users"",
        ""managers_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/managers"",
        ""billing_managers_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/billing_managers"",
        ""auditors_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/auditors"",
        ""app_events_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditedOrganizationsForUserResponse> page = Utilities.DeserializePage<ListAllAuditedOrganizationsForUserResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d4f3eff4-c647-4a75-97ec-620da0d61d20", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-471", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("e6b0ec28-2b7d-45cf-9ea1-4a00dd8c14af", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/e6b0ec28-2b7d-45cf-9ea1-4a00dd8c14af", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d4f3eff4-c647-4a75-97ec-620da0d61d20/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditedOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-109"",
    ""url"": ""/v2/users/uaa-id-109"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""c5291ad6-4872-4618-839c-1b082385bfa0"",
    ""default_space_url"": ""/v2/spaces/c5291ad6-4872-4618-839c-1b082385bfa0"",
    ""spaces_url"": ""/v2/users/uaa-id-109/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-109/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-109/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-109/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-109/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-109/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-109/audited_spaces""
  }
}";

            AssociateAuditedOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateAuditedOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-109", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-109", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("c5291ad6-4872-4618-839c-1b082385bfa0", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/c5291ad6-4872-4618-839c-1b082385bfa0", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-109/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateOrganizationWithUserResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""uaa-id-133"",
    ""url"": ""/v2/users/uaa-id-133"",
    ""created_at"": ""2015-07-29T12:47:19Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""admin"": false,
    ""active"": false,
    ""default_space_guid"": ""709ffb56-a188-45dd-83bb-fc0a4579d04c"",
    ""default_space_url"": ""/v2/spaces/709ffb56-a188-45dd-83bb-fc0a4579d04c"",
    ""spaces_url"": ""/v2/users/uaa-id-133/spaces"",
    ""organizations_url"": ""/v2/users/uaa-id-133/organizations"",
    ""managed_organizations_url"": ""/v2/users/uaa-id-133/managed_organizations"",
    ""billing_managed_organizations_url"": ""/v2/users/uaa-id-133/billing_managed_organizations"",
    ""audited_organizations_url"": ""/v2/users/uaa-id-133/audited_organizations"",
    ""managed_spaces_url"": ""/v2/users/uaa-id-133/managed_spaces"",
    ""audited_spaces_url"": ""/v2/users/uaa-id-133/audited_spaces""
  }
}";

            AssociateOrganizationWithUserResponse obj = Utilities.DeserializeJson<AssociateOrganizationWithUserResponse>(json);

            Assert.AreEqual("uaa-id-133", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-133", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("709ffb56-a188-45dd-83bb-fc0a4579d04c", TestUtil.ToTestableString(obj.DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/spaces/709ffb56-a188-45dd-83bb-fc0a4579d04c", TestUtil.ToTestableString(obj.DefaultSpaceUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/organizations", TestUtil.ToTestableString(obj.OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/managed_organizations", TestUtil.ToTestableString(obj.ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/billing_managed_organizations", TestUtil.ToTestableString(obj.BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/audited_organizations", TestUtil.ToTestableString(obj.AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/managed_spaces", TestUtil.ToTestableString(obj.ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-133/audited_spaces", TestUtil.ToTestableString(obj.AuditedSpacesUrl), true);
        }
    }
}
