//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class EventsTest
    {


        [TestMethod]
        public void TestListUserProvidedServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3adaab7a-9836-4a14-b112-77403a6b3006"",
        ""url"": ""/v2/events/3adaab7a-9836-4a14-b112-77403a6b3006"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.delete"",
        ""actor"": ""uaa-id-203"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7f67e544-9d00-4eec-85d2-775159c32349"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1134"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""d0509f2b-6c6e-4a3d-a5ca-dc58b66b6371"",
        ""organization_guid"": ""d77060e6-efb3-440e-b2b9-31add4283710""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3adaab7a-9836-4a14-b112-77403a6b3006", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/3adaab7a-9836-4a14-b112-77403a6b3006", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-203", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7f67e544-9d00-4eec-85d2-775159c32349", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1134", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("d0509f2b-6c6e-4a3d-a5ca-dc58b66b6371", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d77060e6-efb3-440e-b2b9-31add4283710", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStopEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1bcc1054-abf6-4dc7-845c-25fff468b409"",
        ""url"": ""/v2/events/1bcc1054-abf6-4dc7-845c-25fff468b409"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.stop"",
        ""actor"": ""uaa-id-189"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""efe4758f-b2ed-47bb-9240-2c1f70709a6a"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-932"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {

        },
        ""space_guid"": ""967d08c7-95c3-4f54-a7ae-9560f3bc087b"",
        ""organization_guid"": ""9e0c549e-1074-4782-aa23-001d0872707f""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStopEventsResponse> page = Utilities.DeserializePage<ListAppStopEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1bcc1054-abf6-4dc7-845c-25fff468b409", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1bcc1054-abf6-4dc7-845c-25fff468b409", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.stop", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-189", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("efe4758f-b2ed-47bb-9240-2c1f70709a6a", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-932", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("967d08c7-95c3-4f54-a7ae-9560f3bc087b", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9e0c549e-1074-4782-aa23-001d0872707f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""623f7f27-6db5-4e5a-8596-59e710fb80c7"",
        ""url"": ""/v2/events/623f7f27-6db5-4e5a-8596-59e710fb80c7"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.create"",
        ""actor"": ""uaa-id-175"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9775cb8f-1165-470d-b28b-d6b3b46bb2a0"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""b5090096-5003-4b68-b247-938e3cf3970e"",
            ""organization_guid"": ""63cb078f-3355-4859-a8f9-34f40234e181""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""63cb078f-3355-4859-a8f9-34f40234e181""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("623f7f27-6db5-4e5a-8596-59e710fb80c7", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/623f7f27-6db5-4e5a-8596-59e710fb80c7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-175", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9775cb8f-1165-470d-b28b-d6b3b46bb2a0", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("63cb078f-3355-4859-a8f9-34f40234e181", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ecce0968-2d42-4cb7-89fa-b5a4081090b4"",
        ""url"": ""/v2/events/ecce0968-2d42-4cb7-89fa-b5a4081090b4"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.update"",
        ""actor"": ""uaa-id-230"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""242631e0-df68-4139-8e2f-5ea27abe2f42"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1515"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""c7e5cff0-0bf8-4a9e-8ee8-2344af0d54da""
          }
        },
        ""space_guid"": ""14821a23-7c12-4eff-ad23-8eeea2cc6239"",
        ""organization_guid"": ""890fd5d6-811c-49c0-800a-e10a40ed787b""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ecce0968-2d42-4cb7-89fa-b5a4081090b4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ecce0968-2d42-4cb7-89fa-b5a4081090b4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-230", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("242631e0-df68-4139-8e2f-5ea27abe2f42", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1515", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("14821a23-7c12-4eff-ad23-8eeea2cc6239", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("890fd5d6-811c-49c0-800a-e10a40ed787b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""588526cb-9ffe-4843-8eb5-fd23d595e27a"",
        ""url"": ""/v2/events/588526cb-9ffe-4843-8eb5-fd23d595e27a"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.delete-request"",
        ""actor"": ""uaa-id-181"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ceefeb10-c5d5-45c5-a91b-dbb6582425d8"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-828"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": true
          }
        },
        ""space_guid"": ""ceefeb10-c5d5-45c5-a91b-dbb6582425d8"",
        ""organization_guid"": ""9117e0da-f073-4b53-9056-e3a19ecda2bc""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceDeleteEventsResponse> page = Utilities.DeserializePage<ListSpaceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("588526cb-9ffe-4843-8eb5-fd23d595e27a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/588526cb-9ffe-4843-8eb5-fd23d595e27a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-181", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ceefeb10-c5d5-45c5-a91b-dbb6582425d8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-828", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("ceefeb10-c5d5-45c5-a91b-dbb6582425d8", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("9117e0da-f073-4b53-9056-e3a19ecda2bc", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""2bced674-ff22-4be4-95c2-b988e9c0f162"",
        ""url"": ""/v2/events/2bced674-ff22-4be4-95c2-b988e9c0f162"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.delete"",
        ""actor"": ""uaa-id-218"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""65f61e80-38fb-4d4e-a8af-efb6ba01350c"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""7e7ea985-67b4-4011-bd3f-4da899390bb3""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("2bced674-ff22-4be4-95c2-b988e9c0f162", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2bced674-ff22-4be4-95c2-b988e9c0f162", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-218", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("65f61e80-38fb-4d4e-a8af-efb6ba01350c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("7e7ea985-67b4-4011-bd3f-4da899390bb3", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""09b1aa6f-936b-4766-9d57-bd2cf294593e"",
        ""url"": ""/v2/events/09b1aa6f-936b-4766-9d57-bd2cf294593e"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.create"",
        ""actor"": ""uaa-id-224"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""52eedef3-6b42-487f-9da5-dca2fcc06737"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""pancake broker"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""pancake broker"",
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_username"": ""panda"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("09b1aa6f-936b-4766-9d57-bd2cf294593e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/09b1aa6f-936b-4766-9d57-bd2cf294593e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-224", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("52eedef3-6b42-487f-9da5-dca2fcc06737", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("pancake broker", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c82e9882-1bd7-407c-a6da-3029259a0e69"",
        ""url"": ""/v2/events/c82e9882-1bd7-407c-a6da-3029259a0e69"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.delete"",
        ""actor"": ""98451f44-210a-4542-922e-27443a531139"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1217"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c82e9882-1bd7-407c-a6da-3029259a0e69", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/c82e9882-1bd7-407c-a6da-3029259a0e69", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("98451f44-210a-4542-922e-27443a531139", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1217", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""1793cefd-bc9b-4b9e-848b-cd33dd877ba2"",
        ""url"": ""/v2/events/1793cefd-bc9b-4b9e-848b-cd33dd877ba2"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.create"",
        ""actor"": ""b4a74436-0772-409c-a429-d8a75dea7e83"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-882"",
        ""actee"": ""guid"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""plan-name"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""name"": ""plan-name"",
          ""free"": true,
          ""description"": ""A plan"",
          ""service_guid"": ""6d0e6c5f-355d-49af-bf84-a29c3cb99a96"",
          ""extra"": null,
          ""unique_id"": ""guid"",
          ""public"": true,
          ""active"": true
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanCreateEventsResponse> page = Utilities.DeserializePage<ListServicePlanCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("1793cefd-bc9b-4b9e-848b-cd33dd877ba2", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/1793cefd-bc9b-4b9e-848b-cd33dd877ba2", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("b4a74436-0772-409c-a429-d8a75dea7e83", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-882", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("plan-name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestRetrieveEventResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0ba4fcdc-3e4d-4808-ace3-313a2c7bb0b2"",
    ""url"": ""/v2/events/0ba4fcdc-3e4d-4808-ace3-313a2c7bb0b2"",
    ""created_at"": ""2015-07-29T12:47:23Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""type"": ""name-1549"",
    ""actor"": ""guid-c3935eb3-f9ce-44c3-afbc-d6723aaa22d7"",
    ""actor_type"": ""name-1550"",
    ""actor_name"": ""name-1551"",
    ""actee"": ""guid-8c09f696-87a1-4a86-bb28-bc9960746d1c"",
    ""actee_type"": ""name-1552"",
    ""actee_name"": ""name-1553"",
    ""timestamp"": ""2015-07-29T12:47:23Z"",
    ""metadata"": {

    },
    ""space_guid"": ""90952d12-b9b6-445d-bdcc-03b78280b9fd"",
    ""organization_guid"": ""66a8256a-5260-4bc4-a072-4f42a49d74fb""
  }
}";

            RetrieveEventResponse obj = Utilities.DeserializeJson<RetrieveEventResponse>(json);

            Assert.AreEqual("0ba4fcdc-3e4d-4808-ace3-313a2c7bb0b2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0ba4fcdc-3e4d-4808-ace3-313a2c7bb0b2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1549", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("guid-c3935eb3-f9ce-44c3-afbc-d6723aaa22d7", TestUtil.ToTestableString(obj.Actor), true);
            Assert.AreEqual("name-1550", TestUtil.ToTestableString(obj.ActorType), true);
            Assert.AreEqual("name-1551", TestUtil.ToTestableString(obj.ActorName), true);
            Assert.AreEqual("guid-8c09f696-87a1-4a86-bb28-bc9960746d1c", TestUtil.ToTestableString(obj.Actee), true);
            Assert.AreEqual("name-1552", TestUtil.ToTestableString(obj.ActeeType), true);
            Assert.AreEqual("name-1553", TestUtil.ToTestableString(obj.ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(obj.Timestamp), true);
            Assert.AreEqual("90952d12-b9b6-445d-bdcc-03b78280b9fd", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("66a8256a-5260-4bc4-a072-4f42a49d74fb", TestUtil.ToTestableString(obj.OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""39db46ed-5114-4c38-aca1-18a32abd5e0d"",
        ""url"": ""/v2/events/39db46ed-5114-4c38-aca1-18a32abd5e0d"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.update"",
        ""actor"": ""1ca4f138-afc5-4850-9d79-a798604dd027"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1328"",
        ""actee"": ""6e7f8770-9dfa-42ef-ae42-6b9e29f951f0"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""new name"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""name"": ""new name""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("39db46ed-5114-4c38-aca1-18a32abd5e0d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/39db46ed-5114-4c38-aca1-18a32abd5e0d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("1ca4f138-afc5-4850-9d79-a798604dd027", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1328", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("6e7f8770-9dfa-42ef-ae42-6b9e29f951f0", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new name", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""78725b44-3a91-490e-9e99-b761bb0b84a6"",
        ""url"": ""/v2/events/78725b44-3a91-490e-9e99-b761bb0b84a6"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.update"",
        ""actor"": ""uaa-id-232"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""9616f5d0-ea07-4de6-ba36-d41bbf3bac70"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1545"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""request"": {
            ""credentials"": ""[REDACTED]""
          }
        },
        ""space_guid"": ""78d8ca9d-ea7f-4598-a954-7ea92635c1a4"",
        ""organization_guid"": ""41a1a686-e1c2-40aa-b2b8-ea1db49226a5""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceUpdateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("78725b44-3a91-490e-9e99-b761bb0b84a6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/78725b44-3a91-490e-9e99-b761bb0b84a6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-232", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("9616f5d0-ea07-4de6-ba36-d41bbf3bac70", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1545", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("78d8ca9d-ea7f-4598-a954-7ea92635c1a4", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("41a1a686-e1c2-40aa-b2b8-ea1db49226a5", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7a79dcfd-1188-4f89-9479-8d9e4779f440"",
        ""url"": ""/v2/events/7a79dcfd-1188-4f89-9479-8d9e4779f440"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.delete"",
        ""actor"": ""uaa-id-226"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""fadd5fef-7cbe-4183-8870-b2673bb9ea31"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1460"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""0b9a8c25-4f83-4585-9464-55d1939d961d"",
        ""organization_guid"": ""d63e2628-b356-432e-9a50-808b6eaa6aac""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7a79dcfd-1188-4f89-9479-8d9e4779f440", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7a79dcfd-1188-4f89-9479-8d9e4779f440", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-226", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("fadd5fef-7cbe-4183-8870-b2673bb9ea31", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1460", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0b9a8c25-4f83-4585-9464-55d1939d961d", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d63e2628-b356-432e-9a50-808b6eaa6aac", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppStartEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""aaae7413-9479-46a1-955c-0c97ef240e96"",
        ""url"": ""/v2/events/aaae7413-9479-46a1-955c-0c97ef240e96"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.start"",
        ""actor"": ""uaa-id-199"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""400f1d08-f150-4219-a0ab-51d6bedea492"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1076"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {

        },
        ""space_guid"": ""0ad15346-d639-42d1-8d78-f0bffc870d19"",
        ""organization_guid"": ""aa8bc3e5-dcb4-46af-b8bf-5d60f5cd23cc""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppStartEventsResponse> page = Utilities.DeserializePage<ListAppStartEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("aaae7413-9479-46a1-955c-0c97ef240e96", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/aaae7413-9479-46a1-955c-0c97ef240e96", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.start", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-199", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("400f1d08-f150-4219-a0ab-51d6bedea492", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1076", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0ad15346-d639-42d1-8d78-f0bffc870d19", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("aa8bc3e5-dcb4-46af-b8bf-5d60f5cd23cc", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppExitedEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""daad7bf0-79c2-4c08-aafe-8e380bb0b7e5"",
        ""url"": ""/v2/events/daad7bf0-79c2-4c08-aafe-8e380bb0b7e5"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""app.crash"",
        ""actor"": ""71c37aae-ed23-4ee1-bf5f-f7fd52dbf458"",
        ""actor_type"": ""app"",
        ""actor_name"": ""name-1299"",
        ""actee"": ""71c37aae-ed23-4ee1-bf5f-f7fd52dbf458"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1299"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""instance"": 0,
          ""index"": 1,
          ""exit_status"": ""1"",
          ""exit_description"": ""out of memory"",
          ""reason"": ""crashed""
        },
        ""space_guid"": ""9b90ae50-ebba-48f6-9791-b33feed480fc"",
        ""organization_guid"": ""03af177a-1c81-4ee0-b482-ad1bc782eb6a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppExitedEventsResponse> page = Utilities.DeserializePage<ListAppExitedEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("daad7bf0-79c2-4c08-aafe-8e380bb0b7e5", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/daad7bf0-79c2-4c08-aafe-8e380bb0b7e5", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("app.crash", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("71c37aae-ed23-4ee1-bf5f-f7fd52dbf458", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1299", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("71c37aae-ed23-4ee1-bf5f-f7fd52dbf458", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1299", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("9b90ae50-ebba-48f6-9791-b33feed480fc", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("03af177a-1c81-4ee0-b482-ad1bc782eb6a", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListEventsAssociatedWithAppSinceJanuary12014Response()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cc8bc7f9-0403-4b9c-b0b0-a1754d8c2279"",
        ""url"": ""/v2/events/cc8bc7f9-0403-4b9c-b0b0-a1754d8c2279"",
        ""created_at"": ""2015-07-29T12:47:20Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-171"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""22142e9b-c854-488b-ad44-817d7d229143"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-689"",
        ""timestamp"": ""2015-07-29T12:47:20Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""6c4717ee-6a98-4951-9bc2-e665c383c972"",
        ""organization_guid"": ""8bab47c6-763d-4192-83ef-346e634b4bcf""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""2ad66324-bb27-4115-9ae6-5938c45ff273"",
        ""url"": ""/v2/events/2ad66324-bb27-4115-9ae6-5938c45ff273"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-171"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""22142e9b-c854-488b-ad44-817d7d229143"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-689"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""6c4717ee-6a98-4951-9bc2-e665c383c972"",
        ""organization_guid"": ""8bab47c6-763d-4192-83ef-346e634b4bcf""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""9e7bd524-e272-48bb-b369-0161e58e9ad6"",
        ""url"": ""/v2/events/9e7bd524-e272-48bb-b369-0161e58e9ad6"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-171"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""22142e9b-c854-488b-ad44-817d7d229143"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-689"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""6c4717ee-6a98-4951-9bc2-e665c383c972"",
        ""organization_guid"": ""8bab47c6-763d-4192-83ef-346e634b4bcf""
      }
    }
  ]
}";

            PagedResponseCollection<ListEventsAssociatedWithAppSinceJanuary12014Response> page = Utilities.DeserializePage<ListEventsAssociatedWithAppSinceJanuary12014Response>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cc8bc7f9-0403-4b9c-b0b0-a1754d8c2279", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/cc8bc7f9-0403-4b9c-b0b0-a1754d8c2279", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-171", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("22142e9b-c854-488b-ad44-817d7d229143", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-689", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:20Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("6c4717ee-6a98-4951-9bc2-e665c383c972", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8bab47c6-763d-4192-83ef-346e634b4bcf", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("2ad66324-bb27-4115-9ae6-5938c45ff273", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/2ad66324-bb27-4115-9ae6-5938c45ff273", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("uaa-id-171", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("22142e9b-c854-488b-ad44-817d7d229143", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-689", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("6c4717ee-6a98-4951-9bc2-e665c383c972", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("8bab47c6-763d-4192-83ef-346e634b4bcf", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("9e7bd524-e272-48bb-b369-0161e58e9ad6", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9e7bd524-e272-48bb-b369-0161e58e9ad6", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("uaa-id-171", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("22142e9b-c854-488b-ad44-817d7d229143", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-689", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("6c4717ee-6a98-4951-9bc2-e665c383c972", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("8bab47c6-763d-4192-83ef-346e634b4bcf", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""10b14b14-7a4a-4854-9081-653255b19118"",
        ""url"": ""/v2/events/10b14b14-7a4a-4854-9081-653255b19118"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.delete"",
        ""actor"": ""uaa-id-187"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""99b2f5eb-74a7-46b5-be19-a2c065084b14"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-907"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("10b14b14-7a4a-4854-9081-653255b19118", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/10b14b14-7a4a-4854-9081-653255b19118", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-187", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("99b2f5eb-74a7-46b5-be19-a2c065084b14", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-907", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListUserProvidedServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""96597b38-389b-40b2-ae42-03151db2f3ca"",
        ""url"": ""/v2/events/96597b38-389b-40b2-ae42-03151db2f3ca"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.user_provided_service_instance.create"",
        ""actor"": ""uaa-id-195"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""f9005195-1feb-49a9-a1d3-574b1772389d"",
        ""actee_type"": ""user_provided_service_instance"",
        ""actee_name"": ""name-1018"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1018"",
            ""space_guid"": ""e2f1b64c-e53c-48f7-a9e2-b9fee4285bf3""
          }
        },
        ""space_guid"": ""e2f1b64c-e53c-48f7-a9e2-b9fee4285bf3"",
        ""organization_guid"": ""1fdf27d7-f2a6-4f5b-b0e4-9dde351174a9""
      }
    }
  ]
}";

            PagedResponseCollection<ListUserProvidedServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListUserProvidedServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("96597b38-389b-40b2-ae42-03151db2f3ca", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/96597b38-389b-40b2-ae42-03151db2f3ca", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.user_provided_service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-195", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f9005195-1feb-49a9-a1d3-574b1772389d", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1018", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("e2f1b64c-e53c-48f7-a9e2-b9fee4285bf3", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("1fdf27d7-f2a6-4f5b-b0e4-9dde351174a9", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a0e2952f-c67b-4510-bf62-2334bbdbe49c"",
        ""url"": ""/v2/events/a0e2952f-c67b-4510-bf62-2334bbdbe49c"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.create"",
        ""actor"": ""aeeaa5ec-ea8d-4aa9-9854-1942020d7b6e"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1382"",
        ""actee"": ""guid"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""label"": ""label"",
          ""provider"": null,
          ""url"": null,
          ""description"": ""BOOOO"",
          ""long_description"": null,
          ""version"": null,
          ""info_url"": null,
          ""active"": true,
          ""bindable"": true,
          ""unique_id"": null,
          ""extra"": null,
          ""tags"": [

          ],
          ""requires"": [

          ],
          ""documentation_url"": null,
          ""service_broker_guid"": ""aeeaa5ec-ea8d-4aa9-9854-1942020d7b6e"",
          ""plan_updateable"": false
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a0e2952f-c67b-4510-bf62-2334bbdbe49c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a0e2952f-c67b-4510-bf62-2334bbdbe49c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("aeeaa5ec-ea8d-4aa9-9854-1942020d7b6e", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1382", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAllEventsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9a96dc17-3977-457f-9cf5-b3ec929a7380"",
        ""url"": ""/v2/events/9a96dc17-3977-457f-9cf5-b3ec929a7380"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1573"",
        ""actor"": ""guid-19b8239a-c0c1-410d-b718-f35d11e9e047"",
        ""actor_type"": ""name-1574"",
        ""actor_name"": ""name-1575"",
        ""actee"": ""guid-75a28def-f1ab-4714-baeb-38039af2ef97"",
        ""actee_type"": ""name-1576"",
        ""actee_name"": ""name-1577"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {

        },
        ""space_guid"": ""60f4b2f7-9d28-4276-8348-379d57430126"",
        ""organization_guid"": ""c2fea546-d0c6-4d99-a368-65e39f8d6c2b""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""e70496f0-4f31-46ab-ae8f-0e414241aa95"",
        ""url"": ""/v2/events/e70496f0-4f31-46ab-ae8f-0e414241aa95"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1581"",
        ""actor"": ""guid-33282cc6-dd98-438e-b313-a44603657410"",
        ""actor_type"": ""name-1582"",
        ""actor_name"": ""name-1583"",
        ""actee"": ""guid-9fd89ec7-95e3-4cf0-8d52-8cca4bc81c4e"",
        ""actee_type"": ""name-1584"",
        ""actee_name"": ""name-1585"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {

        },
        ""space_guid"": ""02395a0b-468a-4e85-9b88-820d99e2b738"",
        ""organization_guid"": ""eee68608-2b8b-4685-a913-f641fe2f8289""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""41924879-0333-44cd-80a5-53ac249f0051"",
        ""url"": ""/v2/events/41924879-0333-44cd-80a5-53ac249f0051"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""name-1589"",
        ""actor"": ""guid-21462d5c-d6c4-43bd-9afe-ce2a026901ec"",
        ""actor_type"": ""name-1590"",
        ""actor_name"": ""name-1591"",
        ""actee"": ""guid-9c90f25d-b364-4d02-9560-7118a6d7b032"",
        ""actee_type"": ""name-1592"",
        ""actee_name"": ""name-1593"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {

        },
        ""space_guid"": ""14af3686-6927-4dff-8dd3-bb5ac33e85c5"",
        ""organization_guid"": ""15a074cb-5206-4ccf-b172-a593caf1a05a""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllEventsResponse> page = Utilities.DeserializePage<ListAllEventsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9a96dc17-3977-457f-9cf5-b3ec929a7380", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/9a96dc17-3977-457f-9cf5-b3ec929a7380", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1573", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("guid-19b8239a-c0c1-410d-b718-f35d11e9e047", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("name-1574", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1575", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("guid-75a28def-f1ab-4714-baeb-38039af2ef97", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("name-1576", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1577", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("60f4b2f7-9d28-4276-8348-379d57430126", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c2fea546-d0c6-4d99-a368-65e39f8d6c2b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("e70496f0-4f31-46ab-ae8f-0e414241aa95", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e70496f0-4f31-46ab-ae8f-0e414241aa95", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1581", TestUtil.ToTestableString(page[1].Type), true);
            Assert.AreEqual("guid-33282cc6-dd98-438e-b313-a44603657410", TestUtil.ToTestableString(page[1].Actor), true);
            Assert.AreEqual("name-1582", TestUtil.ToTestableString(page[1].ActorType), true);
            Assert.AreEqual("name-1583", TestUtil.ToTestableString(page[1].ActorName), true);
            Assert.AreEqual("guid-9fd89ec7-95e3-4cf0-8d52-8cca4bc81c4e", TestUtil.ToTestableString(page[1].Actee), true);
            Assert.AreEqual("name-1584", TestUtil.ToTestableString(page[1].ActeeType), true);
            Assert.AreEqual("name-1585", TestUtil.ToTestableString(page[1].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[1].Timestamp), true);
            Assert.AreEqual("02395a0b-468a-4e85-9b88-820d99e2b738", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("eee68608-2b8b-4685-a913-f641fe2f8289", TestUtil.ToTestableString(page[1].OrganizationGuid), true);
            Assert.AreEqual("41924879-0333-44cd-80a5-53ac249f0051", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/41924879-0333-44cd-80a5-53ac249f0051", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1589", TestUtil.ToTestableString(page[2].Type), true);
            Assert.AreEqual("guid-21462d5c-d6c4-43bd-9afe-ce2a026901ec", TestUtil.ToTestableString(page[2].Actor), true);
            Assert.AreEqual("name-1590", TestUtil.ToTestableString(page[2].ActorType), true);
            Assert.AreEqual("name-1591", TestUtil.ToTestableString(page[2].ActorName), true);
            Assert.AreEqual("guid-9c90f25d-b364-4d02-9560-7118a6d7b032", TestUtil.ToTestableString(page[2].Actee), true);
            Assert.AreEqual("name-1592", TestUtil.ToTestableString(page[2].ActeeType), true);
            Assert.AreEqual("name-1593", TestUtil.ToTestableString(page[2].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[2].Timestamp), true);
            Assert.AreEqual("14af3686-6927-4dff-8dd3-bb5ac33e85c5", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("15a074cb-5206-4ccf-b172-a593caf1a05a", TestUtil.ToTestableString(page[2].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceInstanceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6641f26a-09ee-418b-b3a6-583287623d09"",
        ""url"": ""/v2/events/6641f26a-09ee-418b-b3a6-583287623d09"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_instance.create"",
        ""actor"": ""uaa-id-197"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""8895109e-3a2d-4b78-aaf0-deee281d3b3b"",
        ""actee_type"": ""service_instance"",
        ""actee_name"": ""name-1046"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""name-1046"",
            ""service_plan_guid"": ""5c0f1d7c-700a-4fa1-b9cd-030bf32f7f58"",
            ""space_guid"": ""8d866e1d-6227-423b-973c-749e58a8439f""
          }
        },
        ""space_guid"": ""8d866e1d-6227-423b-973c-749e58a8439f"",
        ""organization_guid"": ""023df884-a8f8-4c21-a533-b43b6002d4be""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceInstanceCreateEventsResponse> page = Utilities.DeserializePage<ListServiceInstanceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6641f26a-09ee-418b-b3a6-583287623d09", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/6641f26a-09ee-418b-b3a6-583287623d09", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_instance.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-197", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("8895109e-3a2d-4b78-aaf0-deee281d3b3b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_instance", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1046", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("8d866e1d-6227-423b-973c-749e58a8439f", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("023df884-a8f8-4c21-a533-b43b6002d4be", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""93a5e235-a95e-488f-8f3f-22374012dc7a"",
        ""url"": ""/v2/events/93a5e235-a95e-488f-8f3f-22374012dc7a"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.delete-request"",
        ""actor"": ""uaa-id-179"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""dffaf970-b381-4bf3-9802-bba28fe13461"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-799"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""recursive"": false
          }
        },
        ""space_guid"": ""068b6f15-23ac-4d98-b3f0-01304992e319"",
        ""organization_guid"": ""93e7a6aa-3a64-4b58-8ee5-8191e79f2f62""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppDeleteEventsResponse> page = Utilities.DeserializePage<ListAppDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("93a5e235-a95e-488f-8f3f-22374012dc7a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/93a5e235-a95e-488f-8f3f-22374012dc7a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.delete-request", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-179", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("dffaf970-b381-4bf3-9802-bba28fe13461", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-799", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("068b6f15-23ac-4d98-b3f0-01304992e319", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("93e7a6aa-3a64-4b58-8ee5-8191e79f2f62", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""26f588b7-de35-4f5a-98f7-8d9f1c3d362a"",
        ""url"": ""/v2/events/26f588b7-de35-4f5a-98f7-8d9f1c3d362a"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.update"",
        ""actor"": ""uaa-id-183"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""a909b9fe-53d9-4cf3-acf7-a111da0c81a9"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-855"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""a909b9fe-53d9-4cf3-acf7-a111da0c81a9"",
        ""organization_guid"": ""0dd66ec5-29e1-4d4e-976c-8e0df9dedc2b""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceUpdateEventsResponse> page = Utilities.DeserializePage<ListSpaceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("26f588b7-de35-4f5a-98f7-8d9f1c3d362a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/26f588b7-de35-4f5a-98f7-8d9f1c3d362a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-183", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("a909b9fe-53d9-4cf3-acf7-a111da0c81a9", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-855", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("a909b9fe-53d9-4cf3-acf7-a111da0c81a9", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("0dd66ec5-29e1-4d4e-976c-8e0df9dedc2b", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""68b878bd-b5b1-4280-aec2-117d1803b710"",
        ""url"": ""/v2/events/68b878bd-b5b1-4280-aec2-117d1803b710"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan.delete"",
        ""actor"": ""dc413de4-3981-4fd6-b7f3-f2a8985911e6"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1190"",
        ""actee"": ""3a1e1c94-5673-4c33-9c62-0776349d9a9b"",
        ""actee_type"": ""service_plan"",
        ""actee_name"": ""name-1191"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanDeleteEventsResponse> page = Utilities.DeserializePage<ListServicePlanDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("68b878bd-b5b1-4280-aec2-117d1803b710", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/68b878bd-b5b1-4280-aec2-117d1803b710", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("dc413de4-3981-4fd6-b7f3-f2a8985911e6", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1190", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("3a1e1c94-5673-4c33-9c62-0776349d9a9b", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1191", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8f286695-a6ee-4be5-b9f0-cfffa8a146e9"",
        ""url"": ""/v2/events/8f286695-a6ee-4be5-b9f0-cfffa8a146e9"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.create"",
        ""actor"": ""uaa-id-222"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""62595b2e-9007-46f8-901a-152adea0c562"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1407"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""49079587-a3b9-454e-90ee-a4c835f9f932"",
        ""organization_guid"": ""bd3709bc-1c63-4539-9244-0feddc60b554""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppCreateEventsResponse> page = Utilities.DeserializePage<ListAppCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8f286695-a6ee-4be5-b9f0-cfffa8a146e9", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8f286695-a6ee-4be5-b9f0-cfffa8a146e9", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-222", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("62595b2e-9007-46f8-901a-152adea0c562", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1407", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("49079587-a3b9-454e-90ee-a4c835f9f932", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("bd3709bc-1c63-4539-9244-0feddc60b554", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7562d0c9-4b3f-476d-b9c1-65445c8193a4"",
        ""url"": ""/v2/events/7562d0c9-4b3f-476d-b9c1-65445c8193a4"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.create"",
        ""actor"": ""uaa-id-211"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""1965a170-5f7c-4108-9f7f-e65be17f40ef"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""request"": {
            ""service_instance_guid"": ""b6c8ee2a-8b76-4f50-bb89-73c9d0cc33a3"",
            ""app_guid"": ""2f91e381-7b4f-48f6-a07a-b93c56bb24c3""
          }
        },
        ""space_guid"": ""f1ce3f17-e3c0-463b-b41c-61b3bedc37dc"",
        ""organization_guid"": ""c6574318-040c-4bee-a9ad-523402c96076""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingCreateEventsResponse> page = Utilities.DeserializePage<ListServiceBindingCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7562d0c9-4b3f-476d-b9c1-65445c8193a4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/7562d0c9-4b3f-476d-b9c1-65445c8193a4", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-211", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("1965a170-5f7c-4108-9f7f-e65be17f40ef", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("f1ce3f17-e3c0-463b-b41c-61b3bedc37dc", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c6574318-040c-4bee-a9ad-523402c96076", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e8f2263f-b1ec-46c3-a30b-7b98df26d92a"",
        ""url"": ""/v2/events/e8f2263f-b1ec-46c3-a30b-7b98df26d92a"",
        ""created_at"": ""2015-07-29T12:47:23Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.update"",
        ""actor"": ""12e7c545-7b1a-4567-a859-327eaf60063b"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-1490"",
        ""actee"": ""7c1b6e52-8303-4ea6-a441-62652ec9d765"",
        ""actee_type"": ""service"",
        ""actee_name"": ""new label"",
        ""timestamp"": ""2015-07-29T12:47:23Z"",
        ""metadata"": {
          ""label"": ""new label""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e8f2263f-b1ec-46c3-a30b-7b98df26d92a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/e8f2263f-b1ec-46c3-a30b-7b98df26d92a", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("12e7c545-7b1a-4567-a859-327eaf60063b", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-1490", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7c1b6e52-8303-4ea6-a441-62652ec9d765", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("new label", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:23Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDashboardClientCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d3722428-eaa5-4158-a914-edd956333e84"",
        ""url"": ""/v2/events/d3722428-eaa5-4158-a914-edd956333e84"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_dashboard_client.create"",
        ""actor"": ""c6af0381-6ad3-4417-b989-2b916cfecc9a"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-719"",
        ""actee"": ""client_id"",
        ""actee_type"": ""service_dashboard_client"",
        ""actee_name"": ""client_id"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""secret"": ""[REDACTED]"",
          ""redirect_uri"": ""example.com/redirect""
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDashboardClientCreateEventsResponse> page = Utilities.DeserializePage<ListServiceDashboardClientCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d3722428-eaa5-4158-a914-edd956333e84", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/d3722428-eaa5-4158-a914-edd956333e84", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_dashboard_client.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("c6af0381-6ad3-4417-b989-2b916cfecc9a", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-719", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_dashboard_client", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("client_id", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBrokerUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""ce4d298f-986b-4aa3-be79-a0f8e4dbcf62"",
        ""url"": ""/v2/events/ce4d298f-986b-4aa3-be79-a0f8e4dbcf62"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_broker.update"",
        ""actor"": ""uaa-id-213"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""e9b3ab46-1de3-47e9-a0a6-b3a1615f25b0"",
        ""actee_type"": ""service_broker"",
        ""actee_name"": ""name-1274"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""request"": {
            ""broker_url"": ""http://www.pancakes.com"",
            ""auth_password"": ""[REDACTED]""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBrokerUpdateEventsResponse> page = Utilities.DeserializePage<ListServiceBrokerUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("ce4d298f-986b-4aa3-be79-a0f8e4dbcf62", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/ce4d298f-986b-4aa3-be79-a0f8e4dbcf62", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_broker.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-213", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("e9b3ab46-1de3-47e9-a0a6-b3a1615f25b0", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1274", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListAppUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""295acc32-78da-4d16-9bc4-451097b231bb"",
        ""url"": ""/v2/events/295acc32-78da-4d16-9bc4-451097b231bb"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.app.update"",
        ""actor"": ""uaa-id-201"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""d4d3aff7-5b42-45cc-b594-7fd8cdba576c"",
        ""actee_type"": ""app"",
        ""actee_name"": ""name-1105"",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""new"",
            ""instances"": 1,
            ""memory"": 84,
            ""state"": ""STOPPED"",
            ""environment_json"": ""PRIVATE DATA HIDDEN""
          }
        },
        ""space_guid"": ""0521f7c9-3666-467b-b5c8-2ff7f85ba7af"",
        ""organization_guid"": ""c9e7449f-9050-4f49-b2ef-89c8019aa4a7""
      }
    }
  ]
}";

            PagedResponseCollection<ListAppUpdateEventsResponse> page = Utilities.DeserializePage<ListAppUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("295acc32-78da-4d16-9bc4-451097b231bb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/295acc32-78da-4d16-9bc4-451097b231bb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.app.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-201", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("d4d3aff7-5b42-45cc-b594-7fd8cdba576c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("app", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-1105", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("0521f7c9-3666-467b-b5c8-2ff7f85ba7af", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("c9e7449f-9050-4f49-b2ef-89c8019aa4a7", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServicePlanVisibilityUpdateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8ace36fe-32e2-40c9-bc69-09aeaf84d553"",
        ""url"": ""/v2/events/8ace36fe-32e2-40c9-bc69-09aeaf84d553"",
        ""created_at"": ""2015-07-29T12:47:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_plan_visibility.update"",
        ""actor"": ""uaa-id-205"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""0b50fafa-da03-4ca7-9310-058be0ab50d8"",
        ""actee_type"": ""service_plan_visibility"",
        ""actee_name"": """",
        ""timestamp"": ""2015-07-29T12:47:22Z"",
        ""metadata"": {
          ""request"": {
            ""service_plan_guid"": ""07ed7555-66f1-44f0-944a-ab47e3cb4779"",
            ""organization_guid"": ""a8d4bbff-0e24-47c4-bc0f-d12bff73164f""
          }
        },
        ""space_guid"": """",
        ""organization_guid"": ""a8d4bbff-0e24-47c4-bc0f-d12bff73164f""
      }
    }
  ]
}";

            PagedResponseCollection<ListServicePlanVisibilityUpdateEventsResponse> page = Utilities.DeserializePage<ListServicePlanVisibilityUpdateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8ace36fe-32e2-40c9-bc69-09aeaf84d553", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/8ace36fe-32e2-40c9-bc69-09aeaf84d553", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_plan_visibility.update", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-205", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("0b50fafa-da03-4ca7-9310-058be0ab50d8", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_plan_visibility", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:22Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("a8d4bbff-0e24-47c4-bc0f-d12bff73164f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListSpaceCreateEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0de588f9-51a5-4bec-9aaa-0851b30d3360"",
        ""url"": ""/v2/events/0de588f9-51a5-4bec-9aaa-0851b30d3360"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.space.create"",
        ""actor"": ""uaa-id-177"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""7595deed-8001-4427-a715-0725f71f4e95"",
        ""actee_type"": ""space"",
        ""actee_name"": ""name-772"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {
            ""name"": ""outer space""
          }
        },
        ""space_guid"": ""7595deed-8001-4427-a715-0725f71f4e95"",
        ""organization_guid"": ""d2774e37-8953-49cf-8705-2fa0c480d279""
      }
    }
  ]
}";

            PagedResponseCollection<ListSpaceCreateEventsResponse> page = Utilities.DeserializePage<ListSpaceCreateEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0de588f9-51a5-4bec-9aaa-0851b30d3360", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/0de588f9-51a5-4bec-9aaa-0851b30d3360", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.space.create", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-177", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("7595deed-8001-4427-a715-0725f71f4e95", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("space", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("name-772", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("7595deed-8001-4427-a715-0725f71f4e95", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("d2774e37-8953-49cf-8705-2fa0c480d279", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a229d1da-449b-43d8-8674-ab7645b0d4c6"",
        ""url"": ""/v2/events/a229d1da-449b-43d8-8674-ab7645b0d4c6"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service.delete"",
        ""actor"": ""fe3b7836-8919-4119-b719-c374119ba6a8"",
        ""actor_type"": ""service_broker"",
        ""actor_name"": ""name-961"",
        ""actee"": ""f97025d6-91ad-403a-8294-73d47def2063"",
        ""actee_type"": ""service"",
        ""actee_name"": ""label-35"",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {

        },
        ""space_guid"": """",
        ""organization_guid"": """"
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a229d1da-449b-43d8-8674-ab7645b0d4c6", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/a229d1da-449b-43d8-8674-ab7645b0d4c6", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("fe3b7836-8919-4119-b719-c374119ba6a8", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("service_broker", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("name-961", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("f97025d6-91ad-403a-8294-73d47def2063", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("label-35", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }

        [TestMethod]
        public void TestListServiceBindingDeleteEventsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""19071ce5-47dd-4728-925e-79926b9b2c2e"",
        ""url"": ""/v2/events/19071ce5-47dd-4728-925e-79926b9b2c2e"",
        ""created_at"": ""2015-07-29T12:47:21Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""type"": ""audit.service_binding.delete"",
        ""actor"": ""uaa-id-193"",
        ""actor_type"": ""user"",
        ""actor_name"": ""user@example.com"",
        ""actee"": ""ef940b98-c8e7-4b07-bae9-2c16c7eecc5c"",
        ""actee_type"": ""service_binding"",
        ""actee_name"": """",
        ""timestamp"": ""2015-07-29T12:47:21Z"",
        ""metadata"": {
          ""request"": {

          }
        },
        ""space_guid"": ""7ff49c97-f718-408c-8d05-9051ad73b7c5"",
        ""organization_guid"": ""7de081c0-5d13-4be7-aef1-71c0920d3613""
      }
    }
  ]
}";

            PagedResponseCollection<ListServiceBindingDeleteEventsResponse> page = Utilities.DeserializePage<ListServiceBindingDeleteEventsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("19071ce5-47dd-4728-925e-79926b9b2c2e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/events/19071ce5-47dd-4728-925e-79926b9b2c2e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("audit.service_binding.delete", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("uaa-id-193", TestUtil.ToTestableString(page[0].Actor), true);
            Assert.AreEqual("user", TestUtil.ToTestableString(page[0].ActorType), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].ActorName), true);
            Assert.AreEqual("ef940b98-c8e7-4b07-bae9-2c16c7eecc5c", TestUtil.ToTestableString(page[0].Actee), true);
            Assert.AreEqual("service_binding", TestUtil.ToTestableString(page[0].ActeeType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ActeeName), true);
            Assert.AreEqual("2015-07-29T12:47:21Z", TestUtil.ToTestableString(page[0].Timestamp), true);
            Assert.AreEqual("7ff49c97-f718-408c-8d05-9051ad73b7c5", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("7de081c0-5d13-4be7-aef1-71c0920d3613", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
        }
    }
}
