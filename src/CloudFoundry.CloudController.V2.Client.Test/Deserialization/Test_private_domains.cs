//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class PrivateDomainsTest
    {


        [TestMethod]
        public void TestFilterPrivateDomainsByNameResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a9a7a383-0f0a-4fc4-b15e-94e8482fa3a0"",
        ""url"": ""/v2/private_domains/c350ca23-4e0b-4459-9e25-2c1412a1a6e7"",
        ""created_at"": ""2017-01-04T15:59:07Z"",
        ""updated_at"": ""2017-01-04T15:59:07Z""
      },
      ""entity"": {
        ""name"": ""my-domain.com"",
        ""owning_organization_guid"": ""a9a7a383-0f0a-4fc4-b15e-94e8482fa3a0"",
        ""owning_organization_url"": ""/v2/organizations/0b636235-60c8-4961-885f-b65569249c4c"",
        ""shared_organizations_url"": ""/v2/private_domains/c350ca23-4e0b-4459-9e25-2c1412a1a6e7/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<FilterPrivateDomainsByNameResponse> page = Utilities.DeserializePage<FilterPrivateDomainsByNameResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a9a7a383-0f0a-4fc4-b15e-94e8482fa3a0", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/c350ca23-4e0b-4459-9e25-2c1412a1a6e7", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-domain.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a9a7a383-0f0a-4fc4-b15e-94e8482fa3a0", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/0b636235-60c8-4961-885f-b65569249c4c", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/c350ca23-4e0b-4459-9e25-2c1412a1a6e7/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestListAllSharedOrganizationsForPrivateDomainResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b15d27cf-0bce-4428-9029-6a8d8ea43f62"",
        ""url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584"",
        ""created_at"": ""2017-01-04T15:59:06Z"",
        ""updated_at"": ""2017-01-04T15:59:06Z""
      },
      ""entity"": {
        ""name"": ""name-2418"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""b15d27cf-0bce-4428-9029-6a8d8ea43f62"",
        ""status"": ""active"",
        ""default_isolation_segment_guid"": null,
        ""quota_definition_url"": ""/v2/quota_definitions/5be0360b-5b9f-432e-860f-04711aeb60f3"",
        ""spaces_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/spaces"",
        ""domains_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/domains"",
        ""private_domains_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/private_domains"",
        ""users_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/users"",
        ""managers_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/managers"",
        ""billing_managers_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/billing_managers"",
        ""auditors_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/auditors"",
        ""app_events_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSharedOrganizationsForPrivateDomainResponse> page = Utilities.DeserializePage<ListAllSharedOrganizationsForPrivateDomainResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b15d27cf-0bce-4428-9029-6a8d8ea43f62", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:06Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:06Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2418", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("b15d27cf-0bce-4428-9029-6a8d8ea43f62", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultIsolationSegmentGuid), true);
            Assert.AreEqual("/v2/quota_definitions/5be0360b-5b9f-432e-860f-04711aeb60f3", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ce53013d-b07a-46c7-9c9b-427a0298b584/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestCreatePrivateDomainOwnedByGivenOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9b644b8e-4d14-4e96-a8f0-f97496f6790e"",
    ""url"": ""/v2/private_domains/96b4d21f-9824-41a6-891e-30f90c5a46b6"",
    ""created_at"": ""2017-01-04T15:59:06Z"",
    ""updated_at"": ""2017-01-04T15:59:06Z""
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""9b644b8e-4d14-4e96-a8f0-f97496f6790e"",
    ""owning_organization_url"": ""/v2/organizations/6d7847d6-b657-4f55-8c16-28cdacf8a0fe"",
    ""shared_organizations_url"": ""/v2/private_domains/96b4d21f-9824-41a6-891e-30f90c5a46b6/shared_organizations""
  }
}";

            CreatePrivateDomainOwnedByGivenOrganizationResponse obj = Utilities.DeserializeJson<CreatePrivateDomainOwnedByGivenOrganizationResponse>(json);

            Assert.AreEqual("9b644b8e-4d14-4e96-a8f0-f97496f6790e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/96b4d21f-9824-41a6-891e-30f90c5a46b6", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:06Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:06Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("9b644b8e-4d14-4e96-a8f0-f97496f6790e", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/6d7847d6-b657-4f55-8c16-28cdacf8a0fe", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/96b4d21f-9824-41a6-891e-30f90c5a46b6/shared_organizations", TestUtil.ToTestableString(obj.SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestRetrievePrivateDomainResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ce6b23d7-3921-4be9-b856-675bf1473460"",
    ""url"": ""/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d"",
    ""created_at"": ""2017-01-04T15:59:00Z"",
    ""updated_at"": ""2017-01-04T15:59:00Z""
  },
  ""entity"": {
    ""name"": ""vcap.me"",
    ""owning_organization_guid"": ""ce6b23d7-3921-4be9-b856-675bf1473460"",
    ""owning_organization_url"": ""/v2/organizations/4b3cc75f-f4a4-4b7b-9258-3b9b8400d5f5"",
    ""shared_organizations_url"": ""/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d/shared_organizations""
  }
}";

            RetrievePrivateDomainResponse obj = Utilities.DeserializeJson<RetrievePrivateDomainResponse>(json);

            Assert.AreEqual("ce6b23d7-3921-4be9-b856-675bf1473460", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:00Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:00Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("ce6b23d7-3921-4be9-b856-675bf1473460", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/4b3cc75f-f4a4-4b7b-9258-3b9b8400d5f5", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d/shared_organizations", TestUtil.ToTestableString(obj.SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""url"": ""/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d"",
        ""created_at"": ""2017-01-04T15:59:00Z"",
        ""updated_at"": ""2017-01-04T15:59:00Z""
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""owning_organization_url"": ""/v2/organizations/4b3cc75f-f4a4-4b7b-9258-3b9b8400d5f5"",
        ""shared_organizations_url"": ""/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d/shared_organizations""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""url"": ""/v2/private_domains/f405e9e6-d2da-46f6-92e3-c1507b765f12"",
        ""created_at"": ""2017-01-04T15:59:07Z"",
        ""updated_at"": ""2017-01-04T15:59:07Z""
      },
      ""entity"": {
        ""name"": ""domain-79.example.com"",
        ""owning_organization_guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""owning_organization_url"": ""/v2/organizations/630a00c4-636b-497c-9d33-d0f6d0639c76"",
        ""shared_organizations_url"": ""/v2/private_domains/f405e9e6-d2da-46f6-92e3-c1507b765f12/shared_organizations""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""url"": ""/v2/private_domains/387ad3a1-3d8a-4313-b1d8-dc304df6a1a6"",
        ""created_at"": ""2017-01-04T15:59:07Z"",
        ""updated_at"": ""2017-01-04T15:59:07Z""
      },
      ""entity"": {
        ""name"": ""domain-80.example.com"",
        ""owning_organization_guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""owning_organization_url"": ""/v2/organizations/86356880-d4fc-4e46-9b75-3517b89f1628"",
        ""shared_organizations_url"": ""/v2/private_domains/387ad3a1-3d8a-4313-b1d8-dc304df6a1a6/shared_organizations""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""url"": ""/v2/private_domains/3d5cec56-ef93-4f7d-9325-09ae626e0893"",
        ""created_at"": ""2017-01-04T15:59:07Z"",
        ""updated_at"": ""2017-01-04T15:59:07Z""
      },
      ""entity"": {
        ""name"": ""domain-81.example.com"",
        ""owning_organization_guid"": ""84b363ea-8655-4e13-81d7-10d35d1aec7a"",
        ""owning_organization_url"": ""/v2/organizations/eaec7399-f0ed-4724-bd40-e890e4e3111c"",
        ""shared_organizations_url"": ""/v2/private_domains/3d5cec56-ef93-4f7d-9325-09ae626e0893/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsResponse>(json, null);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:00Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:00Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/4b3cc75f-f4a4-4b7b-9258-3b9b8400d5f5", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/bcc5d7b1-3659-4458-a150-f9804500ee1d/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/f405e9e6-d2da-46f6-92e3-c1507b765f12", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-79.example.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[1].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/630a00c4-636b-497c-9d33-d0f6d0639c76", TestUtil.ToTestableString(page[1].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/f405e9e6-d2da-46f6-92e3-c1507b765f12/shared_organizations", TestUtil.ToTestableString(page[1].SharedOrganizationsUrl), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/387ad3a1-3d8a-4313-b1d8-dc304df6a1a6", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-80.example.com", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/86356880-d4fc-4e46-9b75-3517b89f1628", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/387ad3a1-3d8a-4313-b1d8-dc304df6a1a6/shared_organizations", TestUtil.ToTestableString(page[2].SharedOrganizationsUrl), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/3d5cec56-ef93-4f7d-9325-09ae626e0893", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2017-01-04T15:59:07Z", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-81.example.com", TestUtil.ToTestableString(page[3].Name), true);
            Assert.AreEqual("84b363ea-8655-4e13-81d7-10d35d1aec7a", TestUtil.ToTestableString(page[3].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/eaec7399-f0ed-4724-bd40-e890e4e3111c", TestUtil.ToTestableString(page[3].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/3d5cec56-ef93-4f7d-9325-09ae626e0893/shared_organizations", TestUtil.ToTestableString(page[3].SharedOrganizationsUrl), true);
        }
    }
}
