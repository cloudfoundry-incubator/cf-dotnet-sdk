//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class UserProvidedServiceInstancesTest
    {


        [TestMethod]
        public void TestRetrieveUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""693f73c7-5ed3-4f4a-be7e-8f2bd98f9572"",
    ""url"": ""/v2/user_provided_service_instances/83eb6c79-93d2-477a-a4d6-80230cca2cd1"",
    ""created_at"": ""2016-05-05T14:14:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-20"",
    ""credentials"": {
      ""creds-key-5"": ""creds-val-5""
    },
    ""space_guid"": ""693f73c7-5ed3-4f4a-be7e-8f2bd98f9572"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-5"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/05e85fd6-56c7-43ce-abb6-5148ec9bb320"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/83eb6c79-93d2-477a-a4d6-80230cca2cd1/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/83eb6c79-93d2-477a-a4d6-80230cca2cd1/routes""
  }
}";

            RetrieveUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<RetrieveUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("693f73c7-5ed3-4f4a-be7e-8f2bd98f9572", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/83eb6c79-93d2-477a-a4d6-80230cca2cd1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-20", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("693f73c7-5ed3-4f4a-be7e-8f2bd98f9572", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-5", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/05e85fd6-56c7-43ce-abb6-5148ec9bb320", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/83eb6c79-93d2-477a-a4d6-80230cca2cd1/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/83eb6c79-93d2-477a-a4d6-80230cca2cd1/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllRoutesForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""77864d91-b7d3-40a7-93a1-8b5dc0b1fe61"",
        ""url"": ""/v2/routes/61310d6d-cc79-4c74-8b16-09c03a7ab2bb"",
        ""created_at"": ""2016-05-05T14:14:48Z"",
        ""updated_at"": ""2016-05-05T14:14:48Z""
      },
      ""entity"": {
        ""host"": ""host-1"",
        ""path"": """",
        ""domain_guid"": ""77864d91-b7d3-40a7-93a1-8b5dc0b1fe61"",
        ""space_guid"": ""77864d91-b7d3-40a7-93a1-8b5dc0b1fe61"",
        ""service_instance_guid"": ""77864d91-b7d3-40a7-93a1-8b5dc0b1fe61"",
        ""port"": null,
        ""domain_url"": ""/v2/domains/a322a469-3a39-48e4-9b8e-e2fcecc69858"",
        ""space_url"": ""/v2/spaces/cc9b698d-31b0-4c1a-8f04-24f1cfc187f5"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/37cbfb1f-da65-4888-beaa-97b0ff43bbf9"",
        ""apps_url"": ""/v2/routes/61310d6d-cc79-4c74-8b16-09c03a7ab2bb/apps"",
        ""route_mappings_url"": ""/v2/routes/61310d6d-cc79-4c74-8b16-09c03a7ab2bb/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllRoutesForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("77864d91-b7d3-40a7-93a1-8b5dc0b1fe61", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/61310d6d-cc79-4c74-8b16-09c03a7ab2bb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:14:48Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-1", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("77864d91-b7d3-40a7-93a1-8b5dc0b1fe61", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("77864d91-b7d3-40a7-93a1-8b5dc0b1fe61", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("77864d91-b7d3-40a7-93a1-8b5dc0b1fe61", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/a322a469-3a39-48e4-9b8e-e2fcecc69858", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/cc9b698d-31b0-4c1a-8f04-24f1cfc187f5", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/37cbfb1f-da65-4888-beaa-97b0ff43bbf9", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
            Assert.AreEqual("/v2/routes/61310d6d-cc79-4c74-8b16-09c03a7ab2bb/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/routes/61310d6d-cc79-4c74-8b16-09c03a7ab2bb/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestUpdateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""61d6ef8b-7d09-43e1-9207-204c20760510"",
    ""url"": ""/v2/user_provided_service_instances/bc632b77-f040-4f84-abef-195a919d4e12"",
    ""created_at"": ""2016-05-05T14:14:47Z"",
    ""updated_at"": ""2016-05-05T14:14:47Z""
  },
  ""entity"": {
    ""name"": ""name-16"",
    ""credentials"": {
      ""somekey"": ""somenewvalue""
    },
    ""space_guid"": ""61d6ef8b-7d09-43e1-9207-204c20760510"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-4"",
    ""route_service_url"": null,
    ""space_url"": ""/v2/spaces/8cc700b7-e8b4-4e26-9aaf-74827114cdda"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/bc632b77-f040-4f84-abef-195a919d4e12/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/bc632b77-f040-4f84-abef-195a919d4e12/routes""
  }
}";

            UpdateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<UpdateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("61d6ef8b-7d09-43e1-9207-204c20760510", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bc632b77-f040-4f84-abef-195a919d4e12", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-16", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("61d6ef8b-7d09-43e1-9207-204c20760510", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-4", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/8cc700b7-e8b4-4e26-9aaf-74827114cdda", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bc632b77-f040-4f84-abef-195a919d4e12/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/bc632b77-f040-4f84-abef-195a919d4e12/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllUserProvidedServiceInstancesResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""505f8935-14b4-4baf-8c2b-a58816f00c81"",
        ""url"": ""/v2/user_provided_service_instances/2514946a-2440-4006-893c-46bf15c4e569"",
        ""created_at"": ""2016-05-05T14:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-12"",
        ""credentials"": {
          ""creds-key-3"": ""creds-val-3""
        },
        ""space_guid"": ""505f8935-14b4-4baf-8c2b-a58816f00c81"",
        ""type"": ""user_provided_service_instance"",
        ""syslog_drain_url"": ""https://foo.com/url-3"",
        ""route_service_url"": null,
        ""space_url"": ""/v2/spaces/c4d5f5a0-d913-4600-ba6d-f17298215f27"",
        ""service_bindings_url"": ""/v2/user_provided_service_instances/2514946a-2440-4006-893c-46bf15c4e569/service_bindings"",
        ""routes_url"": ""/v2/user_provided_service_instances/2514946a-2440-4006-893c-46bf15c4e569/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUserProvidedServiceInstancesResponse> page = Utilities.DeserializePage<ListAllUserProvidedServiceInstancesResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("505f8935-14b4-4baf-8c2b-a58816f00c81", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/2514946a-2440-4006-893c-46bf15c4e569", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-12", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("505f8935-14b4-4baf-8c2b-a58816f00c81", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("https://foo.com/url-3", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/c4d5f5a0-d913-4600-ba6d-f17298215f27", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/2514946a-2440-4006-893c-46bf15c4e569/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/2514946a-2440-4006-893c-46bf15c4e569/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""971deee6-b89b-43b4-9859-f172e0d1c79a"",
    ""url"": ""/v2/user_provided_service_instances/63e6357b-0f9d-4353-8d9f-ca376a90f618"",
    ""created_at"": ""2016-05-05T14:14:48Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-38"",
    ""credentials"": {
      ""creds-key-10"": ""creds-val-10""
    },
    ""space_guid"": ""971deee6-b89b-43b4-9859-f172e0d1c79a"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""https://foo.com/url-14"",
    ""route_service_url"": ""https://foo.com/url-13"",
    ""space_url"": ""/v2/spaces/b7159570-e629-44a1-beb2-f32a47c32003"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/63e6357b-0f9d-4353-8d9f-ca376a90f618/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/63e6357b-0f9d-4353-8d9f-ca376a90f618/routes""
  }
}";

            AssociateRouteWithUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<AssociateRouteWithUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("971deee6-b89b-43b4-9859-f172e0d1c79a", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/63e6357b-0f9d-4353-8d9f-ca376a90f618", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:48Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-38", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("971deee6-b89b-43b4-9859-f172e0d1c79a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("https://foo.com/url-14", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://foo.com/url-13", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/b7159570-e629-44a1-beb2-f32a47c32003", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/63e6357b-0f9d-4353-8d9f-ca376a90f618/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/63e6357b-0f9d-4353-8d9f-ca376a90f618/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""81967024-c0b7-4355-bc9a-4b7a11899f0c"",
        ""url"": ""/v2/service_bindings/dddf66c1-af96-4e78-856b-99a10e31978e"",
        ""created_at"": ""2016-05-05T14:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""81967024-c0b7-4355-bc9a-4b7a11899f0c"",
        ""service_instance_guid"": ""81967024-c0b7-4355-bc9a-4b7a11899f0c"",
        ""credentials"": {
          ""creds-key-7"": ""creds-val-7""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/64151e1d-3eb4-41af-b3e6-8f0ef8d79ec9"",
        ""service_instance_url"": ""/v2/user_provided_service_instances/3581a09b-e641-4f06-97be-f117c3eadda1""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForUserProvidedServiceInstanceResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForUserProvidedServiceInstanceResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("81967024-c0b7-4355-bc9a-4b7a11899f0c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/dddf66c1-af96-4e78-856b-99a10e31978e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("81967024-c0b7-4355-bc9a-4b7a11899f0c", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("81967024-c0b7-4355-bc9a-4b7a11899f0c", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/64151e1d-3eb4-41af-b3e6-8f0ef8d79ec9", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/3581a09b-e641-4f06-97be-f117c3eadda1", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestCreateUserProvidedServiceInstanceResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""a362e5d6-e7e8-46a8-9858-faf8eead9c4d"",
    ""url"": ""/v2/user_provided_service_instances/178db0ec-3db8-4435-a4fa-925f13151ba4"",
    ""created_at"": ""2016-05-05T14:14:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-user-provided-instance"",
    ""credentials"": {
      ""somekey"": ""somevalue""
    },
    ""space_guid"": ""a362e5d6-e7e8-46a8-9858-faf8eead9c4d"",
    ""type"": ""user_provided_service_instance"",
    ""syslog_drain_url"": ""syslog://example.com"",
    ""route_service_url"": ""https://logger.example.com"",
    ""space_url"": ""/v2/spaces/8d502cc5-97b3-47ea-b474-5940514e985c"",
    ""service_bindings_url"": ""/v2/user_provided_service_instances/178db0ec-3db8-4435-a4fa-925f13151ba4/service_bindings"",
    ""routes_url"": ""/v2/user_provided_service_instances/178db0ec-3db8-4435-a4fa-925f13151ba4/routes""
  }
}";

            CreateUserProvidedServiceInstanceResponse obj = Utilities.DeserializeJson<CreateUserProvidedServiceInstanceResponse>(json);

            Assert.AreEqual("a362e5d6-e7e8-46a8-9858-faf8eead9c4d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/user_provided_service_instances/178db0ec-3db8-4435-a4fa-925f13151ba4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-user-provided-instance", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("a362e5d6-e7e8-46a8-9858-faf8eead9c4d", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("user_provided_service_instance", TestUtil.ToTestableString(obj.Type), true);
            Assert.AreEqual("syslog://example.com", TestUtil.ToTestableString(obj.SyslogDrainUrl), true);
            Assert.AreEqual("https://logger.example.com", TestUtil.ToTestableString(obj.RouteServiceUrl), true);
            Assert.AreEqual("/v2/spaces/8d502cc5-97b3-47ea-b474-5940514e985c", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/178db0ec-3db8-4435-a4fa-925f13151ba4/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/user_provided_service_instances/178db0ec-3db8-4435-a4fa-925f13151ba4/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
