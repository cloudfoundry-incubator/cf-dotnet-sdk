//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class BuildpacksTest
    {


        [TestMethod]
        public void TestCreatesAdminBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f1c06876-7ccc-49b1-aca9-b288466c456c"",
    ""url"": ""/v2/buildpacks/f1c06876-7ccc-49b1-aca9-b288466c456c"",
    ""created_at"": ""2016-02-05T12:14:40Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""Golang_buildpack"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": null
  }
}";

            CreatesAdminBuildpackResponse obj = Utilities.DeserializeJson<CreatesAdminBuildpackResponse>(json);

            Assert.AreEqual("f1c06876-7ccc-49b1-aca9-b288466c456c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/f1c06876-7ccc-49b1-aca9-b288466c456c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Golang_buildpack", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestChangePositionOfBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8359e462-6b95-4f5d-9676-b24e5a9a25c8"",
    ""url"": ""/v2/buildpacks/8359e462-6b95-4f5d-9676-b24e5a9a25c8"",
    ""created_at"": ""2016-02-05T12:14:40Z"",
    ""updated_at"": ""2016-02-05T12:14:40Z""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 3,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": ""name-375""
  }
}";

            ChangePositionOfBuildpackResponse obj = Utilities.DeserializeJson<ChangePositionOfBuildpackResponse>(json);

            Assert.AreEqual("8359e462-6b95-4f5d-9676-b24e5a9a25c8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/8359e462-6b95-4f5d-9676-b24e5a9a25c8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("3", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-375", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestRetrieveBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""cf7295f7-60e1-4840-9dbd-dc229f3f4b31"",
    ""url"": ""/v2/buildpacks/cf7295f7-60e1-4840-9dbd-dc229f3f4b31"",
    ""created_at"": ""2016-02-05T12:14:40Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": false,
    ""filename"": ""name-387""
  }
}";

            RetrieveBuildpackResponse obj = Utilities.DeserializeJson<RetrieveBuildpackResponse>(json);

            Assert.AreEqual("cf7295f7-60e1-4840-9dbd-dc229f3f4b31", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/cf7295f7-60e1-4840-9dbd-dc229f3f4b31", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-387", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestListAllBuildpacksResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4713d0ed-568d-4a13-8409-369fa47a224c"",
        ""url"": ""/v2/buildpacks/4713d0ed-568d-4a13-8409-369fa47a224c"",
        ""created_at"": ""2016-02-05T12:14:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_1"",
        ""position"": 1,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-384""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""208797dc-4e45-4210-af4e-96a2898e5a7f"",
        ""url"": ""/v2/buildpacks/208797dc-4e45-4210-af4e-96a2898e5a7f"",
        ""created_at"": ""2016-02-05T12:14:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_2"",
        ""position"": 2,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-385""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""9540ec8c-0dc3-4aa8-884e-6eab3120d3e6"",
        ""url"": ""/v2/buildpacks/9540ec8c-0dc3-4aa8-884e-6eab3120d3e6"",
        ""created_at"": ""2016-02-05T12:14:40Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name_3"",
        ""position"": 3,
        ""enabled"": true,
        ""locked"": false,
        ""filename"": ""name-386""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBuildpacksResponse> page = Utilities.DeserializePage<ListAllBuildpacksResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4713d0ed-568d-4a13-8409-369fa47a224c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/4713d0ed-568d-4a13-8409-369fa47a224c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Locked), true);
            Assert.AreEqual("name-384", TestUtil.ToTestableString(page[0].Filename), true);
            Assert.AreEqual("208797dc-4e45-4210-af4e-96a2898e5a7f", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/208797dc-4e45-4210-af4e-96a2898e5a7f", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_2", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page[1].Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Locked), true);
            Assert.AreEqual("name-385", TestUtil.ToTestableString(page[1].Filename), true);
            Assert.AreEqual("9540ec8c-0dc3-4aa8-884e-6eab3120d3e6", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/9540ec8c-0dc3-4aa8-884e-6eab3120d3e6", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_3", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("3", TestUtil.ToTestableString(page[2].Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[2].Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Locked), true);
            Assert.AreEqual("name-386", TestUtil.ToTestableString(page[2].Filename), true);
        }

        [TestMethod]
        public void TestLockOrUnlockBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e072da89-124a-4ed9-a2db-ad1e595dfc23"",
    ""url"": ""/v2/buildpacks/e072da89-124a-4ed9-a2db-ad1e595dfc23"",
    ""created_at"": ""2016-02-05T12:14:40Z"",
    ""updated_at"": ""2016-02-05T12:14:40Z""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": true,
    ""locked"": true,
    ""filename"": ""name-372""
  }
}";

            LockOrUnlockBuildpackResponse obj = Utilities.DeserializeJson<LockOrUnlockBuildpackResponse>(json);

            Assert.AreEqual("e072da89-124a-4ed9-a2db-ad1e595dfc23", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/e072da89-124a-4ed9-a2db-ad1e595dfc23", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-372", TestUtil.ToTestableString(obj.Filename), true);
        }

        [TestMethod]
        public void TestEnableOrDisableBuildpackResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""209a5ae2-2b1f-442a-9795-952a6964122c"",
    ""url"": ""/v2/buildpacks/209a5ae2-2b1f-442a-9795-952a6964122c"",
    ""created_at"": ""2016-02-05T12:14:40Z"",
    ""updated_at"": ""2016-02-05T12:14:40Z""
  },
  ""entity"": {
    ""name"": ""name_1"",
    ""position"": 1,
    ""enabled"": false,
    ""locked"": false,
    ""filename"": ""name-378""
  }
}";

            EnableOrDisableBuildpackResponse obj = Utilities.DeserializeJson<EnableOrDisableBuildpackResponse>(json);

            Assert.AreEqual("209a5ae2-2b1f-442a-9795-952a6964122c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/buildpacks/209a5ae2-2b1f-442a-9795-952a6964122c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:40Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name_1", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Position), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Enabled), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Locked), true);
            Assert.AreEqual("name-378", TestUtil.ToTestableString(obj.Filename), true);
        }
    }
}
