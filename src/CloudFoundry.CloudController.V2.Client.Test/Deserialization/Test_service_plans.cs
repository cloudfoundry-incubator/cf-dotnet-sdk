//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServicePlansTest
    {


        [TestMethod]
        public void TestUpdateServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""df2be137-7e7c-4002-bb54-4c8b947aa16c"",
    ""url"": ""/v2/service_plans/7f2a362c-d152-44c0-8946-29f01ee7ff91"",
    ""created_at"": ""2016-05-05T14:14:50Z"",
    ""updated_at"": ""2016-05-05T14:14:50Z""
  },
  ""entity"": {
    ""name"": ""name-108"",
    ""free"": false,
    ""description"": ""desc-21"",
    ""service_guid"": ""df2be137-7e7c-4002-bb54-4c8b947aa16c"",
    ""extra"": null,
    ""unique_id"": ""f9ca0c4e-42e1-43b6-88c2-068863223978"",
    ""public"": false,
    ""active"": true,
    ""service_url"": ""/v2/services/d064b76d-e9ce-4976-bf49-e5472d75a798"",
    ""service_instances_url"": ""/v2/service_plans/7f2a362c-d152-44c0-8946-29f01ee7ff91/service_instances""
  }
}";

            UpdateServicePlanResponse obj = Utilities.DeserializeJson<UpdateServicePlanResponse>(json);

            Assert.AreEqual("df2be137-7e7c-4002-bb54-4c8b947aa16c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/7f2a362c-d152-44c0-8946-29f01ee7ff91", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-108", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-21", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("df2be137-7e7c-4002-bb54-4c8b947aa16c", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("f9ca0c4e-42e1-43b6-88c2-068863223978", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/d064b76d-e9ce-4976-bf49-e5472d75a798", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/7f2a362c-d152-44c0-8946-29f01ee7ff91/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveServicePlanResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""978ed31a-6364-4267-bff7-af6ebabc9ccd"",
    ""url"": ""/v2/service_plans/910efac2-b19f-4b69-a726-08d85bb94855"",
    ""created_at"": ""2016-05-05T14:14:50Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-114"",
    ""free"": false,
    ""description"": ""desc-27"",
    ""service_guid"": ""978ed31a-6364-4267-bff7-af6ebabc9ccd"",
    ""extra"": null,
    ""unique_id"": ""239a131d-7646-4373-914a-736eea5c7ab3"",
    ""public"": true,
    ""active"": true,
    ""service_url"": ""/v2/services/a62ed41d-5ab6-4549-95df-3bbde1b1a051"",
    ""service_instances_url"": ""/v2/service_plans/910efac2-b19f-4b69-a726-08d85bb94855/service_instances""
  }
}";

            RetrieveServicePlanResponse obj = Utilities.DeserializeJson<RetrieveServicePlanResponse>(json);

            Assert.AreEqual("978ed31a-6364-4267-bff7-af6ebabc9ccd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/910efac2-b19f-4b69-a726-08d85bb94855", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-114", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Free), true);
            Assert.AreEqual("desc-27", TestUtil.ToTestableString(obj.Description), true);
            Assert.AreEqual("978ed31a-6364-4267-bff7-af6ebabc9ccd", TestUtil.ToTestableString(obj.ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Extra), true);
            Assert.AreEqual("239a131d-7646-4373-914a-736eea5c7ab3", TestUtil.ToTestableString(obj.UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Active), true);
            Assert.AreEqual("/v2/services/a62ed41d-5ab6-4549-95df-3bbde1b1a051", TestUtil.ToTestableString(obj.ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/910efac2-b19f-4b69-a726-08d85bb94855/service_instances", TestUtil.ToTestableString(obj.ServiceInstancesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceInstancesForServicePlanResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e3f519ac-5f18-4e12-883e-8a414599b535"",
        ""url"": ""/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289"",
        ""created_at"": ""2016-05-05T14:14:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-104"",
        ""credentials"": {
          ""creds-key-22"": ""creds-val-22""
        },
        ""service_plan_guid"": ""e3f519ac-5f18-4e12-883e-8a414599b535"",
        ""space_guid"": ""e3f519ac-5f18-4e12-883e-8a414599b535"",
        ""gateway_data"": null,
        ""dashboard_url"": null,
        ""type"": ""managed_service_instance"",
        ""last_operation"": null,
        ""tags"": [

        ],
        ""space_url"": ""/v2/spaces/5d047227-8cb6-4f97-a4d5-9719b7c4eca0"",
        ""service_plan_url"": ""/v2/service_plans/aee47409-1561-48db-9394-a40cda3ac023"",
        ""service_bindings_url"": ""/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289/service_bindings"",
        ""service_keys_url"": ""/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289/service_keys"",
        ""routes_url"": ""/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceInstancesForServicePlanResponse> page = Utilities.DeserializePage<ListAllServiceInstancesForServicePlanResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e3f519ac-5f18-4e12-883e-8a414599b535", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-104", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("e3f519ac-5f18-4e12-883e-8a414599b535", TestUtil.ToTestableString(page[0].ServicePlanGuid), true);
            Assert.AreEqual("e3f519ac-5f18-4e12-883e-8a414599b535", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DashboardUrl), true);
            Assert.AreEqual("managed_service_instance", TestUtil.ToTestableString(page[0].Type), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LastOperation), true);
            Assert.AreEqual("/v2/spaces/5d047227-8cb6-4f97-a4d5-9719b7c4eca0", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/service_plans/aee47409-1561-48db-9394-a40cda3ac023", TestUtil.ToTestableString(page[0].ServicePlanUrl), true);
            Assert.AreEqual("/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289/service_keys", TestUtil.ToTestableString(page[0].ServiceKeysUrl), true);
            Assert.AreEqual("/v2/service_instances/d2ff2507-ab41-456c-a886-cdf415b0c289/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicePlansResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""72a55ed0-dda0-4747-b757-0c63d7dc016c"",
        ""url"": ""/v2/service_plans/d344b482-ec95-45f6-8c3d-1c8d96b85e2b"",
        ""created_at"": ""2016-05-05T14:14:50Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-110"",
        ""free"": false,
        ""description"": ""desc-23"",
        ""service_guid"": ""72a55ed0-dda0-4747-b757-0c63d7dc016c"",
        ""extra"": null,
        ""unique_id"": ""19ddc9bc-321b-4165-b8c9-4b11ff242760"",
        ""public"": true,
        ""active"": true,
        ""service_url"": ""/v2/services/c5175885-9e9f-41de-96e5-92f264efe710"",
        ""service_instances_url"": ""/v2/service_plans/d344b482-ec95-45f6-8c3d-1c8d96b85e2b/service_instances""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicePlansResponse> page = Utilities.DeserializePage<ListAllServicePlansResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("72a55ed0-dda0-4747-b757-0c63d7dc016c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_plans/d344b482-ec95-45f6-8c3d-1c8d96b85e2b", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-110", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Free), true);
            Assert.AreEqual("desc-23", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("72a55ed0-dda0-4747-b757-0c63d7dc016c", TestUtil.ToTestableString(page[0].ServiceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("19ddc9bc-321b-4165-b8c9-4b11ff242760", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Public), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("/v2/services/c5175885-9e9f-41de-96e5-92f264efe710", TestUtil.ToTestableString(page[0].ServiceUrl), true);
            Assert.AreEqual("/v2/service_plans/d344b482-ec95-45f6-8c3d-1c8d96b85e2b/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
        }
    }
}
