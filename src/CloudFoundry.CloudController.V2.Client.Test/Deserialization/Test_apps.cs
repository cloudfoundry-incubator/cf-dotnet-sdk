//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestRemoveRouteFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3f878c8d-3669-47f8-84b6-b5f4ace26632"",
    ""url"": ""/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632"",
    ""created_at"": ""2015-07-29T12:47:27Z"",
    ""updated_at"": ""2015-07-29T12:47:27Z""
  },
  ""entity"": {
    ""name"": ""name-1980"",
    ""production"": false,
    ""space_guid"": ""b936d950-d70c-4c1e-96e8-79e993c4e424"",
    ""stack_guid"": ""2466862b-76e4-4e52-94d8-edf8761de827"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""b5af5021-f65e-4452-af7a-a4c3973de6af"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-29T12:47:27Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/b936d950-d70c-4c1e-96e8-79e993c4e424"",
    ""stack_url"": ""/v2/stacks/2466862b-76e4-4e52-94d8-edf8761de827"",
    ""events_url"": ""/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632/events"",
    ""service_bindings_url"": ""/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632/service_bindings"",
    ""routes_url"": ""/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632/routes""
  }
}";

            RemoveRouteFromAppResponse obj = Utilities.DeserializeJson<RemoveRouteFromAppResponse>(json);

            Assert.AreEqual("3f878c8d-3669-47f8-84b6-b5f4ace26632", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1980", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("b936d950-d70c-4c1e-96e8-79e993c4e424", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("2466862b-76e4-4e52-94d8-edf8761de827", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("b5af5021-f65e-4452-af7a-a4c3973de6af", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/b936d950-d70c-4c1e-96e8-79e993c4e424", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/2466862b-76e4-4e52-94d8-edf8761de827", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/3f878c8d-3669-47f8-84b6-b5f4ace26632/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6bce546c-a41d-4799-a4d2-48151315ed65"",
    ""url"": ""/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65"",
    ""created_at"": ""2015-07-29T12:47:28Z"",
    ""updated_at"": ""2015-07-29T12:47:28Z""
  },
  ""entity"": {
    ""name"": ""name-1990"",
    ""production"": false,
    ""space_guid"": ""260ee3fa-ff70-4a1c-b3c8-24a7f02db8e7"",
    ""stack_guid"": ""689984b6-d5c8-486a-94f0-3fb306c38937"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""ea7225fb-b73c-47b1-bf5a-31ad44ee998e"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-29T12:47:27Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/260ee3fa-ff70-4a1c-b3c8-24a7f02db8e7"",
    ""stack_url"": ""/v2/stacks/689984b6-d5c8-486a-94f0-3fb306c38937"",
    ""events_url"": ""/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65/events"",
    ""service_bindings_url"": ""/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65/service_bindings"",
    ""routes_url"": ""/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65/routes""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("6bce546c-a41d-4799-a4d2-48151315ed65", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1990", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("260ee3fa-ff70-4a1c-b3c8-24a7f02db8e7", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("689984b6-d5c8-486a-94f0-3fb306c38937", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("ea7225fb-b73c-47b1-bf5a-31ad44ee998e", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/260ee3fa-ff70-4a1c-b3c8-24a7f02db8e7", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/689984b6-d5c8-486a-94f0-3fb306c38937", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/6bce546c-a41d-4799-a4d2-48151315ed65/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRemoveServiceBindingFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""182314dd-c147-4be1-aec4-9c39a951fb29"",
    ""url"": ""/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29"",
    ""created_at"": ""2015-07-29T12:47:28Z"",
    ""updated_at"": ""2015-07-29T12:47:28Z""
  },
  ""entity"": {
    ""name"": ""name-2025"",
    ""production"": false,
    ""space_guid"": ""02031f98-cfe0-4eaf-a81e-f312c3a57230"",
    ""stack_guid"": ""c27d5339-1468-4592-bc71-1eed7911f289"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""ac29fa7f-13e3-4cbd-a0db-b287ddc09b5c"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-29T12:47:28Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/02031f98-cfe0-4eaf-a81e-f312c3a57230"",
    ""stack_url"": ""/v2/stacks/c27d5339-1468-4592-bc71-1eed7911f289"",
    ""events_url"": ""/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29/events"",
    ""service_bindings_url"": ""/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29/service_bindings"",
    ""routes_url"": ""/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29/routes""
  }
}";

            RemoveServiceBindingFromAppResponse obj = Utilities.DeserializeJson<RemoveServiceBindingFromAppResponse>(json);

            Assert.AreEqual("182314dd-c147-4be1-aec4-9c39a951fb29", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2025", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("02031f98-cfe0-4eaf-a81e-f312c3a57230", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("c27d5339-1468-4592-bc71-1eed7911f289", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("ac29fa7f-13e3-4cbd-a0db-b287ddc09b5c", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/02031f98-cfe0-4eaf-a81e-f312c3a57230", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/c27d5339-1468-4592-bc71-1eed7911f289", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/182314dd-c147-4be1-aec4-9c39a951fb29/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""stats"":{""usage"":{""disk"":66392064,""mem"":29880320,""cpu"":0.13511219703079957,""time"":""2014-06-19 22:37:58 +0000""},""name"":""app_name"",""uris"":[""app_name.example.com""],""host"":""10.0.0.1"",""port"":61035,""uptime"":65007,""mem_quota"":536870912,""disk_quota"":1073741824,""fds_quota"":16384}}}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2cde1d73-380f-4b1a-baf2-cfafe3f6e1fd"",
    ""created_at"": ""2015-07-29T12:47:15Z"",
    ""url"": ""/v2/jobs/2cde1d73-380f-4b1a-baf2-cfafe3f6e1fd""
  },
  ""entity"": {
    ""guid"": ""2cde1d73-380f-4b1a-baf2-cfafe3f6e1fd"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("2cde1d73-380f-4b1a-baf2-cfafe3f6e1fd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/2cde1d73-380f-4b1a-baf2-cfafe3f6e1fd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2cde1d73-380f-4b1a-baf2-cfafe3f6e1fd", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""302a3f1c-7d03-4b85-a9f1-a01af17d0c35"",
        ""url"": ""/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35"",
        ""created_at"": ""2015-07-29T12:47:26Z"",
        ""updated_at"": ""2015-07-29T12:47:26Z""
      },
      ""entity"": {
        ""name"": ""name-1824"",
        ""production"": false,
        ""space_guid"": ""ff584ff4-aad9-4a93-b6a6-aa3e57dbaf4e"",
        ""stack_guid"": ""00a55c63-b816-4c02-bf7f-43d2c0cdc0f2"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""142fe539-e94a-438b-aab1-970bfd39f161"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-07-29T12:47:26Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""space_url"": ""/v2/spaces/ff584ff4-aad9-4a93-b6a6-aa3e57dbaf4e"",
        ""stack_url"": ""/v2/stacks/00a55c63-b816-4c02-bf7f-43d2c0cdc0f2"",
        ""events_url"": ""/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35/events"",
        ""service_bindings_url"": ""/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35/service_bindings"",
        ""routes_url"": ""/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""7257b2ae-a18d-4b85-aab0-9a8eb416fc89"",
        ""url"": ""/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89"",
        ""created_at"": ""2015-07-29T12:47:26Z"",
        ""updated_at"": ""2015-07-29T12:47:26Z""
      },
      ""entity"": {
        ""name"": ""name-1829"",
        ""production"": false,
        ""space_guid"": ""b8a6d06a-fc01-45e3-9c13-f5e945c09bba"",
        ""stack_guid"": ""211dc9a9-d276-44bc-9b9c-c1bc40663920"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""b6b07e40-b1ad-4785-9293-25324eae57d9"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-07-29T12:47:26Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""space_url"": ""/v2/spaces/b8a6d06a-fc01-45e3-9c13-f5e945c09bba"",
        ""stack_url"": ""/v2/stacks/211dc9a9-d276-44bc-9b9c-c1bc40663920"",
        ""events_url"": ""/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89/events"",
        ""service_bindings_url"": ""/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89/service_bindings"",
        ""routes_url"": ""/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f448ef1e-5c1f-4372-a9ef-a3e651b80e00"",
        ""url"": ""/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00"",
        ""created_at"": ""2015-07-29T12:47:26Z"",
        ""updated_at"": ""2015-07-29T12:47:26Z""
      },
      ""entity"": {
        ""name"": ""name-1819"",
        ""production"": false,
        ""space_guid"": ""58356ec7-4d31-45e0-9c8c-c15ffb293ba1"",
        ""stack_guid"": ""b7f7829c-40a1-4d11-b0f4-9d590cde8a72"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""7e710186-9fdc-4f4b-a402-9f78609d3748"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2015-07-29T12:47:26Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""space_url"": ""/v2/spaces/58356ec7-4d31-45e0-9c8c-c15ffb293ba1"",
        ""stack_url"": ""/v2/stacks/b7f7829c-40a1-4d11-b0f4-9d590cde8a72"",
        ""events_url"": ""/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00/events"",
        ""service_bindings_url"": ""/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00/service_bindings"",
        ""routes_url"": ""/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("302a3f1c-7d03-4b85-a9f1-a01af17d0c35", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1824", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("ff584ff4-aad9-4a93-b6a6-aa3e57dbaf4e", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("00a55c63-b816-4c02-bf7f-43d2c0cdc0f2", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("142fe539-e94a-438b-aab1-970bfd39f161", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].EnableSsh), true);
            Assert.AreEqual("/v2/spaces/ff584ff4-aad9-4a93-b6a6-aa3e57dbaf4e", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/00a55c63-b816-4c02-bf7f-43d2c0cdc0f2", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/302a3f1c-7d03-4b85-a9f1-a01af17d0c35/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("7257b2ae-a18d-4b85-aab0-9a8eb416fc89", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1829", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("b8a6d06a-fc01-45e3-9c13-f5e945c09bba", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("211dc9a9-d276-44bc-9b9c-c1bc40663920", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("b6b07e40-b1ad-4785-9293-25324eae57d9", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].EnableSsh), true);
            Assert.AreEqual("/v2/spaces/b8a6d06a-fc01-45e3-9c13-f5e945c09bba", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/211dc9a9-d276-44bc-9b9c-c1bc40663920", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/7257b2ae-a18d-4b85-aab0-9a8eb416fc89/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("f448ef1e-5c1f-4372-a9ef-a3e651b80e00", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1819", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("58356ec7-4d31-45e0-9c8c-c15ffb293ba1", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("b7f7829c-40a1-4d11-b0f4-9d590cde8a72", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("7e710186-9fdc-4f4b-a402-9f78609d3748", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[2].EnableSsh), true);
            Assert.AreEqual("/v2/spaces/58356ec7-4d31-45e0-9c8c-c15ffb293ba1", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/b7f7829c-40a1-4d11-b0f4-9d590cde8a72", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/f448ef1e-5c1f-4372-a9ef-a3e651b80e00/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""81a60145-b8ab-4293-894b-4fc8bf1788c9"",
    ""url"": ""/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9"",
    ""created_at"": ""2015-07-29T12:47:27Z"",
    ""updated_at"": ""2015-07-29T12:47:27Z""
  },
  ""entity"": {
    ""name"": ""name-1895"",
    ""production"": false,
    ""space_guid"": ""361ebded-c9c2-4be4-b95e-1089bfd24b35"",
    ""stack_guid"": ""c741f639-dc64-4cf7-89ca-eeac2db2ae48"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""d7b7ba63-6063-40c7-936f-63c8f802f500"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-29T12:47:27Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/361ebded-c9c2-4be4-b95e-1089bfd24b35"",
    ""stack_url"": ""/v2/stacks/c741f639-dc64-4cf7-89ca-eeac2db2ae48"",
    ""events_url"": ""/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9/events"",
    ""service_bindings_url"": ""/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9/service_bindings"",
    ""routes_url"": ""/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9/routes""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("81a60145-b8ab-4293-894b-4fc8bf1788c9", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1895", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("361ebded-c9c2-4be4-b95e-1089bfd24b35", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("c741f639-dc64-4cf7-89ca-eeac2db2ae48", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("d7b7ba63-6063-40c7-936f-63c8f802f500", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/361ebded-c9c2-4be4-b95e-1089bfd24b35", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/c741f639-dc64-4cf7-89ca-eeac2db2ae48", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/81a60145-b8ab-4293-894b-4fc8bf1788c9/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""ba7b0bf3-c95b-43d5-a090-94e4c745aeb4"",
    ""url"": ""/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4"",
    ""created_at"": ""2015-07-29T12:47:27Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""5331b875-20e0-4df1-a413-8e149f8249e2"",
    ""stack_guid"": ""3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""61a458ed-6d42-4362-9e45-5d6ae983eccf"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""enable_ssh"": false,
    ""space_url"": ""/v2/spaces/5331b875-20e0-4df1-a413-8e149f8249e2"",
    ""stack_url"": ""/v2/stacks/3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921"",
    ""events_url"": ""/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4/events"",
    ""service_bindings_url"": ""/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4/service_bindings"",
    ""routes_url"": ""/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4/routes""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("ba7b0bf3-c95b-43d5-a090-94e4c745aeb4", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("5331b875-20e0-4df1-a413-8e149f8249e2", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("61a458ed-6d42-4362-9e45-5d6ae983eccf", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/5331b875-20e0-4df1-a413-8e149f8249e2", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/ba7b0bf3-c95b-43d5-a090-94e4c745aeb4/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""16513e2c-f015-4ed8-b04d-a2a1d352a249"",
    ""url"": ""/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249"",
    ""created_at"": ""2015-07-29T12:47:27Z"",
    ""updated_at"": ""2015-07-29T12:47:27Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""e115fde6-d07b-4f62-842c-666827b9c116"",
    ""stack_guid"": ""8c5de58c-bf7d-4d78-a2a1-a1c32fa103a0"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""92a23172-ebfb-498a-bdfa-5a5dac9a8a8e"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-29T12:47:27Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/e115fde6-d07b-4f62-842c-666827b9c116"",
    ""stack_url"": ""/v2/stacks/8c5de58c-bf7d-4d78-a2a1-a1c32fa103a0"",
    ""events_url"": ""/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249/events"",
    ""service_bindings_url"": ""/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249/service_bindings"",
    ""routes_url"": ""/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249/routes""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("16513e2c-f015-4ed8-b04d-a2a1d352a249", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("e115fde6-d07b-4f62-842c-666827b9c116", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("8c5de58c-bf7d-4d78-a2a1-a1c32fa103a0", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("92a23172-ebfb-498a-bdfa-5a5dac9a8a8e", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:27Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/e115fde6-d07b-4f62-842c-666827b9c116", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/8c5de58c-bf7d-4d78-a2a1-a1c32fa103a0", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/16513e2c-f015-4ed8-b04d-a2a1d352a249/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""since"":1403140717.984577,""debug_ip"":null,""debug_port"":null,""console_ip"":null,""console_port"":null}}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 1024,
        ""fds"": 16384
      },
      ""application_version"": ""51c16498-d14a-4cfa-b9ae-91a47af43b91"",
      ""application_name"": ""name-1950"",
      ""application_uris"": [

      ],
      ""version"": ""51c16498-d14a-4cfa-b9ae-91a47af43b91"",
      ""name"": ""name-1950"",
      ""space_name"": ""name-1951"",
      ""space_id"": ""14a11039-82b0-48d0-93e4-806141d4207b"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d"",
    ""url"": ""/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d"",
    ""created_at"": ""2015-07-29T12:47:26Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""9931c683-03e1-40d4-80a7-36ac84e255b9"",
    ""stack_guid"": ""3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""860d95a2-44ab-4e4c-ba42-465eaf910941"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": true,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2015-07-29T12:47:26Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": false,
    ""space_url"": ""/v2/spaces/9931c683-03e1-40d4-80a7-36ac84e255b9"",
    ""stack_url"": ""/v2/stacks/3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921"",
    ""events_url"": ""/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d/events"",
    ""service_bindings_url"": ""/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d/service_bindings"",
    ""routes_url"": ""/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d/routes""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("9931c683-03e1-40d4-80a7-36ac84e255b9", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("860d95a2-44ab-4e4c-ba42-465eaf910941", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/9931c683-03e1-40d4-80a7-36ac84e255b9", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/3719eeb4-cfa9-4f99-bbeb-e5b1baf9a921", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/e304ae0d-b0a7-4acf-abfd-4546d9bc6c4d/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUploadsBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e4ae06b1-6def-4d23-b54c-027257930854"",
    ""created_at"": ""2015-07-29T12:47:15Z"",
    ""url"": ""/v2/jobs/e4ae06b1-6def-4d23-b54c-027257930854""
  },
  ""entity"": {
    ""guid"": ""e4ae06b1-6def-4d23-b54c-027257930854"",
    ""status"": ""queued""
  }
}";

            UploadsBitsForAppResponse obj = Utilities.DeserializeJson<UploadsBitsForAppResponse>(json);

            Assert.AreEqual("e4ae06b1-6def-4d23-b54c-027257930854", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/e4ae06b1-6def-4d23-b54c-027257930854", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("e4ae06b1-6def-4d23-b54c-027257930854", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""75a58db5-ac06-4e25-9570-fc398e68d6ba"",
        ""url"": ""/v2/routes/75a58db5-ac06-4e25-9570-fc398e68d6ba"",
        ""created_at"": ""2015-07-29T12:47:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-15"",
        ""domain_guid"": ""bcc5bcae-16c1-4684-bcfa-cf726f8b4888"",
        ""space_guid"": ""9b92939a-404d-465e-8479-77ba589167c7"",
        ""path"": """",
        ""domain_url"": ""/v2/domains/bcc5bcae-16c1-4684-bcfa-cf726f8b4888"",
        ""space_url"": ""/v2/spaces/9b92939a-404d-465e-8479-77ba589167c7"",
        ""apps_url"": ""/v2/routes/75a58db5-ac06-4e25-9570-fc398e68d6ba/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("75a58db5-ac06-4e25-9570-fc398e68d6ba", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/75a58db5-ac06-4e25-9570-fc398e68d6ba", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-15", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("bcc5bcae-16c1-4684-bcfa-cf726f8b4888", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("9b92939a-404d-465e-8479-77ba589167c7", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("/v2/domains/bcc5bcae-16c1-4684-bcfa-cf726f8b4888", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/9b92939a-404d-465e-8479-77ba589167c7", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/75a58db5-ac06-4e25-9570-fc398e68d6ba/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8893a0a2-6ad1-4a63-a57b-8fa897ed2b4f"",
        ""url"": ""/v2/service_bindings/8893a0a2-6ad1-4a63-a57b-8fa897ed2b4f"",
        ""created_at"": ""2015-07-29T12:47:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""616f95bd-02e0-487d-b80f-6fee909dad50"",
        ""service_instance_guid"": ""fce73fd6-021d-4208-9b4f-7051d8ed4a1b"",
        ""credentials"": {
          ""creds-key-557"": ""creds-val-557""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/616f95bd-02e0-487d-b80f-6fee909dad50"",
        ""service_instance_url"": ""/v2/service_instances/fce73fd6-021d-4208-9b4f-7051d8ed4a1b""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8893a0a2-6ad1-4a63-a57b-8fa897ed2b4f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/8893a0a2-6ad1-4a63-a57b-8fa897ed2b4f", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("616f95bd-02e0-487d-b80f-6fee909dad50", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("fce73fd6-021d-4208-9b4f-7051d8ed4a1b", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/616f95bd-02e0-487d-b80f-6fee909dad50", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/fce73fd6-021d-4208-9b4f-7051d8ed4a1b", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{""guid"":""703a5a38-591b-4cd6-ad41-affb0d57bd71"",""name"":""name-1616"",""routes"":[{""guid"":""4e088c67-1cd4-43d9-898d-abdcbad80099"",""host"":""host-8"",""domain"":{""guid"":""e3bfa147-77bb-47b1-9087-7228e55e053b"",""name"":""domain-47.example.com""}}],""running_instances"":0,""services"":[{""guid"":""afdd07df-df66-41e0-9eec-70eb2018427a"",""name"":""name-1618"",""bound_app_count"":1,""last_operation"":null,""dashboard_url"":null,""service_plan"":{""guid"":""b4c0e90e-1e58-4be5-9bc6-874b42ef1ec1"",""name"":""name-1619"",""service"":{""guid"":""f2ceffab-4ffd-4e9e-b73e-c590d5abd8c5"",""label"":""label-52"",""provider"":null,""version"":null}}}],""available_domains"":[{""guid"":""e3bfa147-77bb-47b1-9087-7228e55e053b"",""name"":""domain-47.example.com"",""owning_organization_guid"":""3245db20-aebe-4d18-b547-21c5b9e7be03""},{""guid"":""dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",""name"":""customer-app-domain1.com""},{""guid"":""c3e64ca8-e7c1-4602-b527-3fbb4ed985f1"",""name"":""customer-app-domain2.com""}],""name"":""name-1616"",""production"":false,""space_guid"":""11bb5a28-c59d-4bfc-977d-506fc1de8ce8"",""stack_guid"":""749d9ce5-a910-414c-861f-1e9516e91a3b"",""buildpack"":null,""detected_buildpack"":null,""environment_json"":null,""memory"":1024,""instances"":1,""disk_quota"":1024,""state"":""STOPPED"",""version"":""ed92b898-c864-4666-a28e-1eaf52cfdb78"",""command"":null,""console"":false,""debug"":null,""staging_task_id"":null,""package_state"":""PENDING"",""health_check_type"":""port"",""health_check_timeout"":null,""staging_failed_reason"":null,""diego"":false,""docker_image"":null,""package_updated_at"":""2015-07-29T12:47:24Z"",""detected_start_command"":"""",""enable_ssh"":true}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("703a5a38-591b-4cd6-ad41-affb0d57bd71", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1616", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("11bb5a28-c59d-4bfc-977d-506fc1de8ce8", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("749d9ce5-a910-414c-861f-1e9516e91a3b", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("ed92b898-c864-4666-a28e-1eaf52cfdb78", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:24Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""94ba13e8-3730-4541-8d8b-28da71016722"",
    ""url"": ""/v2/apps/94ba13e8-3730-4541-8d8b-28da71016722"",
    ""created_at"": ""2015-07-29T12:47:15Z"",
    ""updated_at"": ""2015-07-29T12:47:15Z""
  },
  ""entity"": {
    ""name"": ""name-111"",
    ""production"": false,
    ""space_guid"": ""843c5e5e-fee1-49c2-83d3-b21e5ceec0c9"",
    ""stack_guid"": ""8c8f7066-397f-4f13-929c-c395d1a75e24"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""b17d8366-7a9e-4c12-b9cc-992b31ce4d73"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2015-07-29T12:47:15Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("94ba13e8-3730-4541-8d8b-28da71016722", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/94ba13e8-3730-4541-8d8b-28da71016722", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-111", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("843c5e5e-fee1-49c2-83d3-b21e5ceec0c9", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("8c8f7066-397f-4f13-929c-c395d1a75e24", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("b17d8366-7a9e-4c12-b9cc-992b31ce4d73", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2015-07-29T12:47:15Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
        }
    }
}
