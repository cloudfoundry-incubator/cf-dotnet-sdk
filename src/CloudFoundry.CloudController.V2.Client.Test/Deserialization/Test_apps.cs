//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestRemoveServiceBindingFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0adc695d-8117-420e-86af-5a2921b0b954"",
    ""url"": ""/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954"",
    ""created_at"": ""2016-02-05T12:14:52Z"",
    ""updated_at"": ""2016-02-05T12:14:52Z""
  },
  ""entity"": {
    ""name"": ""name-2020"",
    ""production"": false,
    ""space_guid"": ""40ab3cf7-a34d-4c3a-8d39-a6ac3067705e"",
    ""stack_guid"": ""bb47d4be-9c03-45b5-b071-80366f06ab80"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""19b8bf53-6427-400d-9f5c-cdcbc4cf3d18"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-05T12:14:52Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/40ab3cf7-a34d-4c3a-8d39-a6ac3067705e"",
    ""stack_url"": ""/v2/stacks/bb47d4be-9c03-45b5-b071-80366f06ab80"",
    ""events_url"": ""/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954/events"",
    ""service_bindings_url"": ""/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954/service_bindings"",
    ""routes_url"": ""/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954/routes""
  }
}";

            RemoveServiceBindingFromAppResponse obj = Utilities.DeserializeJson<RemoveServiceBindingFromAppResponse>(json);

            Assert.AreEqual("0adc695d-8117-420e-86af-5a2921b0b954", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2020", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("40ab3cf7-a34d-4c3a-8d39-a6ac3067705e", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("bb47d4be-9c03-45b5-b071-80366f06ab80", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("19b8bf53-6427-400d-9f5c-cdcbc4cf3d18", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/40ab3cf7-a34d-4c3a-8d39-a6ac3067705e", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/bb47d4be-9c03-45b5-b071-80366f06ab80", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0adc695d-8117-420e-86af-5a2921b0b954/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""stats"":{""usage"":{""disk"":66392064,""mem"":29880320,""cpu"":0.13511219703079957,""time"":""2014-06-19 22:37:58 +0000""},""name"":""app_name"",""uris"":[""app_name.example.com""],""host"":""10.0.0.1"",""port"":61035,""uptime"":65007,""mem_quota"":536870912,""disk_quota"":1073741824,""fds_quota"":16384}}}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c9aae653-deb5-4046-afcd-347937074b4c"",
        ""url"": ""/v2/routes/c9aae653-deb5-4046-afcd-347937074b4c"",
        ""created_at"": ""2016-02-05T12:14:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-20"",
        ""path"": """",
        ""domain_guid"": ""82639a0c-5cd2-4636-9767-26c77f8876ee"",
        ""space_guid"": ""897fb1f2-3f09-447d-8aa4-ea10058b2925"",
        ""domain_url"": ""/v2/domains/82639a0c-5cd2-4636-9767-26c77f8876ee"",
        ""space_url"": ""/v2/spaces/897fb1f2-3f09-447d-8aa4-ea10058b2925"",
        ""apps_url"": ""/v2/routes/c9aae653-deb5-4046-afcd-347937074b4c/apps""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c9aae653-deb5-4046-afcd-347937074b4c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/c9aae653-deb5-4046-afcd-347937074b4c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-20", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("82639a0c-5cd2-4636-9767-26c77f8876ee", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("897fb1f2-3f09-447d-8aa4-ea10058b2925", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("/v2/domains/82639a0c-5cd2-4636-9767-26c77f8876ee", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/897fb1f2-3f09-447d-8aa4-ea10058b2925", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/c9aae653-deb5-4046-afcd-347937074b4c/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""96ebcb5d-9e57-41c6-a0a9-8d385f2daec8"",
    ""url"": ""/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8"",
    ""created_at"": ""2016-02-05T12:14:53Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""17eb5726-8972-47c6-b7e4-b215fdec586b"",
    ""stack_guid"": ""36b77737-57fe-49eb-8929-73114350bb74"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""ccbcb150-01ee-4803-939d-ab505afc15b3"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/17eb5726-8972-47c6-b7e4-b215fdec586b"",
    ""stack_url"": ""/v2/stacks/36b77737-57fe-49eb-8929-73114350bb74"",
    ""events_url"": ""/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8/events"",
    ""service_bindings_url"": ""/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8/service_bindings"",
    ""routes_url"": ""/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8/routes""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("96ebcb5d-9e57-41c6-a0a9-8d385f2daec8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("17eb5726-8972-47c6-b7e4-b215fdec586b", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("36b77737-57fe-49eb-8929-73114350bb74", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("ccbcb150-01ee-4803-939d-ab505afc15b3", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/17eb5726-8972-47c6-b7e4-b215fdec586b", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/36b77737-57fe-49eb-8929-73114350bb74", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/96ebcb5d-9e57-41c6-a0a9-8d385f2daec8/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""69351a88-2a58-4309-bd71-491e9268f72e"",
    ""url"": ""/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e"",
    ""created_at"": ""2016-02-05T12:14:53Z"",
    ""updated_at"": ""2016-02-05T12:14:53Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""0e290ae3-a736-4d37-9878-95d17d9758e9"",
    ""stack_guid"": ""1b61fa9b-1570-4b89-b016-8b60dde58567"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""e9b687c8-2643-4aa1-8099-f8319a45e9a7"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-05T12:14:53Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/0e290ae3-a736-4d37-9878-95d17d9758e9"",
    ""stack_url"": ""/v2/stacks/1b61fa9b-1570-4b89-b016-8b60dde58567"",
    ""events_url"": ""/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e/events"",
    ""service_bindings_url"": ""/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e/service_bindings"",
    ""routes_url"": ""/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e/routes""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("69351a88-2a58-4309-bd71-491e9268f72e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("0e290ae3-a736-4d37-9878-95d17d9758e9", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("1b61fa9b-1570-4b89-b016-8b60dde58567", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("e9b687c8-2643-4aa1-8099-f8319a45e9a7", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/0e290ae3-a736-4d37-9878-95d17d9758e9", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/1b61fa9b-1570-4b89-b016-8b60dde58567", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/69351a88-2a58-4309-bd71-491e9268f72e/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""8878122d-71d1-4764-9993-f3b35dc5991e"",
        ""url"": ""/v2/service_bindings/8878122d-71d1-4764-9993-f3b35dc5991e"",
        ""created_at"": ""2016-02-05T12:14:52Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""53f8e1d2-ac6d-49c9-9a19-a14ae533d8ba"",
        ""service_instance_guid"": ""d4f69c18-4b63-462c-84c6-b7fb9754be29"",
        ""credentials"": {
          ""creds-key-623"": ""creds-val-623""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/53f8e1d2-ac6d-49c9-9a19-a14ae533d8ba"",
        ""service_instance_url"": ""/v2/service_instances/d4f69c18-4b63-462c-84c6-b7fb9754be29""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("8878122d-71d1-4764-9993-f3b35dc5991e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/8878122d-71d1-4764-9993-f3b35dc5991e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("53f8e1d2-ac6d-49c9-9a19-a14ae533d8ba", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("d4f69c18-4b63-462c-84c6-b7fb9754be29", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/53f8e1d2-ac6d-49c9-9a19-a14ae533d8ba", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/d4f69c18-4b63-462c-84c6-b7fb9754be29", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3ad291bc-0fad-4a92-8382-97f2bd204976"",
        ""url"": ""/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976"",
        ""created_at"": ""2016-02-05T12:14:53Z"",
        ""updated_at"": ""2016-02-05T12:14:53Z""
      },
      ""entity"": {
        ""name"": ""name-2136"",
        ""production"": false,
        ""space_guid"": ""1fbe0f5d-9f3f-4ad0-bb9c-1174b16f37c2"",
        ""stack_guid"": ""8eb03cbf-d4c4-425a-ad18-21a29d70579b"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""698dd2ba-6f80-4a5b-991a-015cd0fbe42c"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-02-05T12:14:53Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""space_url"": ""/v2/spaces/1fbe0f5d-9f3f-4ad0-bb9c-1174b16f37c2"",
        ""stack_url"": ""/v2/stacks/8eb03cbf-d4c4-425a-ad18-21a29d70579b"",
        ""events_url"": ""/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976/events"",
        ""service_bindings_url"": ""/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976/service_bindings"",
        ""routes_url"": ""/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""8e039849-975d-4f9a-981e-b458ad8bba33"",
        ""url"": ""/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33"",
        ""created_at"": ""2016-02-05T12:14:53Z"",
        ""updated_at"": ""2016-02-05T12:14:53Z""
      },
      ""entity"": {
        ""name"": ""name-2126"",
        ""production"": false,
        ""space_guid"": ""e57c13ba-0058-413f-a8a5-36160e1fabdc"",
        ""stack_guid"": ""b16767c1-0e04-43e0-8df1-4e54e5c4d737"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""9aae3968-ba8b-4c81-a98b-3710e5955fc1"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-02-05T12:14:53Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""space_url"": ""/v2/spaces/e57c13ba-0058-413f-a8a5-36160e1fabdc"",
        ""stack_url"": ""/v2/stacks/b16767c1-0e04-43e0-8df1-4e54e5c4d737"",
        ""events_url"": ""/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33/events"",
        ""service_bindings_url"": ""/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33/service_bindings"",
        ""routes_url"": ""/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33/routes""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""cfdb9ede-0455-46bf-ae97-7427097e8f0e"",
        ""url"": ""/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e"",
        ""created_at"": ""2016-02-05T12:14:53Z"",
        ""updated_at"": ""2016-02-05T12:14:53Z""
      },
      ""entity"": {
        ""name"": ""name-2131"",
        ""production"": false,
        ""space_guid"": ""b7c5de84-a538-4abf-ae66-0fa90aeb79c0"",
        ""stack_guid"": ""f5008f8c-8456-4728-a378-dc288d5ddc73"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""ea8c90dd-3996-4f09-8d7e-9856e171c89c"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-02-05T12:14:53Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""space_url"": ""/v2/spaces/b7c5de84-a538-4abf-ae66-0fa90aeb79c0"",
        ""stack_url"": ""/v2/stacks/f5008f8c-8456-4728-a378-dc288d5ddc73"",
        ""events_url"": ""/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e/events"",
        ""service_bindings_url"": ""/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e/service_bindings"",
        ""routes_url"": ""/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e/routes""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3ad291bc-0fad-4a92-8382-97f2bd204976", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2136", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("1fbe0f5d-9f3f-4ad0-bb9c-1174b16f37c2", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("8eb03cbf-d4c4-425a-ad18-21a29d70579b", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("698dd2ba-6f80-4a5b-991a-015cd0fbe42c", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].EnableSsh), true);
            Assert.AreEqual("/v2/spaces/1fbe0f5d-9f3f-4ad0-bb9c-1174b16f37c2", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/8eb03cbf-d4c4-425a-ad18-21a29d70579b", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/3ad291bc-0fad-4a92-8382-97f2bd204976/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("8e039849-975d-4f9a-981e-b458ad8bba33", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2126", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("e57c13ba-0058-413f-a8a5-36160e1fabdc", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("b16767c1-0e04-43e0-8df1-4e54e5c4d737", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("9aae3968-ba8b-4c81-a98b-3710e5955fc1", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].EnableSsh), true);
            Assert.AreEqual("/v2/spaces/e57c13ba-0058-413f-a8a5-36160e1fabdc", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/b16767c1-0e04-43e0-8df1-4e54e5c4d737", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/8e039849-975d-4f9a-981e-b458ad8bba33/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("cfdb9ede-0455-46bf-ae97-7427097e8f0e", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2131", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("b7c5de84-a538-4abf-ae66-0fa90aeb79c0", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("f5008f8c-8456-4728-a378-dc288d5ddc73", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("ea8c90dd-3996-4f09-8d7e-9856e171c89c", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[2].EnableSsh), true);
            Assert.AreEqual("/v2/spaces/b7c5de84-a538-4abf-ae66-0fa90aeb79c0", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/f5008f8c-8456-4728-a378-dc288d5ddc73", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/cfdb9ede-0455-46bf-ae97-7427097e8f0e/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{""guid"":""a13c6f50-e841-4ad6-ac3d-c38038d3bb2c"",""name"":""name-1661"",""routes"":[{""guid"":""76757494-8075-4ea0-ad4f-0ad0b9e7c998"",""host"":""host-17"",""domain"":{""guid"":""64713fbb-9070-48c0-9548-e8e67d9684de"",""name"":""domain-37.example.com""}}],""running_instances"":0,""services"":[{""guid"":""5747d138-84a6-4042-889d-b3d9bdfd4abb"",""name"":""name-1663"",""bound_app_count"":1,""last_operation"":null,""dashboard_url"":null,""service_plan"":{""guid"":""e7590799-8322-4e44-9919-a52f08243b43"",""name"":""name-1664"",""service"":{""guid"":""1e9cfa1b-3c83-446e-a248-32ee2f5526e0"",""label"":""label-41"",""provider"":null,""version"":null}}}],""available_domains"":[{""guid"":""64713fbb-9070-48c0-9548-e8e67d9684de"",""name"":""domain-37.example.com"",""owning_organization_guid"":""c3811afa-09dd-43fb-ba56-09a99334d917""},{""guid"":""fc5777a8-42d7-4d12-9515-c08b09042d7b"",""name"":""customer-app-domain1.com""},{""guid"":""f7b8e132-776a-410d-b45a-2994e5bc4459"",""name"":""customer-app-domain2.com""}],""name"":""name-1661"",""production"":false,""space_guid"":""a818ccb1-d16e-46f7-954e-1755f2f78879"",""stack_guid"":""3b2288ad-731e-4357-8768-d15f73616b6c"",""buildpack"":null,""detected_buildpack"":null,""environment_json"":null,""memory"":1024,""instances"":1,""disk_quota"":1024,""state"":""STOPPED"",""version"":""1b7cfbab-bd13-46d4-8e88-4dd83ecf4004"",""command"":null,""console"":false,""debug"":null,""staging_task_id"":null,""package_state"":""PENDING"",""health_check_type"":""port"",""health_check_timeout"":null,""staging_failed_reason"":null,""diego"":false,""docker_image"":null,""package_updated_at"":""2016-02-05T12:14:47Z"",""detected_start_command"":"""",""enable_ssh"":true}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("a13c6f50-e841-4ad6-ac3d-c38038d3bb2c", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-1661", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("a818ccb1-d16e-46f7-954e-1755f2f78879", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("3b2288ad-731e-4357-8768-d15f73616b6c", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("1b7cfbab-bd13-46d4-8e88-4dd83ecf4004", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""eb2da468-f9a7-4666-aa3c-9b897a012e17"",
    ""url"": ""/v2/apps/eb2da468-f9a7-4666-aa3c-9b897a012e17"",
    ""created_at"": ""2016-02-05T12:14:54Z"",
    ""updated_at"": ""2016-02-05T12:14:54Z""
  },
  ""entity"": {
    ""name"": ""name-2285"",
    ""production"": false,
    ""space_guid"": ""b292edfe-b5ef-4414-84ff-81aeca645e45"",
    ""stack_guid"": ""9cc93bf8-e291-4fa8-aede-1ee70d32725b"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""31013d60-0513-41ab-be82-b1dc9449da67"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-05T12:14:54Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("eb2da468-f9a7-4666-aa3c-9b897a012e17", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/eb2da468-f9a7-4666-aa3c-9b897a012e17", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2285", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("b292edfe-b5ef-4414-84ff-81aeca645e45", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("9cc93bf8-e291-4fa8-aede-1ee70d32725b", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("31013d60-0513-41ab-be82-b1dc9449da67", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""mem"": 1024,
        ""disk"": 1024,
        ""fds"": 16384
      },
      ""application_version"": ""2ca459f4-9a10-4043-bd16-ba8b57d01e84"",
      ""application_name"": ""name-2207"",
      ""application_uris"": [

      ],
      ""version"": ""2ca459f4-9a10-4043-bd16-ba8b57d01e84"",
      ""name"": ""name-2207"",
      ""space_name"": ""name-2208"",
      ""space_id"": ""4e9bff97-a41e-45f4-b9da-f96ee200e2b6"",
      ""uris"": [

      ],
      ""users"": null
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6e896f88-151e-46f6-85cb-bf46fdaee791"",
    ""created_at"": ""2016-02-05T12:14:48Z"",
    ""url"": ""/v2/jobs/6e896f88-151e-46f6-85cb-bf46fdaee791""
  },
  ""entity"": {
    ""guid"": ""6e896f88-151e-46f6-85cb-bf46fdaee791"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("6e896f88-151e-46f6-85cb-bf46fdaee791", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-05T12:14:48Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/6e896f88-151e-46f6-85cb-bf46fdaee791", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("6e896f88-151e-46f6-85cb-bf46fdaee791", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{""0"":{""state"":""RUNNING"",""since"":1403140717.984577,""debug_ip"":null,""debug_port"":null,""console_ip"":null,""console_port"":null}}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestRemoveRouteFromAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5d7432a7-7530-453b-80d5-e14975ec62df"",
    ""url"": ""/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df"",
    ""created_at"": ""2016-02-05T12:14:52Z"",
    ""updated_at"": ""2016-02-05T12:14:52Z""
  },
  ""entity"": {
    ""name"": ""name-2036"",
    ""production"": false,
    ""space_guid"": ""f23d02d0-0694-4111-ada7-e593f9c6fb7a"",
    ""stack_guid"": ""dee3c2ce-d897-4018-a2b8-2286ebd7ce02"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""9142d3b4-50ba-4639-ade2-47c66bf6a9ac"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-05T12:14:52Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/f23d02d0-0694-4111-ada7-e593f9c6fb7a"",
    ""stack_url"": ""/v2/stacks/dee3c2ce-d897-4018-a2b8-2286ebd7ce02"",
    ""events_url"": ""/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df/events"",
    ""service_bindings_url"": ""/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df/service_bindings"",
    ""routes_url"": ""/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df/routes""
  }
}";

            RemoveRouteFromAppResponse obj = Utilities.DeserializeJson<RemoveRouteFromAppResponse>(json);

            Assert.AreEqual("5d7432a7-7530-453b-80d5-e14975ec62df", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2036", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("f23d02d0-0694-4111-ada7-e593f9c6fb7a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("dee3c2ce-d897-4018-a2b8-2286ebd7ce02", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("9142d3b4-50ba-4639-ade2-47c66bf6a9ac", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/f23d02d0-0694-4111-ada7-e593f9c6fb7a", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/dee3c2ce-d897-4018-a2b8-2286ebd7ce02", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/5d7432a7-7530-453b-80d5-e14975ec62df/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5d9f4992-4835-4291-8be5-6a5d1e84fb65"",
    ""url"": ""/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65"",
    ""created_at"": ""2016-02-05T12:14:52Z"",
    ""updated_at"": ""2016-02-05T12:14:53Z""
  },
  ""entity"": {
    ""name"": ""name-2071"",
    ""production"": false,
    ""space_guid"": ""303f6372-a743-4c2a-9501-21e3ae1b3ee1"",
    ""stack_guid"": ""3a18f6fa-c977-4128-abd4-91900c68ea46"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""ccec7dbc-730e-4484-97e9-9c873f23727a"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-05T12:14:52Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/303f6372-a743-4c2a-9501-21e3ae1b3ee1"",
    ""stack_url"": ""/v2/stacks/3a18f6fa-c977-4128-abd4-91900c68ea46"",
    ""events_url"": ""/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65/events"",
    ""service_bindings_url"": ""/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65/service_bindings"",
    ""routes_url"": ""/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65/routes""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("5d9f4992-4835-4291-8be5-6a5d1e84fb65", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2071", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("303f6372-a743-4c2a-9501-21e3ae1b3ee1", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("3a18f6fa-c977-4128-abd4-91900c68ea46", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("ccec7dbc-730e-4484-97e9-9c873f23727a", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:52Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/303f6372-a743-4c2a-9501-21e3ae1b3ee1", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/3a18f6fa-c977-4128-abd4-91900c68ea46", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/5d9f4992-4835-4291-8be5-6a5d1e84fb65/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1e34b28d-3dcc-48a8-ba02-75999f99a121"",
    ""url"": ""/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121"",
    ""created_at"": ""2016-02-05T12:14:53Z"",
    ""updated_at"": ""2016-02-05T12:14:53Z""
  },
  ""entity"": {
    ""name"": ""name-2146"",
    ""production"": false,
    ""space_guid"": ""cbd8111e-ec3d-4613-8d1e-b14d38c9c1ed"",
    ""stack_guid"": ""bb90d794-9120-4957-bc3b-a54e6feaa6b7"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""66780c9c-65fd-44b1-a5d5-46cbe00f2390"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-02-05T12:14:53Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/cbd8111e-ec3d-4613-8d1e-b14d38c9c1ed"",
    ""stack_url"": ""/v2/stacks/bb90d794-9120-4957-bc3b-a54e6feaa6b7"",
    ""events_url"": ""/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121/events"",
    ""service_bindings_url"": ""/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121/service_bindings"",
    ""routes_url"": ""/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121/routes""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("1e34b28d-3dcc-48a8-ba02-75999f99a121", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2146", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("cbd8111e-ec3d-4613-8d1e-b14d38c9c1ed", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("bb90d794-9120-4957-bc3b-a54e6feaa6b7", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("66780c9c-65fd-44b1-a5d5-46cbe00f2390", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:53Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/cbd8111e-ec3d-4613-8d1e-b14d38c9c1ed", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/bb90d794-9120-4957-bc3b-a54e6feaa6b7", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/1e34b28d-3dcc-48a8-ba02-75999f99a121/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }

        [TestMethod]
        public void TestUploadsBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""c795b3a8-8581-41ff-abb5-47531aad4418"",
    ""created_at"": ""2016-02-05T12:14:48Z"",
    ""url"": ""/v2/jobs/c795b3a8-8581-41ff-abb5-47531aad4418""
  },
  ""entity"": {
    ""guid"": ""c795b3a8-8581-41ff-abb5-47531aad4418"",
    ""status"": ""queued""
  }
}";

            UploadsBitsForAppResponse obj = Utilities.DeserializeJson<UploadsBitsForAppResponse>(json);

            Assert.AreEqual("c795b3a8-8581-41ff-abb5-47531aad4418", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-05T12:14:48Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/c795b3a8-8581-41ff-abb5-47531aad4418", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("c795b3a8-8581-41ff-abb5-47531aad4418", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""04f65c03-9aad-45c9-985e-08f8dc24ecd2"",
    ""url"": ""/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2"",
    ""created_at"": ""2016-02-05T12:14:54Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""7b1debea-04d3-44c3-b705-af74e7bc377a"",
    ""stack_guid"": ""36b77737-57fe-49eb-8929-73114350bb74"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""fe96e03d-5710-4880-a8bb-0a7ad4b77935"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""diego"": true,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2016-02-05T12:14:54Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""space_url"": ""/v2/spaces/7b1debea-04d3-44c3-b705-af74e7bc377a"",
    ""stack_url"": ""/v2/stacks/36b77737-57fe-49eb-8929-73114350bb74"",
    ""events_url"": ""/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2/events"",
    ""service_bindings_url"": ""/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2/service_bindings"",
    ""routes_url"": ""/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2/routes""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("04f65c03-9aad-45c9-985e-08f8dc24ecd2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("7b1debea-04d3-44c3-b705-af74e7bc377a", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("36b77737-57fe-49eb-8929-73114350bb74", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("fe96e03d-5710-4880-a8bb-0a7ad4b77935", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/7b1debea-04d3-44c3-b705-af74e7bc377a", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/36b77737-57fe-49eb-8929-73114350bb74", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/04f65c03-9aad-45c9-985e-08f8dc24ecd2/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
        }
    }
}
