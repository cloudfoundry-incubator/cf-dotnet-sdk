//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsTest
    {


        [TestMethod]
        public void TestGetInstanceInformationForStartedAppResponse()
        {
            string json = @"{
  ""0"": {
    ""state"": ""RUNNING"",
    ""since"": 1403140717.984577,
    ""uptime"": 2405
  },
  ""1"": {
    ""state"": ""STARTING"",
    ""since"": 3625363939.984577,
    ""uptime"": 1394
  },
  ""2"": {
    ""state"": ""CRASHED"",
    ""since"": 2514251828.984577,
    ""uptime"": 283
  },
  ""3"": {
    ""state"": ""DOWN"",
    ""uptime"": 9172
  }
}";

            GetInstanceInformationForStartedAppResponse obj = Utilities.DeserializeJson<GetInstanceInformationForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestListAllRoutesForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a5b944ab-99e4-420d-b446-b556173c9d36"",
        ""url"": ""/v2/routes/cf84d8ba-ce9f-4af9-94f5-5bee34d97d22"",
        ""created_at"": ""2016-05-05T14:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""host"": ""host-25"",
        ""path"": """",
        ""domain_guid"": ""a5b944ab-99e4-420d-b446-b556173c9d36"",
        ""space_guid"": ""a5b944ab-99e4-420d-b446-b556173c9d36"",
        ""service_instance_guid"": null,
        ""port"": null,
        ""domain_url"": ""/v2/domains/d1452693-d2f3-4c59-a421-ba2a280f4332"",
        ""space_url"": ""/v2/spaces/ee0cc813-cdf6-4479-8013-b2f10582f6a3"",
        ""apps_url"": ""/v2/routes/cf84d8ba-ce9f-4af9-94f5-5bee34d97d22/apps"",
        ""route_mappings_url"": ""/v2/routes/cf84d8ba-ce9f-4af9-94f5-5bee34d97d22/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllRoutesForAppResponse> page = Utilities.DeserializePage<ListAllRoutesForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a5b944ab-99e4-420d-b446-b556173c9d36", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/routes/cf84d8ba-ce9f-4af9-94f5-5bee34d97d22", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("host-25", TestUtil.ToTestableString(page[0].Host), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Path), true);
            Assert.AreEqual("a5b944ab-99e4-420d-b446-b556173c9d36", TestUtil.ToTestableString(page[0].DomainGuid), true);
            Assert.AreEqual("a5b944ab-99e4-420d-b446-b556173c9d36", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Port), true);
            Assert.AreEqual("/v2/domains/d1452693-d2f3-4c59-a421-ba2a280f4332", TestUtil.ToTestableString(page[0].DomainUrl), true);
            Assert.AreEqual("/v2/spaces/ee0cc813-cdf6-4479-8013-b2f10582f6a3", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/routes/cf84d8ba-ce9f-4af9-94f5-5bee34d97d22/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/routes/cf84d8ba-ce9f-4af9-94f5-5bee34d97d22/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestCreateDockerAppExperimentalResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e6e98063-7a1e-4d96-aa28-403f7c1d081f"",
    ""url"": ""/v2/apps/474d8962-c755-4255-af1a-5460d74552e1"",
    ""created_at"": ""2016-05-05T14:15:24Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""docker_app"",
    ""production"": false,
    ""space_guid"": ""e6e98063-7a1e-4d96-aa28-403f7c1d081f"",
    ""stack_guid"": ""e6e98063-7a1e-4d96-aa28-403f7c1d081f"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""4da5e4ad-6761-41b9-af56-194af25499bd"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""staging_failed_description"": null,
    ""diego"": true,
    ""docker_image"": ""cloudfoundry/hello:latest"",
    ""package_updated_at"": ""2016-05-05T14:15:24Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""docker_credentials_json"": {
      ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
    },
    ""ports"": [

    ],
    ""space_url"": ""/v2/spaces/5b6fc535-df56-45ce-8788-fc076535d403"",
    ""stack_url"": ""/v2/stacks/455c65e4-f114-4c94-adcc-e1d9cdcac4b1"",
    ""routes_url"": ""/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/routes"",
    ""events_url"": ""/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/events"",
    ""service_bindings_url"": ""/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/service_bindings"",
    ""route_mappings_url"": ""/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/route_mappings""
  }
}";

            CreateDockerAppExperimentalResponse obj = Utilities.DeserializeJson<CreateDockerAppExperimentalResponse>(json);

            Assert.AreEqual("e6e98063-7a1e-4d96-aa28-403f7c1d081f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/474d8962-c755-4255-af1a-5460d74552e1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("docker_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("e6e98063-7a1e-4d96-aa28-403f7c1d081f", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("e6e98063-7a1e-4d96-aa28-403f7c1d081f", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("4da5e4ad-6761-41b9-af56-194af25499bd", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("cloudfoundry/hello:latest", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/5b6fc535-df56-45ce-8788-fc076535d403", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/455c65e4-f114-4c94-adcc-e1d9cdcac4b1", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/474d8962-c755-4255-af1a-5460d74552e1/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestGetEnvForAppResponse()
        {
            string json = @"{
  ""staging_env_json"": {
    ""STAGING_ENV"": ""staging_value""
  },
  ""running_env_json"": {
    ""RUNNING_ENV"": ""running_value""
  },
  ""environment_json"": {
    ""env_var"": ""env_val""
  },
  ""system_env_json"": {
    ""VCAP_SERVICES"": {

    }
  },
  ""application_env_json"": {
    ""VCAP_APPLICATION"": {
      ""limits"": {
        ""fds"": 16384,
        ""mem"": 1024,
        ""disk"": 1024
      },
      ""application_name"": ""name-1985"",
      ""application_uris"": [

      ],
      ""name"": ""name-1985"",
      ""space_name"": ""name-1986"",
      ""space_id"": ""34ea48c0-1064-4dcf-83ce-b21fff386e6a"",
      ""uris"": [

      ],
      ""users"": null,
      ""version"": ""f71b6cd4-6244-4ed9-b365-30dc006e0c94"",
      ""application_version"": ""f71b6cd4-6244-4ed9-b365-30dc006e0c94"",
      ""application_id"": ""3370c157-485f-455c-b0b3-768d9e684f90""
    }
  }
}";

            GetEnvForAppResponse obj = Utilities.DeserializeJson<GetEnvForAppResponse>(json);

        }

        [TestMethod]
        public void TestCopyAppBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""30b17289-4aac-4a9d-996c-5074c069e653"",
    ""created_at"": ""2016-05-05T14:14:50Z"",
    ""url"": ""/v2/jobs/e7cf648e-9738-46c3-af35-565beec509e1""
  },
  ""entity"": {
    ""guid"": ""30b17289-4aac-4a9d-996c-5074c069e653"",
    ""status"": ""queued""
  }
}";

            CopyAppBitsForAppResponse obj = Utilities.DeserializeJson<CopyAppBitsForAppResponse>(json);

            Assert.AreEqual("30b17289-4aac-4a9d-996c-5074c069e653", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/e7cf648e-9738-46c3-af35-565beec509e1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("30b17289-4aac-4a9d-996c-5074c069e653", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestListAllServiceBindingsForAppResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""beb441da-5976-4dc7-bcd8-2f01998143c1"",
        ""url"": ""/v2/service_bindings/0c30520e-4a80-46c1-9b60-926e93d31265"",
        ""created_at"": ""2016-05-05T14:15:22Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""app_guid"": ""beb441da-5976-4dc7-bcd8-2f01998143c1"",
        ""service_instance_guid"": ""beb441da-5976-4dc7-bcd8-2f01998143c1"",
        ""credentials"": {
          ""creds-key-58"": ""creds-val-58""
        },
        ""binding_options"": {

        },
        ""gateway_data"": null,
        ""gateway_name"": """",
        ""syslog_drain_url"": null,
        ""app_url"": ""/v2/apps/62c8c4ea-2595-47e7-9ba4-1e37659a0c96"",
        ""service_instance_url"": ""/v2/service_instances/a9719b27-5eb3-4a8c-b9e0-6571b45c38e0""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBindingsForAppResponse> page = Utilities.DeserializePage<ListAllServiceBindingsForAppResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("beb441da-5976-4dc7-bcd8-2f01998143c1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_bindings/0c30520e-4a80-46c1-9b60-926e93d31265", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:22Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("beb441da-5976-4dc7-bcd8-2f01998143c1", TestUtil.ToTestableString(page[0].AppGuid), true);
            Assert.AreEqual("beb441da-5976-4dc7-bcd8-2f01998143c1", TestUtil.ToTestableString(page[0].ServiceInstanceGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayData), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].GatewayName), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SyslogDrainUrl), true);
            Assert.AreEqual("/v2/apps/62c8c4ea-2595-47e7-9ba4-1e37659a0c96", TestUtil.ToTestableString(page[0].AppUrl), true);
            Assert.AreEqual("/v2/service_instances/a9719b27-5eb3-4a8c-b9e0-6571b45c38e0", TestUtil.ToTestableString(page[0].ServiceInstanceUrl), true);
        }

        [TestMethod]
        public void TestAssociateRouteWithAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2832a142-42a3-4596-b933-24d5efa625fb"",
    ""url"": ""/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12"",
    ""created_at"": ""2016-05-05T14:15:22Z"",
    ""updated_at"": ""2016-05-05T14:15:22Z""
  },
  ""entity"": {
    ""name"": ""name-1900"",
    ""production"": false,
    ""space_guid"": ""2832a142-42a3-4596-b933-24d5efa625fb"",
    ""stack_guid"": ""2832a142-42a3-4596-b933-24d5efa625fb"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""128f4fbf-7a49-45ec-902b-32501e8e5101"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""staging_failed_description"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-05-05T14:15:22Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""docker_credentials_json"": {
      ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
    },
    ""ports"": null,
    ""space_url"": ""/v2/spaces/6c1063ba-c641-415f-9c2d-3590921c1318"",
    ""stack_url"": ""/v2/stacks/e01c1216-4139-48c0-8823-761a53b76577"",
    ""routes_url"": ""/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/routes"",
    ""events_url"": ""/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/events"",
    ""service_bindings_url"": ""/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/service_bindings"",
    ""route_mappings_url"": ""/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/route_mappings""
  }
}";

            AssociateRouteWithAppResponse obj = Utilities.DeserializeJson<AssociateRouteWithAppResponse>(json);

            Assert.AreEqual("2832a142-42a3-4596-b933-24d5efa625fb", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:22Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:22Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1900", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("2832a142-42a3-4596-b933-24d5efa625fb", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("2832a142-42a3-4596-b933-24d5efa625fb", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("128f4fbf-7a49-45ec-902b-32501e8e5101", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:22Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Ports), true);
            Assert.AreEqual("/v2/spaces/6c1063ba-c641-415f-9c2d-3590921c1318", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/e01c1216-4139-48c0-8823-761a53b76577", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/8c8d8978-bfb0-43c5-9ba7-1ee0cc94ea12/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestCreateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""15b156d1-3bd1-4d6d-84f0-6fb94d0d7ff2"",
    ""url"": ""/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271"",
    ""created_at"": ""2016-05-05T14:15:24Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my_super_app"",
    ""production"": false,
    ""space_guid"": ""15b156d1-3bd1-4d6d-84f0-6fb94d0d7ff2"",
    ""stack_guid"": ""15b156d1-3bd1-4d6d-84f0-6fb94d0d7ff2"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": {

    },
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""65731003-ba37-47e9-ae58-685e27bf9f23"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""staging_failed_description"": null,
    ""diego"": true,
    ""docker_image"": null,
    ""package_updated_at"": null,
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""docker_credentials_json"": {
      ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
    },
    ""ports"": [
      1024,
      2000
    ],
    ""space_url"": ""/v2/spaces/a8c8f8cc-01bc-4742-8f5f-d298c126529e"",
    ""stack_url"": ""/v2/stacks/455c65e4-f114-4c94-adcc-e1d9cdcac4b1"",
    ""routes_url"": ""/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/routes"",
    ""events_url"": ""/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/events"",
    ""service_bindings_url"": ""/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/service_bindings"",
    ""route_mappings_url"": ""/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/route_mappings""
  }
}";

            CreateAppResponse obj = Utilities.DeserializeJson<CreateAppResponse>(json);

            Assert.AreEqual("15b156d1-3bd1-4d6d-84f0-6fb94d0d7ff2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my_super_app", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("15b156d1-3bd1-4d6d-84f0-6fb94d0d7ff2", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("15b156d1-3bd1-4d6d-84f0-6fb94d0d7ff2", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("65731003-ba37-47e9-ae58-685e27bf9f23", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("/v2/spaces/a8c8f8cc-01bc-4742-8f5f-d298c126529e", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/455c65e4-f114-4c94-adcc-e1d9cdcac4b1", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/850adc09-2fe3-478b-ba62-4cfe2bee1271/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestListAllAppsResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""url"": ""/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad"",
        ""created_at"": ""2016-05-05T14:15:24Z"",
        ""updated_at"": ""2016-05-05T14:15:24Z""
      },
      ""entity"": {
        ""name"": ""name-2056"",
        ""production"": false,
        ""space_guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""stack_guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""727550bb-2c82-4dbe-bb36-094912f68d96"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""staging_failed_description"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-05-05T14:15:24Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""docker_credentials_json"": {
          ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
        },
        ""ports"": null,
        ""space_url"": ""/v2/spaces/be12e244-9d02-46d4-944f-d35616aca571"",
        ""stack_url"": ""/v2/stacks/74bcf84d-19a8-4069-bc20-df861d251680"",
        ""routes_url"": ""/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/routes"",
        ""events_url"": ""/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/events"",
        ""service_bindings_url"": ""/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/service_bindings"",
        ""route_mappings_url"": ""/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/route_mappings""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""url"": ""/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb"",
        ""created_at"": ""2016-05-05T14:15:24Z"",
        ""updated_at"": ""2016-05-05T14:15:24Z""
      },
      ""entity"": {
        ""name"": ""name-2061"",
        ""production"": false,
        ""space_guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""stack_guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""3bbe3097-2382-475c-9cfb-208a0180cdf3"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""staging_failed_description"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-05-05T14:15:24Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""docker_credentials_json"": {
          ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
        },
        ""ports"": null,
        ""space_url"": ""/v2/spaces/b7463d19-8ac4-471d-b5c3-c8b1f651a810"",
        ""stack_url"": ""/v2/stacks/44b9609b-c420-40b1-9019-bed9524f0814"",
        ""routes_url"": ""/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/routes"",
        ""events_url"": ""/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/events"",
        ""service_bindings_url"": ""/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/service_bindings"",
        ""route_mappings_url"": ""/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/route_mappings""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""url"": ""/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05"",
        ""created_at"": ""2016-05-05T14:15:24Z"",
        ""updated_at"": ""2016-05-05T14:15:24Z""
      },
      ""entity"": {
        ""name"": ""name-2066"",
        ""production"": false,
        ""space_guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""stack_guid"": ""6cddb24b-3146-4b57-afcf-488e16844c73"",
        ""buildpack"": null,
        ""detected_buildpack"": null,
        ""environment_json"": null,
        ""memory"": 1024,
        ""instances"": 1,
        ""disk_quota"": 1024,
        ""state"": ""STOPPED"",
        ""version"": ""74b60fac-8d91-4f9e-a5a6-9a620d1275df"",
        ""command"": null,
        ""console"": false,
        ""debug"": null,
        ""staging_task_id"": null,
        ""package_state"": ""PENDING"",
        ""health_check_type"": ""port"",
        ""health_check_timeout"": null,
        ""staging_failed_reason"": null,
        ""staging_failed_description"": null,
        ""diego"": false,
        ""docker_image"": null,
        ""package_updated_at"": ""2016-05-05T14:15:24Z"",
        ""detected_start_command"": """",
        ""enable_ssh"": true,
        ""docker_credentials_json"": {
          ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
        },
        ""ports"": null,
        ""space_url"": ""/v2/spaces/70af69b9-f624-48cd-a3f0-7d8925d7c527"",
        ""stack_url"": ""/v2/stacks/a05e02bd-79bb-4e44-b54b-bfa6850bd507"",
        ""routes_url"": ""/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/routes"",
        ""events_url"": ""/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/events"",
        ""service_bindings_url"": ""/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/service_bindings"",
        ""route_mappings_url"": ""/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/route_mappings""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAppsResponse> page = Utilities.DeserializePage<ListAllAppsResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2056", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Production), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[0].SpaceGuid), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[0].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[0].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[0].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("727550bb-2c82-4dbe-bb36-094912f68d96", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[0].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[0].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[0].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Ports), true);
            Assert.AreEqual("/v2/spaces/be12e244-9d02-46d4-944f-d35616aca571", TestUtil.ToTestableString(page[0].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/74bcf84d-19a8-4069-bc20-df861d251680", TestUtil.ToTestableString(page[0].StackUrl), true);
            Assert.AreEqual("/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/service_bindings", TestUtil.ToTestableString(page[0].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/03b2d9e3-7970-4911-b9eb-84993b89b7ad/route_mappings", TestUtil.ToTestableString(page[0].RouteMappingsUrl), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2061", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Production), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[1].SpaceGuid), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[1].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[1].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[1].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("3bbe3097-2382-475c-9cfb-208a0180cdf3", TestUtil.ToTestableString(page[1].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[1].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[1].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[1].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[1].EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Ports), true);
            Assert.AreEqual("/v2/spaces/b7463d19-8ac4-471d-b5c3-c8b1f651a810", TestUtil.ToTestableString(page[1].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/44b9609b-c420-40b1-9019-bed9524f0814", TestUtil.ToTestableString(page[1].StackUrl), true);
            Assert.AreEqual("/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/routes", TestUtil.ToTestableString(page[1].RoutesUrl), true);
            Assert.AreEqual("/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/events", TestUtil.ToTestableString(page[1].EventsUrl), true);
            Assert.AreEqual("/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/service_bindings", TestUtil.ToTestableString(page[1].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/be94ba38-5444-41fe-ac1f-c0cb3b8a7cdb/route_mappings", TestUtil.ToTestableString(page[1].RouteMappingsUrl), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2066", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Production), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[2].SpaceGuid), true);
            Assert.AreEqual("6cddb24b-3146-4b57-afcf-488e16844c73", TestUtil.ToTestableString(page[2].StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page[2].Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(page[2].DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(page[2].State), true);
            Assert.AreEqual("74b60fac-8d91-4f9e-a5a6-9a620d1275df", TestUtil.ToTestableString(page[2].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(page[2].PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(page[2].HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[2].Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(page[2].PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[2].EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].Ports), true);
            Assert.AreEqual("/v2/spaces/70af69b9-f624-48cd-a3f0-7d8925d7c527", TestUtil.ToTestableString(page[2].SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/a05e02bd-79bb-4e44-b54b-bfa6850bd507", TestUtil.ToTestableString(page[2].StackUrl), true);
            Assert.AreEqual("/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/routes", TestUtil.ToTestableString(page[2].RoutesUrl), true);
            Assert.AreEqual("/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/events", TestUtil.ToTestableString(page[2].EventsUrl), true);
            Assert.AreEqual("/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/service_bindings", TestUtil.ToTestableString(page[2].ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/e830288e-cdeb-4801-9215-8b0f84645f05/route_mappings", TestUtil.ToTestableString(page[2].RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestGetDetailedStatsForStartedAppResponse()
        {
            string json = @"{
  ""0"": {
    ""state"": ""RUNNING"",
    ""stats"": {
      ""usage"": {
        ""disk"": 66392064,
        ""mem"": 29880320,
        ""cpu"": 0.13511219703079957,
        ""time"": ""2014-06-19 22:37:58 +0000""
      },
      ""name"": ""app_name"",
      ""uris"": [
        ""app_name.example.com""
      ],
      ""host"": ""10.0.0.1"",
      ""port"": 61035,
      ""uptime"": 65007,
      ""mem_quota"": 536870912,
      ""disk_quota"": 1073741824,
      ""fds_quota"": 16384
    }
  }
}";

            GetDetailedStatsForStartedAppResponse obj = Utilities.DeserializeJson<GetDetailedStatsForStartedAppResponse>(json);

        }

        [TestMethod]
        public void TestUpdateAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""00a4edf1-01d5-48e5-aa90-263295ccaac5"",
    ""url"": ""/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5"",
    ""created_at"": ""2016-05-05T14:15:24Z"",
    ""updated_at"": ""2016-05-05T14:15:24Z""
  },
  ""entity"": {
    ""name"": ""new_name"",
    ""production"": false,
    ""space_guid"": ""00a4edf1-01d5-48e5-aa90-263295ccaac5"",
    ""stack_guid"": ""00a4edf1-01d5-48e5-aa90-263295ccaac5"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""e98566f8-9730-4613-9b4a-566947aa1f07"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""staging_failed_description"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-05-05T14:15:24Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""docker_credentials_json"": {
      ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
    },
    ""ports"": null,
    ""space_url"": ""/v2/spaces/e045917f-c3db-4add-a46d-852f9d21eb3d"",
    ""stack_url"": ""/v2/stacks/a58b8150-5d0a-4648-a706-96acabbad22e"",
    ""routes_url"": ""/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/routes"",
    ""events_url"": ""/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/events"",
    ""service_bindings_url"": ""/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/service_bindings"",
    ""route_mappings_url"": ""/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/route_mappings""
  }
}";

            UpdateAppResponse obj = Utilities.DeserializeJson<UpdateAppResponse>(json);

            Assert.AreEqual("00a4edf1-01d5-48e5-aa90-263295ccaac5", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("00a4edf1-01d5-48e5-aa90-263295ccaac5", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("00a4edf1-01d5-48e5-aa90-263295ccaac5", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("e98566f8-9730-4613-9b4a-566947aa1f07", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Ports), true);
            Assert.AreEqual("/v2/spaces/e045917f-c3db-4add-a46d-852f9d21eb3d", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/a58b8150-5d0a-4648-a706-96acabbad22e", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/42043f57-1fc7-44b4-90bf-33129e72bee5/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }

        [TestMethod]
        public void TestRestageAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3fdc9314-e32d-4cea-aed2-a3c36bcdca5d"",
    ""url"": ""/v2/apps/b7214bef-e205-4875-b6a3-b21065c235a9"",
    ""created_at"": ""2016-05-05T14:15:14Z"",
    ""updated_at"": ""2016-05-05T14:15:14Z""
  },
  ""entity"": {
    ""name"": ""name-1562"",
    ""production"": false,
    ""space_guid"": ""3fdc9314-e32d-4cea-aed2-a3c36bcdca5d"",
    ""stack_guid"": ""3fdc9314-e32d-4cea-aed2-a3c36bcdca5d"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STARTED"",
    ""version"": ""9e8880a1-f1dc-47ed-8f7a-2bb9be4ab060"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""staging_failed_description"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-05-05T14:15:14Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""docker_credentials_json"": {
      ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
    },
    ""ports"": null
  }
}";

            RestageAppResponse obj = Utilities.DeserializeJson<RestageAppResponse>(json);

            Assert.AreEqual("3fdc9314-e32d-4cea-aed2-a3c36bcdca5d", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/b7214bef-e205-4875-b6a3-b21065c235a9", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:14Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:14Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1562", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("3fdc9314-e32d-4cea-aed2-a3c36bcdca5d", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("3fdc9314-e32d-4cea-aed2-a3c36bcdca5d", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("9e8880a1-f1dc-47ed-8f7a-2bb9be4ab060", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:14Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Ports), true);
        }

        [TestMethod]
        public void TestUploadsBitsForAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""97d33208-ae25-404e-adbc-f20eb9d5dac6"",
    ""created_at"": ""2016-05-05T14:14:50Z"",
    ""url"": ""/v2/jobs/a430ef07-4c56-4963-878d-8cd73dcc3cbd""
  },
  ""entity"": {
    ""guid"": ""97d33208-ae25-404e-adbc-f20eb9d5dac6"",
    ""status"": ""queued""
  }
}";

            UploadsBitsForAppResponse obj = Utilities.DeserializeJson<UploadsBitsForAppResponse>(json);

            Assert.AreEqual("97d33208-ae25-404e-adbc-f20eb9d5dac6", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-05-05T14:14:50Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("/v2/jobs/a430ef07-4c56-4963-878d-8cd73dcc3cbd", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("97d33208-ae25-404e-adbc-f20eb9d5dac6", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("queued", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestGetAppSummaryResponse()
        {
            string json = @"{
  ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
  ""name"": ""name-97"",
  ""routes"": [
    {
      ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
      ""host"": ""host-5"",
      ""port"": null,
      ""path"": """",
      ""domain"": {
        ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
        ""name"": ""domain-25.example.com""
      }
    }
  ],
  ""running_instances"": 0,
  ""services"": [
    {
      ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
      ""name"": ""name-99"",
      ""bound_app_count"": 1,
      ""last_operation"": null,
      ""dashboard_url"": null,
      ""service_plan"": {
        ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
        ""name"": ""name-100"",
        ""service"": {
          ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
          ""label"": ""label-5"",
          ""provider"": null,
          ""version"": null
        }
      }
    }
  ],
  ""available_domains"": [
    {
      ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
      ""name"": ""domain-25.example.com"",
      ""owning_organization_guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c""
    },
    {
      ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
      ""name"": ""customer-app-domain1.com"",
      ""router_group_guid"": null,
      ""router_group_type"": null
    },
    {
      ""guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
      ""name"": ""customer-app-domain2.com"",
      ""router_group_guid"": null,
      ""router_group_type"": null
    }
  ],
  ""production"": false,
  ""space_guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
  ""stack_guid"": ""7a625f71-2a8f-4c99-b301-2a25b37bfd6c"",
  ""buildpack"": null,
  ""detected_buildpack"": null,
  ""environment_json"": null,
  ""memory"": 1024,
  ""instances"": 1,
  ""disk_quota"": 1024,
  ""state"": ""STOPPED"",
  ""version"": ""a25185cd-0ec8-436a-bb52-6153a30f42d6"",
  ""command"": null,
  ""console"": false,
  ""debug"": null,
  ""staging_task_id"": null,
  ""package_state"": ""PENDING"",
  ""health_check_type"": ""port"",
  ""health_check_timeout"": null,
  ""staging_failed_reason"": null,
  ""staging_failed_description"": null,
  ""diego"": false,
  ""docker_image"": null,
  ""package_updated_at"": ""2016-05-05T14:14:49Z"",
  ""detected_start_command"": """",
  ""enable_ssh"": true,
  ""docker_credentials_json"": {
    ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
  },
  ""ports"": null
}";

            GetAppSummaryResponse obj = Utilities.DeserializeJson<GetAppSummaryResponse>(json);

            Assert.AreEqual("7a625f71-2a8f-4c99-b301-2a25b37bfd6c", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-97", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(obj.RunningInstances), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("7a625f71-2a8f-4c99-b301-2a25b37bfd6c", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("7a625f71-2a8f-4c99-b301-2a25b37bfd6c", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("a25185cd-0ec8-436a-bb52-6153a30f42d6", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-05-05T14:14:49Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Ports), true);
        }

        [TestMethod]
        public void TestRetrieveAppResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""586070e1-a407-44f8-a7b5-467c4b802e4e"",
    ""url"": ""/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b"",
    ""created_at"": ""2016-05-05T14:15:24Z"",
    ""updated_at"": ""2016-05-05T14:15:24Z""
  },
  ""entity"": {
    ""name"": ""name-2076"",
    ""production"": false,
    ""space_guid"": ""586070e1-a407-44f8-a7b5-467c4b802e4e"",
    ""stack_guid"": ""586070e1-a407-44f8-a7b5-467c4b802e4e"",
    ""buildpack"": null,
    ""detected_buildpack"": null,
    ""environment_json"": null,
    ""memory"": 1024,
    ""instances"": 1,
    ""disk_quota"": 1024,
    ""state"": ""STOPPED"",
    ""version"": ""7b788045-b8e5-44ac-8be7-eb37c097c418"",
    ""command"": null,
    ""console"": false,
    ""debug"": null,
    ""staging_task_id"": null,
    ""package_state"": ""PENDING"",
    ""health_check_type"": ""port"",
    ""health_check_timeout"": null,
    ""staging_failed_reason"": null,
    ""staging_failed_description"": null,
    ""diego"": false,
    ""docker_image"": null,
    ""package_updated_at"": ""2016-05-05T14:15:24Z"",
    ""detected_start_command"": """",
    ""enable_ssh"": true,
    ""docker_credentials_json"": {
      ""redacted_message"": ""[PRIVATE DATA HIDDEN]""
    },
    ""ports"": null,
    ""space_url"": ""/v2/spaces/d654353e-c7f3-414c-8818-58dec7a70871"",
    ""stack_url"": ""/v2/stacks/b61afd63-f6fa-4c19-908f-36eece14cf22"",
    ""routes_url"": ""/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/routes"",
    ""events_url"": ""/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/events"",
    ""service_bindings_url"": ""/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/service_bindings"",
    ""route_mappings_url"": ""/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/route_mappings""
  }
}";

            RetrieveAppResponse obj = Utilities.DeserializeJson<RetrieveAppResponse>(json);

            Assert.AreEqual("586070e1-a407-44f8-a7b5-467c4b802e4e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2076", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Production), true);
            Assert.AreEqual("586070e1-a407-44f8-a7b5-467c4b802e4e", TestUtil.ToTestableString(obj.SpaceGuid), true);
            Assert.AreEqual("586070e1-a407-44f8-a7b5-467c4b802e4e", TestUtil.ToTestableString(obj.StackGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Buildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedBuildpack), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EnvironmentJson), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.Memory), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
            Assert.AreEqual("1024", TestUtil.ToTestableString(obj.DiskQuota), true);
            Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("7b788045-b8e5-44ac-8be7-eb37c097c418", TestUtil.ToTestableString(obj.Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Console), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Debug), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingTaskId), true);
            Assert.AreEqual("PENDING", TestUtil.ToTestableString(obj.PackageState), true);
            Assert.AreEqual("port", TestUtil.ToTestableString(obj.HealthCheckType), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.HealthCheckTimeout), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.StagingFailedDescription), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.Diego), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DockerImage), true);
            Assert.AreEqual("2016-05-05T14:15:24Z", TestUtil.ToTestableString(obj.PackageUpdatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(obj.EnableSsh), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Ports), true);
            Assert.AreEqual("/v2/spaces/d654353e-c7f3-414c-8818-58dec7a70871", TestUtil.ToTestableString(obj.SpaceUrl), true);
            Assert.AreEqual("/v2/stacks/b61afd63-f6fa-4c19-908f-36eece14cf22", TestUtil.ToTestableString(obj.StackUrl), true);
            Assert.AreEqual("/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/routes", TestUtil.ToTestableString(obj.RoutesUrl), true);
            Assert.AreEqual("/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/events", TestUtil.ToTestableString(obj.EventsUrl), true);
            Assert.AreEqual("/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/service_bindings", TestUtil.ToTestableString(obj.ServiceBindingsUrl), true);
            Assert.AreEqual("/v2/apps/0ef16398-f07f-451d-9440-d71abed1e01b/route_mappings", TestUtil.ToTestableString(obj.RouteMappingsUrl), true);
        }
    }
}
