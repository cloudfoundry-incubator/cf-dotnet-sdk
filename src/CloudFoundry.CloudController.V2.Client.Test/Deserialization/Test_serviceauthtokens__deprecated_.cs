//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceAuthTokensDeprecatedTest
    {


        [TestMethod]
        public void TestListAllServiceAuthTokensDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""5ce361d4-f453-4266-a076-109509adfa84"",
        ""url"": ""/v2/service_auth_tokens/5ce361d4-f453-4266-a076-109509adfa84"",
        ""created_at"": ""2015-07-29T12:47:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-80"",
        ""provider"": ""provider-14""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""fc8e6c0f-e449-4b47-9133-3750ea7d2df1"",
        ""url"": ""/v2/service_auth_tokens/fc8e6c0f-e449-4b47-9133-3750ea7d2df1"",
        ""created_at"": ""2015-07-29T12:47:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-81"",
        ""provider"": ""provider-15""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c7b9e4e1-d236-4007-adae-38883abf2da7"",
        ""url"": ""/v2/service_auth_tokens/c7b9e4e1-d236-4007-adae-38883abf2da7"",
        ""created_at"": ""2015-07-29T12:47:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-82"",
        ""provider"": ""provider-16""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceAuthTokensDeprecatedResponse> page = Utilities.DeserializePage<ListAllServiceAuthTokensDeprecatedResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("5ce361d4-f453-4266-a076-109509adfa84", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/5ce361d4-f453-4266-a076-109509adfa84", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-80", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-14", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("fc8e6c0f-e449-4b47-9133-3750ea7d2df1", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/fc8e6c0f-e449-4b47-9133-3750ea7d2df1", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:30Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-81", TestUtil.ToTestableString(page[1].Label), true);
            Assert.AreEqual("provider-15", TestUtil.ToTestableString(page[1].Provider), true);
            Assert.AreEqual("c7b9e4e1-d236-4007-adae-38883abf2da7", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/c7b9e4e1-d236-4007-adae-38883abf2da7", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:30Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-82", TestUtil.ToTestableString(page[2].Label), true);
            Assert.AreEqual("provider-16", TestUtil.ToTestableString(page[2].Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByLabelDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""cb91b47a-7d52-4701-b532-51751d7c98ec"",
        ""url"": ""/v2/service_auth_tokens/cb91b47a-7d52-4701-b532-51751d7c98ec"",
        ""created_at"": ""2015-07-29T12:47:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""Nic-Token"",
        ""provider"": ""provider-7""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByLabelDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByLabelDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("cb91b47a-7d52-4701-b532-51751d7c98ec", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/cb91b47a-7d52-4701-b532-51751d7c98ec", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("Nic-Token", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("provider-7", TestUtil.ToTestableString(page[0].Provider), true);
        }

        [TestMethod]
        public void TestRetrieveServiceAuthTokenDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""80adb51f-b96a-429a-92e6-b83395ebeb76"",
    ""url"": ""/v2/service_auth_tokens/80adb51f-b96a-429a-92e6-b83395ebeb76"",
    ""created_at"": ""2015-07-29T12:47:30Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""label"": ""label-77"",
    ""provider"": ""provider-11""
  }
}";

            RetrieveServiceAuthTokenDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveServiceAuthTokenDeprecatedResponse>(json);

            Assert.AreEqual("80adb51f-b96a-429a-92e6-b83395ebeb76", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/80adb51f-b96a-429a-92e6-b83395ebeb76", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:30Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-77", TestUtil.ToTestableString(obj.Label), true);
            Assert.AreEqual("provider-11", TestUtil.ToTestableString(obj.Provider), true);
        }

        [TestMethod]
        public void TestFilterResultSetByProviderDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""4bf3b7db-e132-4edd-a95f-4d48cb359d14"",
        ""url"": ""/v2/service_auth_tokens/4bf3b7db-e132-4edd-a95f-4d48cb359d14"",
        ""created_at"": ""2015-07-29T12:47:30Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-70"",
        ""provider"": ""Face-Offer""
      }
    }
  ]
}";

            PagedResponseCollection<FilterResultSetByProviderDeprecatedResponse> page = Utilities.DeserializePage<FilterResultSetByProviderDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("4bf3b7db-e132-4edd-a95f-4d48cb359d14", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_auth_tokens/4bf3b7db-e132-4edd-a95f-4d48cb359d14", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:30Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-70", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("Face-Offer", TestUtil.ToTestableString(page[0].Provider), true);
        }
    }
}
