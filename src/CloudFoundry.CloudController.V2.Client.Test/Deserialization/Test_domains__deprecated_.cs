//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DomainsDeprecatedTest
    {


        [TestMethod]
        public void TestListAllSpacesForDomainDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""42b65f15-c8f5-4e5a-b46b-bb4bef3d703d"",
        ""url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-301"",
        ""organization_guid"": ""ed99d764-b187-4b39-9723-f76894ddba1f"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/ed99d764-b187-4b39-9723-f76894ddba1f"",
        ""developers_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/developers"",
        ""managers_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/managers"",
        ""auditors_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/auditors"",
        ""apps_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/apps"",
        ""routes_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/routes"",
        ""domains_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/domains"",
        ""service_instances_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/service_instances"",
        ""app_events_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/app_events"",
        ""events_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/events"",
        ""security_groups_url"": ""/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForDomainDeprecatedResponse> page = Utilities.DeserializePage<ListAllSpacesForDomainDeprecatedResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("42b65f15-c8f5-4e5a-b46b-bb4bef3d703d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-301", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("ed99d764-b187-4b39-9723-f76894ddba1f", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/ed99d764-b187-4b39-9723-f76894ddba1f", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/42b65f15-c8f5-4e5a-b46b-bb4bef3d703d/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 4,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""9f9550d4-29bd-409f-87e6-7632c19b1c30"",
        ""url"": ""/v2/domains/9f9550d4-29bd-409f-87e6-7632c19b1c30"",
        ""created_at"": ""2015-07-29T12:47:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f851df47-7098-4b04-8df8-3858f39fd8da"",
        ""url"": ""/v2/domains/f851df47-7098-4b04-8df8-3858f39fd8da"",
        ""created_at"": ""2015-07-29T12:47:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""6d9f988f-1ba6-438b-87c9-18e7556da951"",
        ""url"": ""/v2/domains/6d9f988f-1ba6-438b-87c9-18e7556da951"",
        ""created_at"": ""2015-07-29T12:47:16Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""vcap.me"",
        ""owning_organization_guid"": ""f6feee44-09ed-43c7-a8bb-30ba87eeb878"",
        ""owning_organization_url"": ""/v2/organizations/f6feee44-09ed-43c7-a8bb-30ba87eeb878"",
        ""spaces_url"": ""/v2/domains/6d9f988f-1ba6-438b-87c9-18e7556da951/spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""75bb8641-a1f9-45ce-838d-12a7b30b3c21"",
        ""url"": ""/v2/domains/75bb8641-a1f9-45ce-838d-12a7b30b3c21"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-13.example.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsDeprecatedResponse>(json, null);

            Assert.AreEqual("4", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("9f9550d4-29bd-409f-87e6-7632c19b1c30", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/9f9550d4-29bd-409f-87e6-7632c19b1c30", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("f851df47-7098-4b04-8df8-3858f39fd8da", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/f851df47-7098-4b04-8df8-3858f39fd8da", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("6d9f988f-1ba6-438b-87c9-18e7556da951", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/6d9f988f-1ba6-438b-87c9-18e7556da951", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:16Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("vcap.me", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("f6feee44-09ed-43c7-a8bb-30ba87eeb878", TestUtil.ToTestableString(page[2].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/f6feee44-09ed-43c7-a8bb-30ba87eeb878", TestUtil.ToTestableString(page[2].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/6d9f988f-1ba6-438b-87c9-18e7556da951/spaces", TestUtil.ToTestableString(page[2].SpacesUrl), true);
            Assert.AreEqual("75bb8641-a1f9-45ce-838d-12a7b30b3c21", TestUtil.ToTestableString(page[3].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/75bb8641-a1f9-45ce-838d-12a7b30b3c21", TestUtil.ToTestableString(page[3].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[3].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[3].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-13.example.com", TestUtil.ToTestableString(page[3].Name), true);
        }

        [TestMethod]
        public void TestCreatesDomainOwnedByGivenOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""63349518-8bda-4eb3-ad02-576d94057ae1"",
    ""url"": ""/v2/domains/63349518-8bda-4eb3-ad02-576d94057ae1"",
    ""created_at"": ""2015-07-29T12:47:17Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""exmaple.com"",
    ""owning_organization_guid"": ""8a303e94-a09a-48d9-95d6-289c4ae7a506"",
    ""shared_organizations"": [

    ],
    ""owning_organization_url"": ""/v2/organizations/8a303e94-a09a-48d9-95d6-289c4ae7a506"",
    ""spaces_url"": ""/v2/domains/63349518-8bda-4eb3-ad02-576d94057ae1/spaces""
  }
}";

            CreatesDomainOwnedByGivenOrganizationDeprecatedResponse obj = Utilities.DeserializeJson<CreatesDomainOwnedByGivenOrganizationDeprecatedResponse>(json);

            Assert.AreEqual("63349518-8bda-4eb3-ad02-576d94057ae1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/63349518-8bda-4eb3-ad02-576d94057ae1", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("exmaple.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("8a303e94-a09a-48d9-95d6-289c4ae7a506", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/8a303e94-a09a-48d9-95d6-289c4ae7a506", TestUtil.ToTestableString(obj.OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/domains/63349518-8bda-4eb3-ad02-576d94057ae1/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrieveDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""acba4096-9356-477c-a41a-ee6454eabd4b"",
    ""url"": ""/v2/domains/acba4096-9356-477c-a41a-ee6454eabd4b"",
    ""created_at"": ""2015-07-29T12:47:17Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""domain-12.example.com""
  }
}";

            RetrieveDomainDeprecatedResponse obj = Utilities.DeserializeJson<RetrieveDomainDeprecatedResponse>(json);

            Assert.AreEqual("acba4096-9356-477c-a41a-ee6454eabd4b", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/acba4096-9356-477c-a41a-ee6454eabd4b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-12.example.com", TestUtil.ToTestableString(obj.Name), true);
        }

        [TestMethod]
        public void TestCreatesSharedDomainDeprecatedResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""23d42d3a-21e2-48d0-b92d-d709215904e8"",
    ""url"": ""/v2/domains/23d42d3a-21e2-48d0-b92d-d709215904e8"",
    ""created_at"": ""2015-07-29T12:47:17Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""example.com"",
    ""owning_organization_guid"": null,
    ""shared_organizations"": [

    ]
  }
}";

            CreatesSharedDomainDeprecatedResponse obj = Utilities.DeserializeJson<CreatesSharedDomainDeprecatedResponse>(json);

            Assert.AreEqual("23d42d3a-21e2-48d0-b92d-d709215904e8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/23d42d3a-21e2-48d0-b92d-d709215904e8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("example.com", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.OwningOrganizationGuid), true);
        }
    }
}
