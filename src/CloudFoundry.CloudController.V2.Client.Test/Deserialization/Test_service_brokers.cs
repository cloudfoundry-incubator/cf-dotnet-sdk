//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ServiceBrokersTest
    {


        [TestMethod]
        public void TestUpdateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e83efdc4-abc3-416f-8c13-27c86d311752"",
    ""created_at"": ""2016-02-05T12:14:47Z"",
    ""updated_at"": ""2016-02-05T12:14:47Z"",
    ""url"": ""/v2/service_brokers/e83efdc4-abc3-416f-8c13-27c86d311752""
  },
  ""entity"": {
    ""name"": ""name-1672"",
    ""broker_url"": ""https://mybroker.example.com"",
    ""auth_username"": ""admin-user""
  }
}";

            UpdateServiceBrokerResponse obj = Utilities.DeserializeJson<UpdateServiceBrokerResponse>(json);

            Assert.AreEqual("e83efdc4-abc3-416f-8c13-27c86d311752", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/e83efdc4-abc3-416f-8c13-27c86d311752", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("name-1672", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://mybroker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin-user", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestCreateServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""acde4e81-0e6c-413f-96a8-7f4593a75211"",
    ""created_at"": ""2016-02-05T12:14:48Z"",
    ""updated_at"": null,
    ""url"": ""/v2/service_brokers/acde4e81-0e6c-413f-96a8-7f4593a75211""
  },
  ""entity"": {
    ""name"": ""service-broker-name"",
    ""broker_url"": ""https://broker.example.com"",
    ""auth_username"": ""admin""
  }
}";

            CreateServiceBrokerResponse obj = Utilities.DeserializeJson<CreateServiceBrokerResponse>(json);

            Assert.AreEqual("acde4e81-0e6c-413f-96a8-7f4593a75211", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("2016-02-05T12:14:48Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("/v2/service_brokers/acde4e81-0e6c-413f-96a8-7f4593a75211", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("service-broker-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://broker.example.com", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("admin", TestUtil.ToTestableString(obj.AuthUsername), true);
        }

        [TestMethod]
        public void TestListAllServiceBrokersResponse()
        {
            string json = @"{
  ""total_results"": 3,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""246be6fd-80b2-46bf-97ca-0d7fdfc0f91c"",
        ""url"": ""/v2/service_brokers/246be6fd-80b2-46bf-97ca-0d7fdfc0f91c"",
        ""created_at"": ""2016-02-05T12:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1678"",
        ""broker_url"": ""https://foo.com/url-55"",
        ""auth_username"": ""auth_username-46""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""505d0f4d-9100-457e-8f94-81fe84b317f3"",
        ""url"": ""/v2/service_brokers/505d0f4d-9100-457e-8f94-81fe84b317f3"",
        ""created_at"": ""2016-02-05T12:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1679"",
        ""broker_url"": ""https://foo.com/url-56"",
        ""auth_username"": ""auth_username-47""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""f71f286b-2cb4-43e5-b907-cf2cbf135e55"",
        ""url"": ""/v2/service_brokers/f71f286b-2cb4-43e5-b907-cf2cbf135e55"",
        ""created_at"": ""2016-02-05T12:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1680"",
        ""broker_url"": ""https://foo.com/url-57"",
        ""auth_username"": ""auth_username-48""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServiceBrokersResponse> page = Utilities.DeserializePage<ListAllServiceBrokersResponse>(json, null);

            Assert.AreEqual("3", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("246be6fd-80b2-46bf-97ca-0d7fdfc0f91c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/246be6fd-80b2-46bf-97ca-0d7fdfc0f91c", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1678", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("https://foo.com/url-55", TestUtil.ToTestableString(page[0].BrokerUrl), true);
            Assert.AreEqual("auth_username-46", TestUtil.ToTestableString(page[0].AuthUsername), true);
            Assert.AreEqual("505d0f4d-9100-457e-8f94-81fe84b317f3", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/505d0f4d-9100-457e-8f94-81fe84b317f3", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1679", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("https://foo.com/url-56", TestUtil.ToTestableString(page[1].BrokerUrl), true);
            Assert.AreEqual("auth_username-47", TestUtil.ToTestableString(page[1].AuthUsername), true);
            Assert.AreEqual("f71f286b-2cb4-43e5-b907-cf2cbf135e55", TestUtil.ToTestableString(page[2].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/f71f286b-2cb4-43e5-b907-cf2cbf135e55", TestUtil.ToTestableString(page[2].EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(page[2].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[2].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1680", TestUtil.ToTestableString(page[2].Name), true);
            Assert.AreEqual("https://foo.com/url-57", TestUtil.ToTestableString(page[2].BrokerUrl), true);
            Assert.AreEqual("auth_username-48", TestUtil.ToTestableString(page[2].AuthUsername), true);
        }

        [TestMethod]
        public void TestRetrieveServiceBrokerResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8dc93dc9-0c10-44c3-b77f-5d0b23ca9d49"",
    ""url"": ""/v2/service_brokers/8dc93dc9-0c10-44c3-b77f-5d0b23ca9d49"",
    ""created_at"": ""2016-02-05T12:14:47Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1681"",
    ""broker_url"": ""https://foo.com/url-58"",
    ""auth_username"": ""auth_username-49""
  }
}";

            RetrieveServiceBrokerResponse obj = Utilities.DeserializeJson<RetrieveServiceBrokerResponse>(json);

            Assert.AreEqual("8dc93dc9-0c10-44c3-b77f-5d0b23ca9d49", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/service_brokers/8dc93dc9-0c10-44c3-b77f-5d0b23ca9d49", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-02-05T12:14:47Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1681", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("https://foo.com/url-58", TestUtil.ToTestableString(obj.BrokerUrl), true);
            Assert.AreEqual("auth_username-49", TestUtil.ToTestableString(obj.AuthUsername), true);
        }
    }
}
