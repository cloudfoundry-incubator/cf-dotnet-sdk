//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""4e72f7e2-f2ab-46d4-8e0f-fd1e51c6bc0f"",
    ""url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86"",
    ""created_at"": ""2016-05-05T14:15:00Z"",
    ""updated_at"": ""2016-05-05T14:15:00Z""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""4e72f7e2-f2ab-46d4-8e0f-fd1e51c6bc0f"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/ec54dc56-f85c-46c0-a824-632d2ecac223"",
    ""spaces_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/spaces"",
    ""domains_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/domains"",
    ""private_domains_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/private_domains"",
    ""users_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/users"",
    ""managers_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/managers"",
    ""billing_managers_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/billing_managers"",
    ""auditors_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/auditors"",
    ""app_events_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("4e72f7e2-f2ab-46d4-8e0f-fd1e51c6bc0f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:00Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2016-05-05T14:15:00Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("4e72f7e2-f2ab-46d4-8e0f-fd1e51c6bc0f", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/ec54dc56-f85c-46c0-a824-632d2ecac223", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a2f14f95-634a-4b44-9352-6ef9852e7e86/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""f55143a9-3598-45aa-8050-807c296ea535"",
    ""url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb"",
    ""created_at"": ""2016-05-05T14:15:02Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1492"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""f55143a9-3598-45aa-8050-807c296ea535"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b778ef1e-876c-4d57-8df9-5bb6bf9ac039"",
    ""spaces_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/spaces"",
    ""domains_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/domains"",
    ""private_domains_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/private_domains"",
    ""users_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/users"",
    ""managers_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/managers"",
    ""billing_managers_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/billing_managers"",
    ""auditors_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/auditors"",
    ""app_events_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("f55143a9-3598-45aa-8050-807c296ea535", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1492", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("f55143a9-3598-45aa-8050-807c296ea535", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b778ef1e-876c-4d57-8df9-5bb6bf9ac039", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a54e2e43-d043-47db-8bcb-a13f53ffbdeb/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{
  ""guid"": ""e4e9b222-a535-40e3-981b-e2fb6fd5305d"",
  ""name"": ""name-42"",
  ""status"": ""active"",
  ""spaces"": [
    {
      ""guid"": ""e4e9b222-a535-40e3-981b-e2fb6fd5305d"",
      ""name"": ""name-44"",
      ""service_count"": 0,
      ""app_count"": 0,
      ""mem_dev_total"": 0,
      ""mem_prod_total"": 0
    }
  ]
}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("e4e9b222-a535-40e3-981b-e2fb6fd5305d", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-42", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""07fce0e2-4873-4417-a5ee-b52949d81bf1"",
    ""url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea"",
    ""created_at"": ""2016-05-05T14:15:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1473"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""07fce0e2-4873-4417-a5ee-b52949d81bf1"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/b6b01c3d-4e5e-4f5d-bfa0-269efe42d5aa"",
    ""spaces_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/spaces"",
    ""domains_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/domains"",
    ""private_domains_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/private_domains"",
    ""users_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/users"",
    ""managers_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/managers"",
    ""billing_managers_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/billing_managers"",
    ""auditors_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/auditors"",
    ""app_events_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("07fce0e2-4873-4417-a5ee-b52949d81bf1", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1473", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("07fce0e2-4873-4417-a5ee-b52949d81bf1", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/b6b01c3d-4e5e-4f5d-bfa0-269efe42d5aa", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d20c94aa-c2f4-4471-b1e5-5c31aed7a3ea/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e684ec8a-a865-44b2-8614-323396687cae"",
    ""url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb"",
    ""created_at"": ""2016-05-05T14:15:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1455"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e684ec8a-a865-44b2-8614-323396687cae"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/043bcf57-394d-49cc-a700-5fed6a5511cf"",
    ""spaces_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/spaces"",
    ""domains_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/domains"",
    ""private_domains_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/private_domains"",
    ""users_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/users"",
    ""managers_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/managers"",
    ""billing_managers_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/billing_managers"",
    ""auditors_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/auditors"",
    ""app_events_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("e684ec8a-a865-44b2-8614-323396687cae", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1455", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e684ec8a-a865-44b2-8614-323396687cae", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/043bcf57-394d-49cc-a700-5fed6a5511cf", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/29bebe16-e572-4b60-a744-9f9fc568cefb/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0c95ee90-8b6b-460a-9865-20e04bac4cf8"",
        ""url"": ""/v2/users/uaa-id-157"",
        ""created_at"": ""2016-05-05T14:15:01Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""user@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-157/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-157/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-157/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-157/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-157/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-157/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-157/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0c95ee90-8b6b-460a-9865-20e04bac4cf8", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-157", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-157/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-157/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-157/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-157/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-157/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-157/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-157/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""3c1a809b-8fe1-4499-8f40-4ff2076dfcfd"",
    ""url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa"",
    ""created_at"": ""2016-05-05T14:15:02Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1510"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""3c1a809b-8fe1-4499-8f40-4ff2076dfcfd"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/41d73dbd-c477-4fd7-95af-eb172ed8551b"",
    ""spaces_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/spaces"",
    ""domains_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/domains"",
    ""private_domains_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/private_domains"",
    ""users_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/users"",
    ""managers_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/managers"",
    ""billing_managers_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/billing_managers"",
    ""auditors_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/auditors"",
    ""app_events_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("3c1a809b-8fe1-4499-8f40-4ff2076dfcfd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1510", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("3c1a809b-8fe1-4499-8f40-4ff2076dfcfd", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/41d73dbd-c477-4fd7-95af-eb172ed8551b", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/15e18ad0-ed99-45c0-bb8c-6e84a8bff7fa/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""69bcd69f-7692-4223-85a2-4a3d2551ac7c"",
        ""url"": ""/v2/users/uaa-id-182"",
        ""created_at"": ""2016-05-05T14:15:02Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""auditor@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-182/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-182/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-182/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-182/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-182/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-182/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-182/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("69bcd69f-7692-4223-85a2-4a3d2551ac7c", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-182", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("auditor@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-182/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-182/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-182/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-182/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-182/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-182/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-182/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""75190f7c-16e7-45e1-9f0d-c0bb68bae49f"",
    ""url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b"",
    ""created_at"": ""2016-05-05T14:15:03Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1518"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""75190f7c-16e7-45e1-9f0d-c0bb68bae49f"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/3664fa5a-06f2-47ce-a98f-fbc9f4c24e20"",
    ""spaces_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/spaces"",
    ""domains_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/domains"",
    ""private_domains_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/private_domains"",
    ""users_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/users"",
    ""managers_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/managers"",
    ""billing_managers_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/billing_managers"",
    ""auditors_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/auditors"",
    ""app_events_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("75190f7c-16e7-45e1-9f0d-c0bb68bae49f", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:03Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1518", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("75190f7c-16e7-45e1-9f0d-c0bb68bae49f", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/3664fa5a-06f2-47ce-a98f-fbc9f4c24e20", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ac8e4a0f-92c6-4d3c-8a59-c2adfb58ff7b/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""3dc45683-55be-4551-b336-e3fbeb18fb64"",
        ""url"": ""/v2/users/uaa-id-173"",
        ""created_at"": ""2016-05-05T14:15:02Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""billing_manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-173/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-173/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-173/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-173/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-173/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-173/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-173/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("3dc45683-55be-4551-b336-e3fbeb18fb64", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-173", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("billing_manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-173/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-173/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-173/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-173/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-173/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-173/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-173/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dc0d63c0-52c6-4cba-bcd1-680bb00a9024"",
        ""url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0"",
        ""created_at"": ""2016-05-05T14:15:03Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1528"",
        ""organization_guid"": ""dc0d63c0-52c6-4cba-bcd1-680bb00a9024"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/e1f24c58-0198-4fe8-8e58-807a697fb4ac"",
        ""developers_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/developers"",
        ""managers_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/managers"",
        ""auditors_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/auditors"",
        ""apps_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/apps"",
        ""routes_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/routes"",
        ""domains_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/domains"",
        ""service_instances_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/service_instances"",
        ""app_events_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/app_events"",
        ""events_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/events"",
        ""security_groups_url"": ""/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dc0d63c0-52c6-4cba-bcd1-680bb00a9024", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:03Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1528", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("dc0d63c0-52c6-4cba-bcd1-680bb00a9024", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/e1f24c58-0198-4fe8-8e58-807a697fb4ac", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/c26283bc-0fef-4f3e-90a8-86d477a371b0/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociatePrivateDomainWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""444be03b-62b7-45af-b01d-84644080e8bd"",
    ""url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213"",
    ""created_at"": ""2016-05-05T14:15:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1462"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""444be03b-62b7-45af-b01d-84644080e8bd"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/38c900dd-a008-4e31-8a5d-b6562fa21512"",
    ""spaces_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/spaces"",
    ""domains_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/domains"",
    ""private_domains_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/private_domains"",
    ""users_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/users"",
    ""managers_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/managers"",
    ""billing_managers_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/billing_managers"",
    ""auditors_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/auditors"",
    ""app_events_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/space_quota_definitions""
  }
}";

            AssociatePrivateDomainWithOrganizationResponse obj = Utilities.DeserializeJson<AssociatePrivateDomainWithOrganizationResponse>(json);

            Assert.AreEqual("444be03b-62b7-45af-b01d-84644080e8bd", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1462", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("444be03b-62b7-45af-b01d-84644080e8bd", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/38c900dd-a008-4e31-8a5d-b6562fa21512", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/9e273b8a-e02a-4fcd-85eb-c388a1e84213/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""e0179c32-3289-477f-8ddb-48e8ff42a710"",
    ""url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982"",
    ""created_at"": ""2016-05-05T14:15:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1479"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""e0179c32-3289-477f-8ddb-48e8ff42a710"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/7195470b-5da4-4ac6-b7df-06f11d0d7ed6"",
    ""spaces_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/spaces"",
    ""domains_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/domains"",
    ""private_domains_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/private_domains"",
    ""users_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/users"",
    ""managers_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/managers"",
    ""billing_managers_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/billing_managers"",
    ""auditors_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/auditors"",
    ""app_events_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("e0179c32-3289-477f-8ddb-48e8ff42a710", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1479", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("e0179c32-3289-477f-8ddb-48e8ff42a710", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/7195470b-5da4-4ac6-b7df-06f11d0d7ed6", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/ae8b3d9b-998f-4ead-81e4-3c6955e41982/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""1560d31a-aea6-4a0f-8d20-3f8d1f8ee29c"",
    ""url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192"",
    ""created_at"": ""2016-05-05T14:15:01Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""1560d31a-aea6-4a0f-8d20-3f8d1f8ee29c"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/6833e147-3c7a-4159-831c-1cc17b158cce"",
    ""spaces_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/spaces"",
    ""domains_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/domains"",
    ""private_domains_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/private_domains"",
    ""users_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/users"",
    ""managers_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/managers"",
    ""billing_managers_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/billing_managers"",
    ""auditors_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/auditors"",
    ""app_events_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("1560d31a-aea6-4a0f-8d20-3f8d1f8ee29c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("1560d31a-aea6-4a0f-8d20-3f8d1f8ee29c", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/6833e147-3c7a-4159-831c-1cc17b158cce", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/a2a2576e-f604-4266-bdf2-28747189d192/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""d8b5648e-28f2-4eb4-a687-7d5d968ed07f"",
        ""url"": ""/v2/users/uaa-id-193"",
        ""created_at"": ""2016-05-05T14:15:03Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-193/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-193/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-193/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-193/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-193/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-193/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-193/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""d8b5648e-28f2-4eb4-a687-7d5d968ed07f"",
        ""url"": ""/v2/users/uaa-id-194"",
        ""created_at"": ""2016-05-05T14:15:03Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-194/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-194/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-194/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-194/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-194/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-194/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-194/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("d8b5648e-28f2-4eb4-a687-7d5d968ed07f", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-193", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:03Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-193/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-193/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("d8b5648e-28f2-4eb4-a687-7d5d968ed07f", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-194", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:03Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-194/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-194/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-194/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-194/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-194/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-194/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-194/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""bc234f8f-1dcc-43ea-9944-a253624f367e"",
        ""url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827"",
        ""created_at"": ""2016-05-05T14:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""bc234f8f-1dcc-43ea-9944-a253624f367e"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/8cdc3052-9642-4b8b-93bf-54ecdca9897a"",
        ""spaces_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/spaces"",
        ""domains_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/domains"",
        ""private_domains_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/private_domains"",
        ""users_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/users"",
        ""managers_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/managers"",
        ""billing_managers_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/billing_managers"",
        ""auditors_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/auditors"",
        ""app_events_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("bc234f8f-1dcc-43ea-9944-a253624f367e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("bc234f8f-1dcc-43ea-9944-a253624f367e", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/8cdc3052-9642-4b8b-93bf-54ecdca9897a", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/69275b67-e9ee-4542-839f-228a1c7c9827/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""0d202a79-313b-4cfd-9522-000ca46deb1d"",
        ""url"": ""/v2/space_quota_definitions/1ed6b7a7-dc0d-4584-bea7-edce1a871aff"",
        ""created_at"": ""2016-05-05T14:15:03Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-1531"",
        ""organization_guid"": ""0d202a79-313b-4cfd-9522-000ca46deb1d"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""app_instance_limit"": -1,
        ""app_task_limit"": 5,
        ""total_service_keys"": 600,
        ""total_reserved_route_ports"": -1,
        ""organization_url"": ""/v2/organizations/8447571b-3715-4de7-82f1-01e4e18f8d83"",
        ""spaces_url"": ""/v2/space_quota_definitions/1ed6b7a7-dc0d-4584-bea7-edce1a871aff/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("0d202a79-313b-4cfd-9522-000ca46deb1d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/1ed6b7a7-dc0d-4584-bea7-edce1a871aff", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:03Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1531", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("0d202a79-313b-4cfd-9522-000ca46deb1d", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].AppInstanceLimit), true);
            Assert.AreEqual("5", TestUtil.ToTestableString(page[0].AppTaskLimit), true);
            Assert.AreEqual("600", TestUtil.ToTestableString(page[0].TotalServiceKeys), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].TotalReservedRoutePorts), true);
            Assert.AreEqual("/v2/organizations/8447571b-3715-4de7-82f1-01e4e18f8d83", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/1ed6b7a7-dc0d-4584-bea7-edce1a871aff/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c129e2aa-b80e-48f8-93ee-5f9ebcbd76de"",
        ""url"": ""/v2/domains/f1643d70-1174-4b49-9eb2-6688b4e57950"",
        ""created_at"": ""2016-05-05T14:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c129e2aa-b80e-48f8-93ee-5f9ebcbd76de"",
        ""url"": ""/v2/domains/2eae87ab-62a6-47ef-9b4e-ffba76153d47"",
        ""created_at"": ""2016-05-05T14:14:47Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com"",
        ""router_group_guid"": null,
        ""router_group_type"": null
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c129e2aa-b80e-48f8-93ee-5f9ebcbd76de", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/f1643d70-1174-4b49-9eb2-6688b4e57950", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].RouterGroupType), true);
            Assert.AreEqual("c129e2aa-b80e-48f8-93ee-5f9ebcbd76de", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/2eae87ab-62a6-47ef-9b4e-ffba76153d47", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:14:47Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].RouterGroupType), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""0c859de3-8ac0-4f09-a379-99b40f4eea40"",
    ""url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565"",
    ""created_at"": ""2016-05-05T14:15:02Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1500"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""0c859de3-8ac0-4f09-a379-99b40f4eea40"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/500d7eac-756d-4eb1-b08b-cd0cf3ccac3c"",
    ""spaces_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/spaces"",
    ""domains_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/domains"",
    ""private_domains_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/private_domains"",
    ""users_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/users"",
    ""managers_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/managers"",
    ""billing_managers_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/billing_managers"",
    ""auditors_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/auditors"",
    ""app_events_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("0c859de3-8ac0-4f09-a379-99b40f4eea40", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1500", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("0c859de3-8ac0-4f09-a379-99b40f4eea40", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/500d7eac-756d-4eb1-b08b-cd0cf3ccac3c", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/814a42ec-5056-4a4c-ade4-b864f062b565/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""6b9ac9e8-5cd2-4471-80ee-3b1bb6c4bd60"",
    ""url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421"",
    ""created_at"": ""2016-05-05T14:15:02Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1512"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""6b9ac9e8-5cd2-4471-80ee-3b1bb6c4bd60"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/c5ffbeb3-cb5e-43c9-9abb-1e0bfc38d4d2"",
    ""spaces_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/spaces"",
    ""domains_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/domains"",
    ""private_domains_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/private_domains"",
    ""users_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/users"",
    ""managers_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/managers"",
    ""billing_managers_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/billing_managers"",
    ""auditors_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/auditors"",
    ""app_events_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("6b9ac9e8-5cd2-4471-80ee-3b1bb6c4bd60", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1512", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("6b9ac9e8-5cd2-4471-80ee-3b1bb6c4bd60", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/c5ffbeb3-cb5e-43c9-9abb-1e0bfc38d4d2", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/12e892c7-0f94-4307-ad73-336964f0a421/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationByUsernameResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""9d6adbf9-d27d-401e-b384-6ce750502cf2"",
    ""url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc"",
    ""created_at"": ""2016-05-05T14:15:03Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-1522"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""9d6adbf9-d27d-401e-b384-6ce750502cf2"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/03963dae-b0d3-40c0-bb2d-844053af9260"",
    ""spaces_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/spaces"",
    ""domains_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/domains"",
    ""private_domains_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/private_domains"",
    ""users_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/users"",
    ""managers_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/managers"",
    ""billing_managers_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/billing_managers"",
    ""auditors_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/auditors"",
    ""app_events_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationByUsernameResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationByUsernameResponse>(json);

            Assert.AreEqual("9d6adbf9-d27d-401e-b384-6ce750502cf2", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:03Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-1522", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("9d6adbf9-d27d-401e-b384-6ce750502cf2", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/03963dae-b0d3-40c0-bb2d-844053af9260", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/0bcde7e2-5946-40b8-ab7a-4649ee6c64bc/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""b89a5875-4ffa-49a0-9c29-a13d258bbb7a"",
        ""url"": ""/v2/services/ca203ffd-9cbb-4d6f-a33c-008b7676c4c3"",
        ""created_at"": ""2016-05-05T14:15:01Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-29"",
        ""provider"": null,
        ""url"": null,
        ""description"": ""desc-83"",
        ""long_description"": null,
        ""version"": null,
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""99a0c44c-7d59-4351-b0d7-ca95e08550bd"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": ""b89a5875-4ffa-49a0-9c29-a13d258bbb7a"",
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/ca203ffd-9cbb-4d6f-a33c-008b7676c4c3/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("b89a5875-4ffa-49a0-9c29-a13d258bbb7a", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/ca203ffd-9cbb-4d6f-a33c-008b7676c4c3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-29", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-83", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("99a0c44c-7d59-4351-b0d7-ca95e08550bd", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("b89a5875-4ffa-49a0-9c29-a13d258bbb7a", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/ca203ffd-9cbb-4d6f-a33c-008b7676c4c3/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""e862b8e1-8563-4f26-9861-c54f93dba2b4"",
        ""url"": ""/v2/private_domains/ff4a94fd-2ec4-4359-a05f-654939d2fe6e"",
        ""created_at"": ""2016-05-05T14:15:02Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-61.example.com"",
        ""owning_organization_guid"": ""e862b8e1-8563-4f26-9861-c54f93dba2b4"",
        ""owning_organization_url"": ""/v2/organizations/71e053e7-505d-41aa-9edb-b9025cab0ad4"",
        ""shared_organizations_url"": ""/v2/private_domains/ff4a94fd-2ec4-4359-a05f-654939d2fe6e/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("e862b8e1-8563-4f26-9861-c54f93dba2b4", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/ff4a94fd-2ec4-4359-a05f-654939d2fe6e", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:02Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-61.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("e862b8e1-8563-4f26-9861-c54f93dba2b4", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/71e053e7-505d-41aa-9edb-b9025cab0ad4", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/ff4a94fd-2ec4-4359-a05f-654939d2fe6e/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingRolesOfAllUsersInOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/organizations/e7c97203-a75b-4e60-8602-4d36650db5fc/user_roles?order-direction=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""871b114a-21bf-4d63-b8d7-fa2155a15a0e"",
        ""url"": ""/v2/users/uaa-id-164"",
        ""created_at"": ""2016-05-05T14:15:01Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": 0,
        ""active"": 0,
        ""default_space_guid"": null,
        ""username"": ""everything@example.com"",
        ""organization_roles"": [
          ""org_user"",
          ""org_manager"",
          ""org_auditor"",
          ""billing_manager""
        ],
        ""spaces_url"": ""/v2/users/uaa-id-164/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-164/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-164/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-164/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-164/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-164/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-164/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<RetrievingRolesOfAllUsersInOrganizationResponse> page = Utilities.DeserializePage<RetrievingRolesOfAllUsersInOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/organizations/e7c97203-a75b-4e60-8602-4d36650db5fc/user_roles?order-direction=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("871b114a-21bf-4d63-b8d7-fa2155a15a0e", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-164", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2016-05-05T14:15:01Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("everything@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-164/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-164/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{
  ""memory_usage_in_mb"": 0
}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationInstanceUsageResponse()
        {
            string json = @"{
  ""instance_usage"": 3
}";

            RetrievingOrganizationInstanceUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationInstanceUsageResponse>(json);

            Assert.AreEqual("3", TestUtil.ToTestableString(obj.InstanceUsage), true);
        }
    }
}
