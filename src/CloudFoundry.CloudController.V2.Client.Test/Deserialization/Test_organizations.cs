//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V2.Client;
using CloudFoundry.CloudController.V2.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V2.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class OrganizationsTest
    {


        [TestMethod]
        public void TestListAllBillingManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-353"",
        ""url"": ""/v2/users/uaa-id-353"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""billing_manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-353/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-353/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-353/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-353/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-353/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-353/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-353/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllBillingManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllBillingManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-353", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-353", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("billing_manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-353/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-353/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllDomainsForOrganizationDeprecatedResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",
        ""url"": ""/v2/domains/dbd00bcd-054e-4fb9-aa40-954b39c9fb10"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain1.com""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""c3e64ca8-e7c1-4602-b527-3fbb4ed985f1"",
        ""url"": ""/v2/domains/c3e64ca8-e7c1-4602-b527-3fbb4ed985f1"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""customer-app-domain2.com""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDomainsForOrganizationDeprecatedResponse> page = Utilities.DeserializePage<ListAllDomainsForOrganizationDeprecatedResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("dbd00bcd-054e-4fb9-aa40-954b39c9fb10", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/dbd00bcd-054e-4fb9-aa40-954b39c9fb10", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain1.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("c3e64ca8-e7c1-4602-b527-3fbb4ed985f1", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/domains/c3e64ca8-e7c1-4602-b527-3fbb4ed985f1", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("customer-app-domain2.com", TestUtil.ToTestableString(page[1].Name), true);
        }

        [TestMethod]
        public void TestListAllAuditorsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-376"",
        ""url"": ""/v2/users/uaa-id-376"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""auditor@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-376/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-376/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-376/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-376/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-376/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-376/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-376/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllAuditorsForOrganizationResponse> page = Utilities.DeserializePage<ListAllAuditorsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-376", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-376", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("auditor@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-376/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-376/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-376/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-376/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-376/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-376/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-376/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllUsersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-360"",
        ""url"": ""/v2/users/uaa-id-360"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""user@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-360/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-360/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-360/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-360/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-360/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-360/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-360/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllUsersForOrganizationResponse> page = Utilities.DeserializePage<ListAllUsersForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-360", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-360", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("user@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-360/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-360/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-360/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-360/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-360/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-360/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-360/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpacesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""a1195df8-9b53-4c9c-97ca-e1702296f9e1"",
        ""url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2111"",
        ""organization_guid"": ""5a6689b1-50df-41ce-bff8-e62a1dfda80c"",
        ""space_quota_definition_guid"": null,
        ""allow_ssh"": true,
        ""organization_url"": ""/v2/organizations/5a6689b1-50df-41ce-bff8-e62a1dfda80c"",
        ""developers_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/developers"",
        ""managers_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/managers"",
        ""auditors_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/auditors"",
        ""apps_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/apps"",
        ""routes_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/routes"",
        ""domains_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/domains"",
        ""service_instances_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/service_instances"",
        ""app_events_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/app_events"",
        ""events_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/events"",
        ""security_groups_url"": ""/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/security_groups""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpacesForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpacesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("a1195df8-9b53-4c9c-97ca-e1702296f9e1", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2111", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("5a6689b1-50df-41ce-bff8-e62a1dfda80c", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].AllowSsh), true);
            Assert.AreEqual("/v2/organizations/5a6689b1-50df-41ce-bff8-e62a1dfda80c", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/developers", TestUtil.ToTestableString(page[0].DevelopersUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/apps", TestUtil.ToTestableString(page[0].AppsUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/routes", TestUtil.ToTestableString(page[0].RoutesUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/service_instances", TestUtil.ToTestableString(page[0].ServiceInstancesUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/events", TestUtil.ToTestableString(page[0].EventsUrl), true);
            Assert.AreEqual("/v2/spaces/a1195df8-9b53-4c9c-97ca-e1702296f9e1/security_groups", TestUtil.ToTestableString(page[0].SecurityGroupsUrl), true);
        }

        [TestMethod]
        public void TestAssociateManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""2524cee8-2a5a-4ea3-9df6-68a52bc0b053"",
    ""url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053"",
    ""created_at"": ""2015-07-29T12:47:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2088"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""be29179c-3add-4345-a9c1-eab675934075"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/be29179c-3add-4345-a9c1-eab675934075"",
    ""spaces_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/spaces"",
    ""domains_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/domains"",
    ""private_domains_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/private_domains"",
    ""users_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/users"",
    ""managers_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/managers"",
    ""billing_managers_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/billing_managers"",
    ""auditors_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/auditors"",
    ""app_events_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/space_quota_definitions""
  }
}";

            AssociateManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateManagerWithOrganizationResponse>(json);

            Assert.AreEqual("2524cee8-2a5a-4ea3-9df6-68a52bc0b053", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2088", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("be29179c-3add-4345-a9c1-eab675934075", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/be29179c-3add-4345-a9c1-eab675934075", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/2524cee8-2a5a-4ea3-9df6-68a52bc0b053/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemoveAuditorFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""b493a0b9-abe8-46d5-b3a3-26f094e122bf"",
    ""url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2133"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""ef62a05e-9e61-4ccc-8fd9-e3656f448cc8"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/ef62a05e-9e61-4ccc-8fd9-e3656f448cc8"",
    ""spaces_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/spaces"",
    ""domains_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/domains"",
    ""private_domains_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/private_domains"",
    ""users_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/users"",
    ""managers_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/managers"",
    ""billing_managers_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/billing_managers"",
    ""auditors_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/auditors"",
    ""app_events_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/space_quota_definitions""
  }
}";

            RemoveAuditorFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveAuditorFromOrganizationResponse>(json);

            Assert.AreEqual("b493a0b9-abe8-46d5-b3a3-26f094e122bf", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2133", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("ef62a05e-9e61-4ccc-8fd9-e3656f448cc8", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/ef62a05e-9e61-4ccc-8fd9-e3656f448cc8", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/b493a0b9-abe8-46d5-b3a3-26f094e122bf/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingRolesOfAllUsersInOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 2,
  ""prev_url"": null,
  ""next_url"": ""/v2/organizations/d4db2587-3123-4821-a9ab-755cdb1c23d0/user_roles?order-direction=asc=2=1"",
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-364"",
        ""url"": ""/v2/users/uaa-id-364"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": 0,
        ""active"": 0,
        ""default_space_guid"": null,
        ""username"": ""everything@example.com"",
        ""organization_roles"": [
          ""org_user"",
          ""org_manager"",
          ""org_auditor"",
          ""billing_manager""
        ],
        ""spaces_url"": ""/v2/users/uaa-id-364/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-364/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-364/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-364/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-364/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-364/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-364/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<RetrievingRolesOfAllUsersInOrganizationResponse> page = Utilities.DeserializePage<RetrievingRolesOfAllUsersInOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("/v2/organizations/d4db2587-3123-4821-a9ab-755cdb1c23d0/user_roles?order-direction=asc=2=1", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-364", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-364", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("0", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("everything@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-364/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-364/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-364/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-364/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-364/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-364/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-364/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllSpaceQuotaDefinitionsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""c76ec65e-b841-4552-b524-1a4ac5421c87"",
        ""url"": ""/v2/space_quota_definitions/c76ec65e-b841-4552-b524-1a4ac5421c87"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""name-2114"",
        ""organization_guid"": ""f100f99f-1cb9-4259-976c-d02973c615e0"",
        ""non_basic_services_allowed"": true,
        ""total_services"": 60,
        ""total_routes"": 1000,
        ""memory_limit"": 20480,
        ""instance_memory_limit"": -1,
        ""organization_url"": ""/v2/organizations/f100f99f-1cb9-4259-976c-d02973c615e0"",
        ""spaces_url"": ""/v2/space_quota_definitions/c76ec65e-b841-4552-b524-1a4ac5421c87/spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllSpaceQuotaDefinitionsForOrganizationResponse> page = Utilities.DeserializePage<ListAllSpaceQuotaDefinitionsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("c76ec65e-b841-4552-b524-1a4ac5421c87", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/space_quota_definitions/c76ec65e-b841-4552-b524-1a4ac5421c87", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2114", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("f100f99f-1cb9-4259-976c-d02973c615e0", TestUtil.ToTestableString(page[0].OrganizationGuid), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].NonBasicServicesAllowed), true);
            Assert.AreEqual("60", TestUtil.ToTestableString(page[0].TotalServices), true);
            Assert.AreEqual("1000", TestUtil.ToTestableString(page[0].TotalRoutes), true);
            Assert.AreEqual("20480", TestUtil.ToTestableString(page[0].MemoryLimit), true);
            Assert.AreEqual("-1", TestUtil.ToTestableString(page[0].InstanceMemoryLimit), true);
            Assert.AreEqual("/v2/organizations/f100f99f-1cb9-4259-976c-d02973c615e0", TestUtil.ToTestableString(page[0].OrganizationUrl), true);
            Assert.AreEqual("/v2/space_quota_definitions/c76ec65e-b841-4552-b524-1a4ac5421c87/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
        }

        [TestMethod]
        public void TestRemoveUserFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""410ce04f-501f-42d3-b097-7e8f574af194"",
    ""url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2103"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""bec7e5c8-948c-4acd-bc80-c0a61e43064f"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/bec7e5c8-948c-4acd-bc80-c0a61e43064f"",
    ""spaces_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/spaces"",
    ""domains_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/domains"",
    ""private_domains_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/private_domains"",
    ""users_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/users"",
    ""managers_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/managers"",
    ""billing_managers_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/billing_managers"",
    ""auditors_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/auditors"",
    ""app_events_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/space_quota_definitions""
  }
}";

            RemoveUserFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveUserFromOrganizationResponse>(json);

            Assert.AreEqual("410ce04f-501f-42d3-b097-7e8f574af194", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2103", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("bec7e5c8-948c-4acd-bc80-c0a61e43064f", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/bec7e5c8-948c-4acd-bc80-c0a61e43064f", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/410ce04f-501f-42d3-b097-7e8f574af194/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateAuditorWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""754a5a0b-668d-4b51-93d9-8cd54444f506"",
    ""url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2135"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""11c7d5a7-a8f6-444a-a844-202788a6831f"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/11c7d5a7-a8f6-444a-a844-202788a6831f"",
    ""spaces_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/spaces"",
    ""domains_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/domains"",
    ""private_domains_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/private_domains"",
    ""users_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/users"",
    ""managers_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/managers"",
    ""billing_managers_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/billing_managers"",
    ""auditors_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/auditors"",
    ""app_events_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/space_quota_definitions""
  }
}";

            AssociateAuditorWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateAuditorWithOrganizationResponse>(json);

            Assert.AreEqual("754a5a0b-668d-4b51-93d9-8cd54444f506", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2135", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("11c7d5a7-a8f6-444a-a844-202788a6831f", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/11c7d5a7-a8f6-444a-a844-202788a6831f", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/754a5a0b-668d-4b51-93d9-8cd54444f506/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrieveOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""644b3d3d-005b-4719-a65c-2ddaf3a2686e"",
    ""url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2142"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""03e796c8-8d16-4f55-b938-e6d6b33042b5"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/03e796c8-8d16-4f55-b938-e6d6b33042b5"",
    ""spaces_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/spaces"",
    ""domains_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/domains"",
    ""private_domains_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/private_domains"",
    ""users_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/users"",
    ""managers_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/managers"",
    ""billing_managers_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/billing_managers"",
    ""auditors_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/auditors"",
    ""app_events_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/space_quota_definitions""
  }
}";

            RetrieveOrganizationResponse obj = Utilities.DeserializeJson<RetrieveOrganizationResponse>(json);

            Assert.AreEqual("644b3d3d-005b-4719-a65c-2ddaf3a2686e", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2142", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("03e796c8-8d16-4f55-b938-e6d6b33042b5", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/03e796c8-8d16-4f55-b938-e6d6b33042b5", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/644b3d3d-005b-4719-a65c-2ddaf3a2686e/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateUserWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""d24c51cf-927f-4908-b316-1295d35b9087"",
    ""url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2105"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""3033225c-d8cd-4b23-95a9-f413b7f6b8ee"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/3033225c-d8cd-4b23-95a9-f413b7f6b8ee"",
    ""spaces_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/spaces"",
    ""domains_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/domains"",
    ""private_domains_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/private_domains"",
    ""users_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/users"",
    ""managers_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/managers"",
    ""billing_managers_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/billing_managers"",
    ""auditors_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/auditors"",
    ""app_events_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/space_quota_definitions""
  }
}";

            AssociateUserWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateUserWithOrganizationResponse>(json);

            Assert.AreEqual("d24c51cf-927f-4908-b316-1295d35b9087", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2105", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("3033225c-d8cd-4b23-95a9-f413b7f6b8ee", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/3033225c-d8cd-4b23-95a9-f413b7f6b8ee", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/d24c51cf-927f-4908-b316-1295d35b9087/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestUpdateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""8ea309a0-67b5-4279-a4ca-d76434bd0484"",
    ""url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": ""2015-07-29T12:47:29Z""
  },
  ""entity"": {
    ""name"": ""New Organization Name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""61b501c7-0b25-45f3-9f5d-cd723f3fde94"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/61b501c7-0b25-45f3-9f5d-cd723f3fde94"",
    ""spaces_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/spaces"",
    ""domains_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/domains"",
    ""private_domains_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/private_domains"",
    ""users_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/users"",
    ""managers_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/managers"",
    ""billing_managers_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/billing_managers"",
    ""auditors_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/auditors"",
    ""app_events_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/space_quota_definitions""
  }
}";

            UpdateOrganizationResponse obj = Utilities.DeserializeJson<UpdateOrganizationResponse>(json);

            Assert.AreEqual("8ea309a0-67b5-4279-a4ca-d76434bd0484", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("New Organization Name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("61b501c7-0b25-45f3-9f5d-cd723f3fde94", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/61b501c7-0b25-45f3-9f5d-cd723f3fde94", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/8ea309a0-67b5-4279-a4ca-d76434bd0484/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRemovePrivateDomainFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""07819614-7a51-4832-811b-f5ffacd62851"",
    ""url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2117"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""19c9e52a-a2ba-49c7-a6b3-664383090c1f"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/19c9e52a-a2ba-49c7-a6b3-664383090c1f"",
    ""spaces_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/spaces"",
    ""domains_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/domains"",
    ""private_domains_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/private_domains"",
    ""users_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/users"",
    ""managers_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/managers"",
    ""billing_managers_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/billing_managers"",
    ""auditors_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/auditors"",
    ""app_events_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/space_quota_definitions""
  }
}";

            RemovePrivateDomainFromOrganizationResponse obj = Utilities.DeserializeJson<RemovePrivateDomainFromOrganizationResponse>(json);

            Assert.AreEqual("07819614-7a51-4832-811b-f5ffacd62851", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2117", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("19c9e52a-a2ba-49c7-a6b3-664383090c1f", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/19c9e52a-a2ba-49c7-a6b3-664383090c1f", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/07819614-7a51-4832-811b-f5ffacd62851/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllOrganizationsResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""670702ab-b7e2-425b-92bd-f20954f3f0eb"",
        ""url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb"",
        ""created_at"": ""2015-07-29T12:47:17Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""the-system_domain-org-name"",
        ""billing_enabled"": false,
        ""quota_definition_guid"": ""f4e91257-5d6c-4844-9383-805b52982bb8"",
        ""status"": ""active"",
        ""quota_definition_url"": ""/v2/quota_definitions/f4e91257-5d6c-4844-9383-805b52982bb8"",
        ""spaces_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/spaces"",
        ""domains_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/domains"",
        ""private_domains_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/private_domains"",
        ""users_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/users"",
        ""managers_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/managers"",
        ""billing_managers_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/billing_managers"",
        ""auditors_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/auditors"",
        ""app_events_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/app_events"",
        ""space_quota_definitions_url"": ""/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/space_quota_definitions""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllOrganizationsResponse> page = Utilities.DeserializePage<ListAllOrganizationsResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("670702ab-b7e2-425b-92bd-f20954f3f0eb", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("the-system_domain-org-name", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].BillingEnabled), true);
            Assert.AreEqual("f4e91257-5d6c-4844-9383-805b52982bb8", TestUtil.ToTestableString(page[0].QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(page[0].Status), true);
            Assert.AreEqual("/v2/quota_definitions/f4e91257-5d6c-4844-9383-805b52982bb8", TestUtil.ToTestableString(page[0].QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/domains", TestUtil.ToTestableString(page[0].DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/private_domains", TestUtil.ToTestableString(page[0].PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/users", TestUtil.ToTestableString(page[0].UsersUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/managers", TestUtil.ToTestableString(page[0].ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/billing_managers", TestUtil.ToTestableString(page[0].BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/auditors", TestUtil.ToTestableString(page[0].AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/app_events", TestUtil.ToTestableString(page[0].AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/670702ab-b7e2-425b-92bd-f20954f3f0eb/space_quota_definitions", TestUtil.ToTestableString(page[0].SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllManagersForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 2,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""uaa-id-344"",
        ""url"": ""/v2/users/uaa-id-344"",
        ""created_at"": ""2015-07-29T12:47:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""username"": ""manager@example.com"",
        ""spaces_url"": ""/v2/users/uaa-id-344/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-344/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-344/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-344/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-344/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-344/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-344/audited_spaces""
      }
    },
    {
      ""metadata"": {
        ""guid"": ""uaa-id-345"",
        ""url"": ""/v2/users/uaa-id-345"",
        ""created_at"": ""2015-07-29T12:47:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""admin"": false,
        ""active"": false,
        ""default_space_guid"": null,
        ""spaces_url"": ""/v2/users/uaa-id-345/spaces"",
        ""organizations_url"": ""/v2/users/uaa-id-345/organizations"",
        ""managed_organizations_url"": ""/v2/users/uaa-id-345/managed_organizations"",
        ""billing_managed_organizations_url"": ""/v2/users/uaa-id-345/billing_managed_organizations"",
        ""audited_organizations_url"": ""/v2/users/uaa-id-345/audited_organizations"",
        ""managed_spaces_url"": ""/v2/users/uaa-id-345/managed_spaces"",
        ""audited_spaces_url"": ""/v2/users/uaa-id-345/audited_spaces""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllManagersForOrganizationResponse> page = Utilities.DeserializePage<ListAllManagersForOrganizationResponse>(json, null);

            Assert.AreEqual("2", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("uaa-id-344", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-344", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DefaultSpaceGuid), true);
            Assert.AreEqual("manager@example.com", TestUtil.ToTestableString(page[0].Username), true);
            Assert.AreEqual("/v2/users/uaa-id-344/spaces", TestUtil.ToTestableString(page[0].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/organizations", TestUtil.ToTestableString(page[0].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/managed_organizations", TestUtil.ToTestableString(page[0].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/billing_managed_organizations", TestUtil.ToTestableString(page[0].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/audited_organizations", TestUtil.ToTestableString(page[0].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/managed_spaces", TestUtil.ToTestableString(page[0].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-344/audited_spaces", TestUtil.ToTestableString(page[0].AuditedSpacesUrl), true);
            Assert.AreEqual("uaa-id-345", TestUtil.ToTestableString(page[1].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/users/uaa-id-345", TestUtil.ToTestableString(page[1].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(page[1].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Admin), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[1].Active), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DefaultSpaceGuid), true);
            Assert.AreEqual("/v2/users/uaa-id-345/spaces", TestUtil.ToTestableString(page[1].SpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/organizations", TestUtil.ToTestableString(page[1].OrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/managed_organizations", TestUtil.ToTestableString(page[1].ManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/billing_managed_organizations", TestUtil.ToTestableString(page[1].BillingManagedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/audited_organizations", TestUtil.ToTestableString(page[1].AuditedOrganizationsUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/managed_spaces", TestUtil.ToTestableString(page[1].ManagedSpacesUrl), true);
            Assert.AreEqual("/v2/users/uaa-id-345/audited_spaces", TestUtil.ToTestableString(page[1].AuditedSpacesUrl), true);
        }

        [TestMethod]
        public void TestListAllServicesForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""268a3c5d-bf5f-4aa4-a35f-b9b9d510f1a3"",
        ""url"": ""/v2/services/268a3c5d-bf5f-4aa4-a35f-b9b9d510f1a3"",
        ""created_at"": ""2015-07-29T12:47:28Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""label"": ""label-66"",
        ""provider"": null,
        ""url"": null,
        ""description"": ""desc-198"",
        ""long_description"": null,
        ""version"": null,
        ""info_url"": null,
        ""active"": true,
        ""bindable"": true,
        ""unique_id"": ""2f692ccc-6ab2-407c-9e0a-295a177dde25"",
        ""extra"": null,
        ""tags"": [

        ],
        ""requires"": [

        ],
        ""documentation_url"": null,
        ""service_broker_guid"": ""53bdfd4e-7910-4048-a41e-82e7abbc142d"",
        ""plan_updateable"": false,
        ""service_plans_url"": ""/v2/services/268a3c5d-bf5f-4aa4-a35f-b9b9d510f1a3/service_plans""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllServicesForOrganizationResponse> page = Utilities.DeserializePage<ListAllServicesForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("268a3c5d-bf5f-4aa4-a35f-b9b9d510f1a3", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/services/268a3c5d-bf5f-4aa4-a35f-b9b9d510f1a3", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("label-66", TestUtil.ToTestableString(page[0].Label), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Provider), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Url), true);
            Assert.AreEqual("desc-198", TestUtil.ToTestableString(page[0].Description), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].LongDescription), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Version), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].InfoUrl), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Active), true);
            Assert.AreEqual("true", TestUtil.ToTestableString(page[0].Bindable), true);
            Assert.AreEqual("2f692ccc-6ab2-407c-9e0a-295a177dde25", TestUtil.ToTestableString(page[0].UniqueId), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Extra), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DocumentationUrl), true);
            Assert.AreEqual("53bdfd4e-7910-4048-a41e-82e7abbc142d", TestUtil.ToTestableString(page[0].ServiceBrokerGuid), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(page[0].PlanUpdateable), true);
            Assert.AreEqual("/v2/services/268a3c5d-bf5f-4aa4-a35f-b9b9d510f1a3/service_plans", TestUtil.ToTestableString(page[0].ServicePlansUrl), true);
        }

        [TestMethod]
        public void TestRemoveBillingManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""5e27237c-9fce-457d-814a-078f5ab278f7"",
    ""url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2097"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""d2bead68-57ee-49e0-b64a-36409c9f7ad2"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/d2bead68-57ee-49e0-b64a-36409c9f7ad2"",
    ""spaces_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/spaces"",
    ""domains_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/domains"",
    ""private_domains_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/private_domains"",
    ""users_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/users"",
    ""managers_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/managers"",
    ""billing_managers_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/billing_managers"",
    ""auditors_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/auditors"",
    ""app_events_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/space_quota_definitions""
  }
}";

            RemoveBillingManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveBillingManagerFromOrganizationResponse>(json);

            Assert.AreEqual("5e27237c-9fce-457d-814a-078f5ab278f7", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2097", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("d2bead68-57ee-49e0-b64a-36409c9f7ad2", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/d2bead68-57ee-49e0-b64a-36409c9f7ad2", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/5e27237c-9fce-457d-814a-078f5ab278f7/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestRetrievingOrganizationMemoryUsageResponse()
        {
            string json = @"{""memory_usage_in_mb"":0}";

            RetrievingOrganizationMemoryUsageResponse obj = Utilities.DeserializeJson<RetrievingOrganizationMemoryUsageResponse>(json);

            Assert.AreEqual("0", TestUtil.ToTestableString(obj.MemoryUsageInMb), true);
        }

        [TestMethod]
        public void TestCreateOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""80a34c11-125d-42e2-933e-8bfc672440c8"",
    ""url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""my-org-name"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""8eb423aa-1e8e-45e6-94ab-c195d489b9d0"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/8eb423aa-1e8e-45e6-94ab-c195d489b9d0"",
    ""spaces_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/spaces"",
    ""domains_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/domains"",
    ""private_domains_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/private_domains"",
    ""users_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/users"",
    ""managers_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/managers"",
    ""billing_managers_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/billing_managers"",
    ""auditors_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/auditors"",
    ""app_events_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/space_quota_definitions""
  }
}";

            CreateOrganizationResponse obj = Utilities.DeserializeJson<CreateOrganizationResponse>(json);

            Assert.AreEqual("80a34c11-125d-42e2-933e-8bfc672440c8", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("my-org-name", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("8eb423aa-1e8e-45e6-94ab-c195d489b9d0", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/8eb423aa-1e8e-45e6-94ab-c195d489b9d0", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/80a34c11-125d-42e2-933e-8bfc672440c8/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociatePrivateDomainWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""937a5e47-54c8-4a26-9d8f-c3bb37a240ef"",
    ""url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2121"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""94675f08-3a2f-40ec-9c47-5d45673ade8e"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/94675f08-3a2f-40ec-9c47-5d45673ade8e"",
    ""spaces_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/spaces"",
    ""domains_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/domains"",
    ""private_domains_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/private_domains"",
    ""users_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/users"",
    ""managers_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/managers"",
    ""billing_managers_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/billing_managers"",
    ""auditors_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/auditors"",
    ""app_events_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/space_quota_definitions""
  }
}";

            AssociatePrivateDomainWithOrganizationResponse obj = Utilities.DeserializeJson<AssociatePrivateDomainWithOrganizationResponse>(json);

            Assert.AreEqual("937a5e47-54c8-4a26-9d8f-c3bb37a240ef", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2121", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("94675f08-3a2f-40ec-9c47-5d45673ade8e", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/94675f08-3a2f-40ec-9c47-5d45673ade8e", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/937a5e47-54c8-4a26-9d8f-c3bb37a240ef/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestListAllPrivateDomainsForOrganizationResponse()
        {
            string json = @"{
  ""total_results"": 1,
  ""total_pages"": 1,
  ""prev_url"": null,
  ""next_url"": null,
  ""resources"": [
    {
      ""metadata"": {
        ""guid"": ""7e19ae00-7204-4ece-91e8-30f61221859d"",
        ""url"": ""/v2/private_domains/7e19ae00-7204-4ece-91e8-30f61221859d"",
        ""created_at"": ""2015-07-29T12:47:29Z"",
        ""updated_at"": null
      },
      ""entity"": {
        ""name"": ""domain-60.example.com"",
        ""owning_organization_guid"": ""a84f23db-9160-4ddb-8a2f-0206000313a0"",
        ""owning_organization_url"": ""/v2/organizations/a84f23db-9160-4ddb-8a2f-0206000313a0"",
        ""shared_organizations_url"": ""/v2/private_domains/7e19ae00-7204-4ece-91e8-30f61221859d/shared_organizations""
      }
    }
  ]
}";

            PagedResponseCollection<ListAllPrivateDomainsForOrganizationResponse> page = Utilities.DeserializePage<ListAllPrivateDomainsForOrganizationResponse>(json, null);

            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalResults), true);
            Assert.AreEqual("1", TestUtil.ToTestableString(page.Properties.TotalPages), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.PreviousUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page.Properties.NextUrl), true);
            Assert.AreEqual("7e19ae00-7204-4ece-91e8-30f61221859d", TestUtil.ToTestableString(page[0].EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/private_domains/7e19ae00-7204-4ece-91e8-30f61221859d", TestUtil.ToTestableString(page[0].EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(page[0].EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("domain-60.example.com", TestUtil.ToTestableString(page[0].Name), true);
            Assert.AreEqual("a84f23db-9160-4ddb-8a2f-0206000313a0", TestUtil.ToTestableString(page[0].OwningOrganizationGuid), true);
            Assert.AreEqual("/v2/organizations/a84f23db-9160-4ddb-8a2f-0206000313a0", TestUtil.ToTestableString(page[0].OwningOrganizationUrl), true);
            Assert.AreEqual("/v2/private_domains/7e19ae00-7204-4ece-91e8-30f61221859d/shared_organizations", TestUtil.ToTestableString(page[0].SharedOrganizationsUrl), true);
        }

        [TestMethod]
        public void TestGetOrganizationSummaryResponse()
        {
            string json = @"{""guid"":""479148a0-7cf4-4cb1-b477-e0a339111cea"",""name"":""name-657"",""status"":""active"",""spaces"":[{""guid"":""f8b8cb3c-dda2-42e3-a7dc-bbdea6979bb2"",""name"":""name-659"",""service_count"":0,""app_count"":0,""mem_dev_total"":0,""mem_prod_total"":0}]}";

            GetOrganizationSummaryResponse obj = Utilities.DeserializeJson<GetOrganizationSummaryResponse>(json);

            Assert.AreEqual("479148a0-7cf4-4cb1-b477-e0a339111cea", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("name-657", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
        }

        [TestMethod]
        public void TestRemoveManagerFromOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""bb02dca6-913a-40f7-9711-2d813777fc1c"",
    ""url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c"",
    ""created_at"": ""2015-07-29T12:47:28Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2086"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""08e4f6ff-b2bd-43e0-ae83-114fb59bcb2a"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/08e4f6ff-b2bd-43e0-ae83-114fb59bcb2a"",
    ""spaces_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/spaces"",
    ""domains_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/domains"",
    ""private_domains_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/private_domains"",
    ""users_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/users"",
    ""managers_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/managers"",
    ""billing_managers_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/billing_managers"",
    ""auditors_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/auditors"",
    ""app_events_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/space_quota_definitions""
  }
}";

            RemoveManagerFromOrganizationResponse obj = Utilities.DeserializeJson<RemoveManagerFromOrganizationResponse>(json);

            Assert.AreEqual("bb02dca6-913a-40f7-9711-2d813777fc1c", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:28Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2086", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("08e4f6ff-b2bd-43e0-ae83-114fb59bcb2a", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/08e4f6ff-b2bd-43e0-ae83-114fb59bcb2a", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/bb02dca6-913a-40f7-9711-2d813777fc1c/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }

        [TestMethod]
        public void TestAssociateBillingManagerWithOrganizationResponse()
        {
            string json = @"{
  ""metadata"": {
    ""guid"": ""10dcda84-db81-46d7-a8e6-c8f66e90eb19"",
    ""url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19"",
    ""created_at"": ""2015-07-29T12:47:29Z"",
    ""updated_at"": null
  },
  ""entity"": {
    ""name"": ""name-2099"",
    ""billing_enabled"": false,
    ""quota_definition_guid"": ""c20a5723-bbf0-4133-8c3f-350093f11794"",
    ""status"": ""active"",
    ""quota_definition_url"": ""/v2/quota_definitions/c20a5723-bbf0-4133-8c3f-350093f11794"",
    ""spaces_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/spaces"",
    ""domains_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/domains"",
    ""private_domains_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/private_domains"",
    ""users_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/users"",
    ""managers_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/managers"",
    ""billing_managers_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/billing_managers"",
    ""auditors_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/auditors"",
    ""app_events_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/app_events"",
    ""space_quota_definitions_url"": ""/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/space_quota_definitions""
  }
}";

            AssociateBillingManagerWithOrganizationResponse obj = Utilities.DeserializeJson<AssociateBillingManagerWithOrganizationResponse>(json);

            Assert.AreEqual("10dcda84-db81-46d7-a8e6-c8f66e90eb19", TestUtil.ToTestableString(obj.EntityMetadata.Guid), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19", TestUtil.ToTestableString(obj.EntityMetadata.Url), true);
            Assert.AreEqual("2015-07-29T12:47:29Z", TestUtil.ToTestableString(obj.EntityMetadata.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.EntityMetadata.UpdatedAt), true);
            Assert.AreEqual("name-2099", TestUtil.ToTestableString(obj.Name), true);
            Assert.AreEqual("false", TestUtil.ToTestableString(obj.BillingEnabled), true);
            Assert.AreEqual("c20a5723-bbf0-4133-8c3f-350093f11794", TestUtil.ToTestableString(obj.QuotaDefinitionGuid), true);
            Assert.AreEqual("active", TestUtil.ToTestableString(obj.Status), true);
            Assert.AreEqual("/v2/quota_definitions/c20a5723-bbf0-4133-8c3f-350093f11794", TestUtil.ToTestableString(obj.QuotaDefinitionUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/spaces", TestUtil.ToTestableString(obj.SpacesUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/domains", TestUtil.ToTestableString(obj.DomainsUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/private_domains", TestUtil.ToTestableString(obj.PrivateDomainsUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/users", TestUtil.ToTestableString(obj.UsersUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/managers", TestUtil.ToTestableString(obj.ManagersUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/billing_managers", TestUtil.ToTestableString(obj.BillingManagersUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/auditors", TestUtil.ToTestableString(obj.AuditorsUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/app_events", TestUtil.ToTestableString(obj.AppEventsUrl), true);
            Assert.AreEqual("/v2/organizations/10dcda84-db81-46d7-a8e6-c8f66e90eb19/space_quota_definitions", TestUtil.ToTestableString(obj.SpaceQuotaDefinitionsUrl), true);
        }
    }
}
