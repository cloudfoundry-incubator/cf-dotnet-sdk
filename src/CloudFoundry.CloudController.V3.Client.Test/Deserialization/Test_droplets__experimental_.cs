//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client;
using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.CSharp;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System.CodeDom.Compiler;

namespace CloudFoundry.CloudController.V3.Test.Deserialization
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class DropletsExperimentalTest
    {


        [TestMethod]
        public void TestGetDropletResponse()
        {
            string json = @"{
  ""guid"": ""guid-0a37032b-9fe4-4431-9f46-393b8cfee80f"",
  ""state"": ""STAGING"",
  ""hash"": null,
  ""buildpack_git_url"": null,
  ""failure_reason"": ""example failure reason"",
  ""detected_start_command"": ""run -c all_the_things"",
  ""procfile"": null,
  ""environment_variables"": {
    ""cloud"": ""foundry""
  },
  ""created_at"": ""2016-02-05T12:14:54Z"",
  ""updated_at"": null,
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/droplets/guid-0a37032b-9fe4-4431-9f46-393b8cfee80f""
    },
    ""package"": {
      ""href"": ""/v3/packages/guid-bbec4c6e-e891-4fc4-b98b-9c77cf979d9b""
    },
    ""app"": {
      ""href"": ""/v3/apps/guid-7a831a9d-18de-4d33-bb68-dadcee54efcc""
    }
  }
}";

            GetDropletResponse obj = Utilities.DeserializeJson<GetDropletResponse>(json);

            Assert.AreEqual("guid-0a37032b-9fe4-4431-9f46-393b8cfee80f", TestUtil.ToTestableString(obj.Guid), true);
            Assert.AreEqual("STAGING", TestUtil.ToTestableString(obj.State), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Hash), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.BuildpackGitUrl), true);
            Assert.AreEqual("example failure reason", TestUtil.ToTestableString(obj.FailureReason), true);
            Assert.AreEqual("run -c all_the_things", TestUtil.ToTestableString(obj.DetectedStartCommand), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.Procfile), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(obj.CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);
        }

        [TestMethod]
        public void TestListAllDropletsResponse()
        {
            string json = @"{
  ""pagination"": {
    ""total_results"": 2,
    ""first"": {
      ""href"": ""/v3/droplets?page=1=2""
    },
    ""last"": {
      ""href"": ""/v3/droplets?page=1=2""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""guid-e28847bf-6ecf-4c8f-9189-8411c5abf8cb"",
      ""state"": ""STAGING"",
      ""hash"": null,
      ""buildpack_git_url"": null,
      ""failure_reason"": null,
      ""detected_start_command"": null,
      ""procfile"": null,
      ""environment_variables"": {
        ""yuu"": ""huuu""
      },
      ""created_at"": ""2016-02-05T12:14:54Z"",
      ""updated_at"": null,
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/droplets/guid-e28847bf-6ecf-4c8f-9189-8411c5abf8cb""
        },
        ""package"": {
          ""href"": ""/v3/packages/guid-0651eb94-b2c1-41a0-b2e0-9db561ba262c""
        },
        ""app"": {
          ""href"": ""/v3/apps/guid-7728135b-62d0-4cb7-bc4d-6542d3edf1d1""
        },
        ""buildpack"": {
          ""href"": ""/v2/buildpacks/d77753bf-f098-49c4-ab0f-1868fc57a2ea""
        }
      }
    },
    {
      ""guid"": ""guid-59ec52b4-6aed-4fc3-8394-e5f369cad513"",
      ""state"": ""STAGED"",
      ""hash"": ""my-hash"",
      ""buildpack_git_url"": ""https://github.com/cloudfoundry/my-buildpack.git"",
      ""failure_reason"": null,
      ""detected_start_command"": null,
      ""procfile"": null,
      ""environment_variables"": {

      },
      ""created_at"": ""2016-02-05T12:14:54Z"",
      ""updated_at"": null,
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/droplets/guid-59ec52b4-6aed-4fc3-8394-e5f369cad513""
        },
        ""package"": {
          ""href"": ""/v3/packages/guid-0651eb94-b2c1-41a0-b2e0-9db561ba262c""
        },
        ""app"": {
          ""href"": ""/v3/apps/guid-7728135b-62d0-4cb7-bc4d-6542d3edf1d1""
        }
      }
    }
  ]
}";

            PagedResponseCollection<ListAllDropletsResponse> page = Utilities.DeserializePage<ListAllDropletsResponse>(json, null);

            Assert.AreEqual("guid-e28847bf-6ecf-4c8f-9189-8411c5abf8cb", TestUtil.ToTestableString(page[0].Guid), true);
            Assert.AreEqual("STAGING", TestUtil.ToTestableString(page[0].State), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Hash), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].BuildpackGitUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].FailureReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].DetectedStartCommand), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].Procfile), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(page[0].CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[0].UpdatedAt), true);
            Assert.AreEqual("guid-59ec52b4-6aed-4fc3-8394-e5f369cad513", TestUtil.ToTestableString(page[1].Guid), true);
            Assert.AreEqual("STAGED", TestUtil.ToTestableString(page[1].State), true);
            Assert.AreEqual("my-hash", TestUtil.ToTestableString(page[1].Hash), true);
            Assert.AreEqual("https://github.com/cloudfoundry/my-buildpack.git", TestUtil.ToTestableString(page[1].BuildpackGitUrl), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].FailureReason), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].DetectedStartCommand), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].Procfile), true);
            Assert.AreEqual("2016-02-05T12:14:54Z", TestUtil.ToTestableString(page[1].CreatedAt), true);
            Assert.AreEqual("", TestUtil.ToTestableString(page[1].UpdatedAt), true);
        }
    }
}
