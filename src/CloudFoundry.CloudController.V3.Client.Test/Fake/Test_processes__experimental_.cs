//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ProcessesExperimentalEndpoint
{
        [TestMethod]
        public void ListAllProcessesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 3,
    ""first"": {
      ""href"": ""/v3/processes?page=1=2""
    },
    ""last"": {
      ""href"": ""/v3/processes?page=2=2""
    },
    ""next"": {
      ""href"": ""/v3/processes?page=2=2""
    },
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""ca0c0aba-830a-46fe-8d19-08009ce92e7e"",
      ""type"": ""web"",
      ""command"": null,
      ""instances"": 1,
      ""created_at"": ""2015-07-29T12:47:17Z"",
      ""updated_at"": ""2015-07-29T12:47:17Z"",
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/processes/ca0c0aba-830a-46fe-8d19-08009ce92e7e""
        },
        ""app"": {
          ""href"": ""/v3/apps/guid-64aabee0-4bb0-4fd0-9abc-da5834e65ecc""
        },
        ""space"": {
          ""href"": ""/v2/spaces/7f22b2c9-1a60-4d83-bc23-6786377137bb""
        }
      }
    },
    {
      ""guid"": ""78256f69-166f-4609-8cad-bd2392a90930"",
      ""type"": ""web"",
      ""command"": null,
      ""instances"": 1,
      ""created_at"": ""2015-07-29T12:47:17Z"",
      ""updated_at"": ""2015-07-29T12:47:17Z"",
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/processes/78256f69-166f-4609-8cad-bd2392a90930""
        },
        ""app"": {
          ""href"": ""/v3/apps/""
        },
        ""space"": {
          ""href"": ""/v2/spaces/7f22b2c9-1a60-4d83-bc23-6786377137bb""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ProcessesExperimental.ListAllProcesses().Result;

                Assert.AreEqual("ca0c0aba-830a-46fe-8d19-08009ce92e7e", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[0].Instances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("78256f69-166f-4609-8cad-bd2392a90930", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[1].Instances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void UpdateProcessTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""c1c35fea-9360-4802-aac6-0b3ac72b63c6"",
  ""type"": ""web"",
  ""command"": ""X"",
  ""instances"": 1,
  ""created_at"": ""2015-07-29T12:47:17Z"",
  ""updated_at"": ""2015-07-29T12:47:17Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/c1c35fea-9360-4802-aac6-0b3ac72b63c6""
    },
    ""app"": {
      ""href"": ""/v3/apps/""
    },
    ""space"": {
      ""href"": ""/v2/spaces/98c1916b-adf4-4e35-b564-dbc803dc07fa""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateProcessRequest value = new UpdateProcessRequest();


                var obj = cfClient.ProcessesExperimental.UpdateProcess(guid, value).Result;


                Assert.AreEqual("c1c35fea-9360-4802-aac6-0b3ac72b63c6", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("X", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetProcessTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""e6633d19-27dd-4452-90f5-21151625fca8"",
  ""type"": ""web"",
  ""command"": null,
  ""instances"": 1,
  ""created_at"": ""2015-07-29T12:47:17Z"",
  ""updated_at"": ""2015-07-29T12:47:17Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/e6633d19-27dd-4452-90f5-21151625fca8""
    },
    ""app"": {
      ""href"": ""/v3/apps/""
    },
    ""space"": {
      ""href"": ""/v2/spaces/523eadeb-5b37-4e49-9571-40f1a72ed2f3""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ProcessesExperimental.GetProcess(guid).Result;


                Assert.AreEqual("e6633d19-27dd-4452-90f5-21151625fca8", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ScalingProcessTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""bd1fcf8a-6c20-41e6-abe9-5702ea1f6223"",
  ""type"": ""web"",
  ""command"": null,
  ""instances"": 3,
  ""created_at"": ""2015-07-29T12:47:17Z"",
  ""updated_at"": ""2015-07-29T12:47:17Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/bd1fcf8a-6c20-41e6-abe9-5702ea1f6223""
    },
    ""app"": {
      ""href"": ""/v3/apps/guid-6555c5c8-35d4-4352-a878-ca910b3197b5""
    },
    ""space"": {
      ""href"": ""/v2/spaces/78569c67-de3d-4022-94e9-6a7c345b4280""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                ScalingProcessRequest value = new ScalingProcessRequest();


                var obj = cfClient.ProcessesExperimental.ScalingProcess(guid, value).Result;


                Assert.AreEqual("bd1fcf8a-6c20-41e6-abe9-5702ea1f6223", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

    }
}