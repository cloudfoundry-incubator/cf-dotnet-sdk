//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class ProcessesExperimentalEndpoint
{
        [TestMethod]
        public void UpdateProcessTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""b8423f09-c9cb-4ecf-aa7a-0836b92b9cb1"",
  ""type"": ""web"",
  ""command"": ""X"",
  ""instances"": 1,
  ""created_at"": ""2016-02-05T12:14:38Z"",
  ""updated_at"": ""2016-02-05T12:14:38Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/b8423f09-c9cb-4ecf-aa7a-0836b92b9cb1""
    },
    ""scale"": {
      ""href"": ""/v3/processes/b8423f09-c9cb-4ecf-aa7a-0836b92b9cb1/scale"",
      ""method"": ""PUT""
    },
    ""app"": {
      ""href"": ""/v3/apps/""
    },
    ""space"": {
      ""href"": ""/v2/spaces/dc81d17f-a8f2-41a3-b842-352844ad6206""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateProcessRequest value = new UpdateProcessRequest();


                var obj = cfClient.ProcessesExperimental.UpdateProcess(guid, value).Result;


                Assert.AreEqual("b8423f09-c9cb-4ecf-aa7a-0836b92b9cb1", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("X", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2016-02-05T12:14:38Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-02-05T12:14:38Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ListAllProcessesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 3,
    ""first"": {
      ""href"": ""/v3/processes?page=1=2""
    },
    ""last"": {
      ""href"": ""/v3/processes?page=2=2""
    },
    ""next"": {
      ""href"": ""/v3/processes?page=2=2""
    },
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""2df450dc-1539-48e2-a2db-771c9bcadf9a"",
      ""type"": ""web"",
      ""command"": null,
      ""instances"": 1,
      ""created_at"": ""2016-02-05T12:14:38Z"",
      ""updated_at"": ""2016-02-05T12:14:38Z"",
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/processes/2df450dc-1539-48e2-a2db-771c9bcadf9a""
        },
        ""scale"": {
          ""href"": ""/v3/processes/2df450dc-1539-48e2-a2db-771c9bcadf9a/scale"",
          ""method"": ""PUT""
        },
        ""app"": {
          ""href"": ""/v3/apps/guid-67372c84-78b4-4e2c-a669-415f84968933""
        },
        ""space"": {
          ""href"": ""/v2/spaces/9ca9e1f3-90e8-489a-afc2-881d75ed0e6c""
        }
      }
    },
    {
      ""guid"": ""e162326b-e9a6-4807-a80f-a6b3d8c6dfb3"",
      ""type"": ""web"",
      ""command"": null,
      ""instances"": 1,
      ""created_at"": ""2016-02-05T12:14:39Z"",
      ""updated_at"": ""2016-02-05T12:14:39Z"",
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/processes/e162326b-e9a6-4807-a80f-a6b3d8c6dfb3""
        },
        ""scale"": {
          ""href"": ""/v3/processes/e162326b-e9a6-4807-a80f-a6b3d8c6dfb3/scale"",
          ""method"": ""PUT""
        },
        ""app"": {
          ""href"": ""/v3/apps/""
        },
        ""space"": {
          ""href"": ""/v2/spaces/9ca9e1f3-90e8-489a-afc2-881d75ed0e6c""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.ProcessesExperimental.ListAllProcesses().Result;

                Assert.AreEqual("2df450dc-1539-48e2-a2db-771c9bcadf9a", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[0].Instances), true);
                Assert.AreEqual("2016-02-05T12:14:38Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2016-02-05T12:14:38Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("e162326b-e9a6-4807-a80f-a6b3d8c6dfb3", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj[1].Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[1].Instances), true);
                Assert.AreEqual("2016-02-05T12:14:39Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("2016-02-05T12:14:39Z", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ScalingProcessTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""b84b24c2-f44e-4406-ae3a-de54f704eff9"",
  ""type"": ""web"",
  ""command"": null,
  ""instances"": 3,
  ""created_at"": ""2016-02-05T12:14:39Z"",
  ""updated_at"": ""2016-02-05T12:14:39Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/b84b24c2-f44e-4406-ae3a-de54f704eff9""
    },
    ""scale"": {
      ""href"": ""/v3/processes/b84b24c2-f44e-4406-ae3a-de54f704eff9/scale"",
      ""method"": ""PUT""
    },
    ""app"": {
      ""href"": ""/v3/apps/guid-b658ccd1-f934-423f-8080-36396c1790ca""
    },
    ""space"": {
      ""href"": ""/v2/spaces/10dacf49-9b1f-475c-a284-386f28338164""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                ScalingProcessRequest value = new ScalingProcessRequest();


                var obj = cfClient.ProcessesExperimental.ScalingProcess(guid, value).Result;


                Assert.AreEqual("b84b24c2-f44e-4406-ae3a-de54f704eff9", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2016-02-05T12:14:39Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-02-05T12:14:39Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetProcessTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""7b4b9bf1-c900-4a6a-b456-e5619dea33cc"",
  ""type"": ""web"",
  ""command"": null,
  ""instances"": 1,
  ""created_at"": ""2016-02-05T12:14:39Z"",
  ""updated_at"": ""2016-02-05T12:14:39Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/7b4b9bf1-c900-4a6a-b456-e5619dea33cc""
    },
    ""scale"": {
      ""href"": ""/v3/processes/7b4b9bf1-c900-4a6a-b456-e5619dea33cc/scale"",
      ""method"": ""PUT""
    },
    ""app"": {
      ""href"": ""/v3/apps/""
    },
    ""space"": {
      ""href"": ""/v2/spaces/a4b9b346-1067-4d6a-94fd-2e538ede5293""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.ProcessesExperimental.GetProcess(guid).Result;


                Assert.AreEqual("7b4b9bf1-c900-4a6a-b456-e5619dea33cc", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2016-02-05T12:14:39Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2016-02-05T12:14:39Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

    }
}