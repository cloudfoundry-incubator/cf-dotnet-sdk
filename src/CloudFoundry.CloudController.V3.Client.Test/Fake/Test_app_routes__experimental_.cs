//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppRoutesExperimentalEndpoint
{
        [TestMethod]
        public void ListRoutesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 2,
    ""first"": {
      ""href"": ""/v3/apps/guid-b89c5025-b718-42bf-b1d3-0beaa8cc6e9b/routes?page=1=50""
    },
    ""last"": {
      ""href"": ""/v3/apps/guid-b89c5025-b718-42bf-b1d3-0beaa8cc6e9b/routes?page=1=50""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""bfd1b1cd-0417-40a1-a4ac-a320dab0651b"",
      ""host"": ""host-5"",
      ""created_at"": ""2015-07-29T12:47:14Z"",
      ""updated_at"": null,
      ""_links"": {
        ""space"": {
          ""href"": ""/v2/spaces/b5ed4632-b140-40b9-968f-e6fe7de6f066""
        },
        ""domain"": {
          ""href"": ""/v2/domains/fbaf7b03-fbb3-4944-b359-2ac3796acbf2""
        }
      }
    },
    {
      ""guid"": ""88ceafe4-f700-40fa-934b-321a4b744861"",
      ""host"": ""host-6"",
      ""created_at"": ""2015-07-29T12:47:14Z"",
      ""updated_at"": null,
      ""_links"": {
        ""space"": {
          ""href"": ""/v2/spaces/b5ed4632-b140-40b9-968f-e6fe7de6f066""
        },
        ""domain"": {
          ""href"": ""/v2/domains/35e6fc16-8b90-4aaa-a075-f52b625e77e3""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppRoutesExperimental.ListRoutes(guid).Result;

                Assert.AreEqual("bfd1b1cd-0417-40a1-a4ac-a320dab0651b", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("host-5", TestUtil.ToTestableString(obj[0].Host), true);
                Assert.AreEqual("2015-07-29T12:47:14Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("88ceafe4-f700-40fa-934b-321a4b744861", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("host-6", TestUtil.ToTestableString(obj[1].Host), true);
                Assert.AreEqual("2015-07-29T12:47:14Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void UnmapRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UnmapRouteRequest value = new UnmapRouteRequest();


                cfClient.AppRoutesExperimental.UnmapRoute(guid, value).Wait();

            }
        }

        [TestMethod]
        public void MapRouteTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                MapRouteRequest value = new MapRouteRequest();


                cfClient.AppRoutesExperimental.MapRoute(guid, value).Wait();

            }
        }

    }
}