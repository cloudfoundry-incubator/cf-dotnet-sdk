//------------------------------------------------------------------------------
// <auto-generated>
  //     This code was generated by a tool.
  //
  //     Changes to this file may cause incorrect behavior and will be lost if
  //     the code is regenerated.
  // </auto-generated>
//------------------------------------------------------------------------------

//
// This source code was auto-generated by cf-sdk-builder
//

using CloudFoundry.CloudController.V3.Client.Data;
using Microsoft.QualityTools.Testing.Fakes;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.CodeDom.Compiler;
using System.Net;
using System.Threading.Tasks;

namespace CloudFoundry.CloudController.V3.Client.Test.Fake
{
    [TestClass]
    [GeneratedCodeAttribute("cf-sdk-builder", "1.0.0.0")]
    public class AppsExperimentalEndpoint
{
        [TestMethod]
        public void DeleteAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                clients.ExpectedStatusCode = (HttpStatusCode)204;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                cfClient.AppsExperimental.DeleteApp(guid).Wait();

            }
        }

        [TestMethod]
        public void ScalingProcessFromItsAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""c705cff7-dcdb-4929-ba75-f960af7bc630"",
  ""type"": ""web"",
  ""command"": null,
  ""instances"": 3,
  ""created_at"": ""2015-07-29T12:47:26Z"",
  ""updated_at"": ""2015-07-29T12:47:26Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/c705cff7-dcdb-4929-ba75-f960af7bc630""
    },
    ""app"": {
      ""href"": ""/v3/apps/guid-2eab8ccf-831e-418e-aa78-13e61e12a652""
    },
    ""space"": {
      ""href"": ""/v2/spaces/348a7991-d131-45bf-9843-063303c9955b""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                dynamic type = null;

                ScalingProcessFromItsAppRequest value = new ScalingProcessFromItsAppRequest();


                var obj = cfClient.AppsExperimental.ScalingProcessFromItsApp(guid, type, value).Result;


                Assert.AreEqual("c705cff7-dcdb-4929-ba75-f960af7bc630", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void AssignDropletAsAppsCurrentDropletTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""guid-60c71c34-ae4d-4af4-822d-2341ef33a176"",
  ""name"": ""name1"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 1,
  ""created_at"": ""2015-07-29T12:47:17Z"",
  ""updated_at"": ""2015-07-29T12:47:17Z"",
  ""environment_variables"": {

  },
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/apps/guid-60c71c34-ae4d-4af4-822d-2341ef33a176""
    },
    ""processes"": {
      ""href"": ""/v3/apps/guid-60c71c34-ae4d-4af4-822d-2341ef33a176/processes""
    },
    ""packages"": {
      ""href"": ""/v3/apps/guid-60c71c34-ae4d-4af4-822d-2341ef33a176/packages""
    },
    ""space"": {
      ""href"": ""/v2/spaces/a8255ea2-9a2d-4239-ad14-575588043073""
    },
    ""desired_droplet"": {
      ""href"": ""/v3/droplets/guid-e7da6c9e-2e7a-4360-becb-60d22bfdc093""
    },
    ""start"": {
      ""href"": ""/v3/apps/guid-60c71c34-ae4d-4af4-822d-2341ef33a176/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/guid-60c71c34-ae4d-4af4-822d-2341ef33a176/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/guid-60c71c34-ae4d-4af4-822d-2341ef33a176/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                AssignDropletAsAppsCurrentDropletRequest value = new AssignDropletAsAppsCurrentDropletRequest();


                var obj = cfClient.AppsExperimental.AssignDropletAsAppsCurrentDroplet(guid, value).Result;


                Assert.AreEqual("guid-60c71c34-ae4d-4af4-822d-2341ef33a176", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("name1", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetProcessFromAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""6c6989ee-4891-4174-9f24-f466f2edac0c"",
  ""type"": ""web"",
  ""command"": null,
  ""instances"": 1,
  ""created_at"": ""2015-07-29T12:47:26Z"",
  ""updated_at"": ""2015-07-29T12:47:26Z"",
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/processes/6c6989ee-4891-4174-9f24-f466f2edac0c""
    },
    ""app"": {
      ""href"": ""/v3/apps/guid-408fa5c1-ab83-4e88-8533-e1afcb24cb10""
    },
    ""space"": {
      ""href"": ""/v2/spaces/279a19ec-88ed-48f8-b1b1-ee55e64d4b7b""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                dynamic type = null;


                var obj = cfClient.AppsExperimental.GetProcessFromApp(guid, type).Result;


                Assert.AreEqual("6c6989ee-4891-4174-9f24-f466f2edac0c", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj.Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj.Instances), true);
                Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void StartingAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""guid-85753885-e670-4830-bbf0-c22f074b4bf3"",
  ""name"": ""original_name"",
  ""desired_state"": ""STARTED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2015-07-29T12:47:18Z"",
  ""updated_at"": ""2015-07-29T12:47:18Z"",
  ""environment_variables"": {

  },
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/apps/guid-85753885-e670-4830-bbf0-c22f074b4bf3""
    },
    ""processes"": {
      ""href"": ""/v3/apps/guid-85753885-e670-4830-bbf0-c22f074b4bf3/processes""
    },
    ""packages"": {
      ""href"": ""/v3/apps/guid-85753885-e670-4830-bbf0-c22f074b4bf3/packages""
    },
    ""space"": {
      ""href"": ""/v2/spaces/59ea5d52-0f63-42c8-8bfa-493990e8c98e""
    },
    ""desired_droplet"": {
      ""href"": ""/v3/droplets/guid-9d072a96-edba-4827-a5c5-1fe7aeec3995""
    },
    ""start"": {
      ""href"": ""/v3/apps/guid-85753885-e670-4830-bbf0-c22f074b4bf3/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/guid-85753885-e670-4830-bbf0-c22f074b4bf3/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/guid-85753885-e670-4830-bbf0-c22f074b4bf3/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                StartingAppRequest value = null;


                var obj = cfClient.AppsExperimental.StartingApp(guid, value).Result;


                Assert.AreEqual("guid-85753885-e670-4830-bbf0-c22f074b4bf3", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("original_name", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STARTED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2015-07-29T12:47:18Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:18Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ListAllAppsTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 3,
    ""first"": {
      ""href"": ""/v3/apps?order_by=created_at=desc=1=2""
    },
    ""last"": {
      ""href"": ""/v3/apps?order_by=created_at=desc=2=2""
    },
    ""next"": {
      ""href"": ""/v3/apps?order_by=created_at=desc=2=2""
    },
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a"",
      ""name"": ""my_app3"",
      ""desired_state"": ""STOPPED"",
      ""total_desired_instances"": 0,
      ""created_at"": ""1970-01-01T00:00:03Z"",
      ""updated_at"": null,
      ""environment_variables"": {
        ""magic"": ""beautiful""
      },
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/apps/guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a""
        },
        ""processes"": {
          ""href"": ""/v3/apps/guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a/processes""
        },
        ""packages"": {
          ""href"": ""/v3/apps/guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a/packages""
        },
        ""space"": {
          ""href"": ""/v2/spaces/2d7055f8-6130-4428-850d-73ccf66568ec""
        },
        ""start"": {
          ""href"": ""/v3/apps/guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a/start"",
          ""method"": ""PUT""
        },
        ""stop"": {
          ""href"": ""/v3/apps/guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a/stop"",
          ""method"": ""PUT""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a/current_droplet"",
          ""method"": ""PUT""
        }
      }
    },
    {
      ""guid"": ""guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91"",
      ""name"": ""my_app2"",
      ""desired_state"": ""STOPPED"",
      ""total_desired_instances"": 0,
      ""created_at"": ""1970-01-01T00:00:02Z"",
      ""updated_at"": null,
      ""environment_variables"": {

      },
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/apps/guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91""
        },
        ""processes"": {
          ""href"": ""/v3/apps/guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91/processes""
        },
        ""packages"": {
          ""href"": ""/v3/apps/guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91/packages""
        },
        ""space"": {
          ""href"": ""/v2/spaces/2d7055f8-6130-4428-850d-73ccf66568ec""
        },
        ""start"": {
          ""href"": ""/v3/apps/guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91/start"",
          ""method"": ""PUT""
        },
        ""stop"": {
          ""href"": ""/v3/apps/guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91/stop"",
          ""method"": ""PUT""
        },
        ""assign_current_droplet"": {
          ""href"": ""/v3/apps/guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91/current_droplet"",
          ""method"": ""PUT""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();


                var obj = cfClient.AppsExperimental.ListAllApps().Result;

                Assert.AreEqual("guid-acf9ba43-d74a-4eae-b8fd-0f76502e638a", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("my_app3", TestUtil.ToTestableString(obj[0].Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj[0].DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj[0].TotalDesiredInstances), true);
                Assert.AreEqual("1970-01-01T00:00:03Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].UpdatedAt), true);
                Assert.AreEqual("guid-859d4e67-07c8-4c3d-83b2-17fbc2d08b91", TestUtil.ToTestableString(obj[1].Guid), true);
                Assert.AreEqual("my_app2", TestUtil.ToTestableString(obj[1].Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj[1].DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj[1].TotalDesiredInstances), true);
                Assert.AreEqual("1970-01-01T00:00:02Z", TestUtil.ToTestableString(obj[1].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[1].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ListAssociatedPackagesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 1,
    ""first"": {
      ""href"": ""/v3/apps/guid-4fa781a3-5744-45f8-8342-e0b5440585b6/packages?page=1=50""
    },
    ""last"": {
      ""href"": ""/v3/apps/guid-4fa781a3-5744-45f8-8342-e0b5440585b6/packages?page=1=50""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""guid-570d4742-4ac0-47bb-acd4-536fafc296f8"",
      ""type"": ""bits"",
      ""hash"": null,
      ""url"": null,
      ""state"": ""AWAITING_UPLOAD"",
      ""error"": null,
      ""created_at"": ""2015-07-29T12:47:19Z"",
      ""updated_at"": null,
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/packages/guid-570d4742-4ac0-47bb-acd4-536fafc296f8""
        },
        ""upload"": {
          ""href"": ""/v3/packages/guid-570d4742-4ac0-47bb-acd4-536fafc296f8/upload"",
          ""method"": ""POST""
        },
        ""app"": {
          ""href"": ""/v3/apps/guid-4fa781a3-5744-45f8-8342-e0b5440585b6""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.ListAssociatedPackages(guid).Result;

                Assert.AreEqual("guid-570d4742-4ac0-47bb-acd4-536fafc296f8", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("bits", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Hash), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Url), true);
                Assert.AreEqual("AWAITING_UPLOAD", TestUtil.ToTestableString(obj[0].State), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Error), true);
                Assert.AreEqual("2015-07-29T12:47:19Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GettingEnvOfAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{""environment_variables"":{""SOME_KEY"":""some_val""},""staging_env_json"":{""STAGING_ENV"":""staging_value""},""running_env_json"":{""RUNNING_ENV"":""running_value""},""application_env_json"":{""VCAP_APPLICATION"":{""limits"":{""fds"":16384},""application_name"":""app_name"",""application_uris"":[],""name"":""app_name"",""space_name"":""some_space"",""space_id"":""8e90f4a3-ecc3-4f14-91e9-c8b9fd5d3a0f"",""uris"":[],""users"":null}}}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.GettingEnvOfApp(guid).Result;



            }
        }

        [TestMethod]
        public void UpdateAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""guid-62f36144-f30f-4fa0-a866-d36e290a3d19"",
  ""name"": ""new_name"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2015-07-29T12:47:18Z"",
  ""updated_at"": ""2015-07-29T12:47:18Z"",
  ""environment_variables"": {
    ""MY_ENV_VAR"": ""foobar"",
    ""FOOBAR"": ""MY_ENV_VAR""
  },
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/apps/guid-62f36144-f30f-4fa0-a866-d36e290a3d19""
    },
    ""processes"": {
      ""href"": ""/v3/apps/guid-62f36144-f30f-4fa0-a866-d36e290a3d19/processes""
    },
    ""packages"": {
      ""href"": ""/v3/apps/guid-62f36144-f30f-4fa0-a866-d36e290a3d19/packages""
    },
    ""space"": {
      ""href"": ""/v2/spaces/9e10b229-5677-44c7-8813-e75cac1e5aec""
    },
    ""start"": {
      ""href"": ""/v3/apps/guid-62f36144-f30f-4fa0-a866-d36e290a3d19/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/guid-62f36144-f30f-4fa0-a866-d36e290a3d19/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/guid-62f36144-f30f-4fa0-a866-d36e290a3d19/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                UpdateAppRequest value = new UpdateAppRequest();


                var obj = cfClient.AppsExperimental.UpdateApp(guid, value).Result;


                Assert.AreEqual("guid-62f36144-f30f-4fa0-a866-d36e290a3d19", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("new_name", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2015-07-29T12:47:18Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:18Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void StoppingAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""guid-f40f1245-252e-4256-835b-8e075cd63030"",
  ""name"": ""original_name"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2015-07-29T12:47:17Z"",
  ""updated_at"": ""2015-07-29T12:47:17Z"",
  ""environment_variables"": {

  },
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/apps/guid-f40f1245-252e-4256-835b-8e075cd63030""
    },
    ""processes"": {
      ""href"": ""/v3/apps/guid-f40f1245-252e-4256-835b-8e075cd63030/processes""
    },
    ""packages"": {
      ""href"": ""/v3/apps/guid-f40f1245-252e-4256-835b-8e075cd63030/packages""
    },
    ""space"": {
      ""href"": ""/v2/spaces/a1fe4f3c-f8ae-4b1f-8b30-5d4c6908a94f""
    },
    ""desired_droplet"": {
      ""href"": ""/v3/droplets/guid-fe3d9acb-3dbe-4622-8153-1fb2d00717fc""
    },
    ""start"": {
      ""href"": ""/v3/apps/guid-f40f1245-252e-4256-835b-8e075cd63030/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/guid-f40f1245-252e-4256-835b-8e075cd63030/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/guid-f40f1245-252e-4256-835b-8e075cd63030/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();

                StoppingAppRequest value = null;


                var obj = cfClient.AppsExperimental.StoppingApp(guid, value).Result;


                Assert.AreEqual("guid-f40f1245-252e-4256-835b-8e075cd63030", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("original_name", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void CreateAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""f56bf72b-a4b7-4389-88db-b88aad0bdb1e"",
  ""name"": ""my_app"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 0,
  ""created_at"": ""2015-07-29T12:47:18Z"",
  ""updated_at"": null,
  ""environment_variables"": {
    ""open"": ""source""
  },
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/apps/f56bf72b-a4b7-4389-88db-b88aad0bdb1e""
    },
    ""processes"": {
      ""href"": ""/v3/apps/f56bf72b-a4b7-4389-88db-b88aad0bdb1e/processes""
    },
    ""packages"": {
      ""href"": ""/v3/apps/f56bf72b-a4b7-4389-88db-b88aad0bdb1e/packages""
    },
    ""space"": {
      ""href"": ""/v2/spaces/8bcccbc4-675e-4579-b352-0128cc48fc1f""
    },
    ""start"": {
      ""href"": ""/v3/apps/f56bf72b-a4b7-4389-88db-b88aad0bdb1e/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/f56bf72b-a4b7-4389-88db-b88aad0bdb1e/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/f56bf72b-a4b7-4389-88db-b88aad0bdb1e/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)201;
                var cfClient = clients.CreateCloudFoundryClient();

                CreateAppRequest value = new CreateAppRequest();


                var obj = cfClient.AppsExperimental.CreateApp(value).Result;


                Assert.AreEqual("f56bf72b-a4b7-4389-88db-b88aad0bdb1e", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("my_app", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("0", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2015-07-29T12:47:18Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

        [TestMethod]
        public void ListAssociatedProcessesTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""pagination"": {
    ""total_results"": 1,
    ""first"": {
      ""href"": ""/v3/apps/guid-6025922f-b84c-466b-a74b-9a76bb86046a/processes?page=1=50""
    },
    ""last"": {
      ""href"": ""/v3/apps/guid-6025922f-b84c-466b-a74b-9a76bb86046a/processes?page=1=50""
    },
    ""next"": null,
    ""previous"": null
  },
  ""resources"": [
    {
      ""guid"": ""96e571e0-3612-4185-bca1-9c62be537a3c"",
      ""type"": ""web"",
      ""command"": null,
      ""instances"": 1,
      ""created_at"": ""2015-07-29T12:47:26Z"",
      ""updated_at"": ""2015-07-29T12:47:26Z"",
      ""_links"": {
        ""self"": {
          ""href"": ""/v3/processes/96e571e0-3612-4185-bca1-9c62be537a3c""
        },
        ""app"": {
          ""href"": ""/v3/apps/guid-6025922f-b84c-466b-a74b-9a76bb86046a""
        },
        ""space"": {
          ""href"": ""/v2/spaces/fb33eaa6-8526-4d9e-97f0-ebc21cd40ac8""
        }
      }
    }
  ]
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.ListAssociatedProcesses(guid).Result;

                Assert.AreEqual("96e571e0-3612-4185-bca1-9c62be537a3c", TestUtil.ToTestableString(obj[0].Guid), true);
                Assert.AreEqual("web", TestUtil.ToTestableString(obj[0].Type), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj[0].Command), true);
                Assert.AreEqual("1", TestUtil.ToTestableString(obj[0].Instances), true);
                Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj[0].CreatedAt), true);
                Assert.AreEqual("2015-07-29T12:47:26Z", TestUtil.ToTestableString(obj[0].UpdatedAt), true);

            }
        }

        [TestMethod]
        public void GetAppTest()
        {
            using (ShimsContext.Create())
            {
                MockClients clients = new MockClients();

                string json = @"{
  ""guid"": ""guid-800260bd-67ff-4961-b500-8add7b2ace16"",
  ""name"": ""my_app"",
  ""desired_state"": ""STOPPED"",
  ""total_desired_instances"": 3,
  ""created_at"": ""2015-07-29T12:47:17Z"",
  ""updated_at"": null,
  ""environment_variables"": {
    ""darkness"": ""ugly""
  },
  ""_links"": {
    ""self"": {
      ""href"": ""/v3/apps/guid-800260bd-67ff-4961-b500-8add7b2ace16""
    },
    ""processes"": {
      ""href"": ""/v3/apps/guid-800260bd-67ff-4961-b500-8add7b2ace16/processes""
    },
    ""packages"": {
      ""href"": ""/v3/apps/guid-800260bd-67ff-4961-b500-8add7b2ace16/packages""
    },
    ""space"": {
      ""href"": ""/v2/spaces/9f178690-48b7-42d0-96f9-bdd9155b5fe7""
    },
    ""desired_droplet"": {
      ""href"": ""/v3/droplets/a-droplet-guid""
    },
    ""start"": {
      ""href"": ""/v3/apps/guid-800260bd-67ff-4961-b500-8add7b2ace16/start"",
      ""method"": ""PUT""
    },
    ""stop"": {
      ""href"": ""/v3/apps/guid-800260bd-67ff-4961-b500-8add7b2ace16/stop"",
      ""method"": ""PUT""
    },
    ""assign_current_droplet"": {
      ""href"": ""/v3/apps/guid-800260bd-67ff-4961-b500-8add7b2ace16/current_droplet"",
      ""method"": ""PUT""
    }
  }
}";
                clients.JsonResponse = json;

                clients.ExpectedStatusCode = (HttpStatusCode)200;
                var cfClient = clients.CreateCloudFoundryClient();

                Guid? guid = Guid.NewGuid();


                var obj = cfClient.AppsExperimental.GetApp(guid).Result;


                Assert.AreEqual("guid-800260bd-67ff-4961-b500-8add7b2ace16", TestUtil.ToTestableString(obj.Guid), true);
                Assert.AreEqual("my_app", TestUtil.ToTestableString(obj.Name), true);
                Assert.AreEqual("STOPPED", TestUtil.ToTestableString(obj.DesiredState), true);
                Assert.AreEqual("3", TestUtil.ToTestableString(obj.TotalDesiredInstances), true);
                Assert.AreEqual("2015-07-29T12:47:17Z", TestUtil.ToTestableString(obj.CreatedAt), true);
                Assert.AreEqual("", TestUtil.ToTestableString(obj.UpdatedAt), true);

            }
        }

    }
}